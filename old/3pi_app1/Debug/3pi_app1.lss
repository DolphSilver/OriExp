
3pi_app1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000012e  00800100  0000320a  0000329e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000320a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000048d  0080022e  0080022e  000033cc  2**0
                  ALLOC
  3 .stab         00006c48  00000000  00000000  000033cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00009351  00000000  00000000  0000a014  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000006d  00000000  00000000  00013365  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000133d4  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 000001b8  00000000  00000000  00013414  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000022f7  00000000  00000000  000135cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000b1c  00000000  00000000  000158c3  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00001438  00000000  00000000  000163df  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000004f8  00000000  00000000  00017818  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00000716  00000000  00000000  00017d10  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0000137d  00000000  00000000  00018426  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000160  00000000  00000000  000197a3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 35 00 	jmp	0x6a	; 0x6a <__dtors_end>
       4:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       8:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
       c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      10:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      14:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      18:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      1c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      20:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      24:	0c 94 f5 0d 	jmp	0x1bea	; 0x1bea <__vector_9>
      28:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      2c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      30:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      34:	0c 94 11 09 	jmp	0x1222	; 0x1222 <__vector_13>
      38:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      3c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      40:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      44:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      48:	0c 94 37 0d 	jmp	0x1a6e	; 0x1a6e <__vector_18>
      4c:	0c 94 d0 0d 	jmp	0x1ba0	; 0x1ba0 <__vector_19>
      50:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      54:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      58:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      5c:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      60:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>
      64:	0c 94 52 00 	jmp	0xa4	; 0xa4 <__bad_interrupt>

00000068 <__ctors_end>:
      68:	b9 0e       	add	r11, r25

0000006a <__dtors_end>:
      6a:	11 24       	eor	r1, r1
      6c:	1f be       	out	0x3f, r1	; 63
      6e:	cf ef       	ldi	r28, 0xFF	; 255
      70:	d8 e0       	ldi	r29, 0x08	; 8
      72:	de bf       	out	0x3e, r29	; 62
      74:	cd bf       	out	0x3d, r28	; 61

00000076 <__do_copy_data>:
      76:	12 e0       	ldi	r17, 0x02	; 2
      78:	a0 e0       	ldi	r26, 0x00	; 0
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	ea e0       	ldi	r30, 0x0A	; 10
      7e:	f2 e3       	ldi	r31, 0x32	; 50
      80:	02 c0       	rjmp	.+4      	; 0x86 <__do_copy_data+0x10>
      82:	05 90       	lpm	r0, Z+
      84:	0d 92       	st	X+, r0
      86:	ae 32       	cpi	r26, 0x2E	; 46
      88:	b1 07       	cpc	r27, r17
      8a:	d9 f7       	brne	.-10     	; 0x82 <__do_copy_data+0xc>

0000008c <__do_clear_bss>:
      8c:	26 e0       	ldi	r18, 0x06	; 6
      8e:	ae e2       	ldi	r26, 0x2E	; 46
      90:	b2 e0       	ldi	r27, 0x02	; 2
      92:	01 c0       	rjmp	.+2      	; 0x96 <.do_clear_bss_start>

00000094 <.do_clear_bss_loop>:
      94:	1d 92       	st	X+, r1

00000096 <.do_clear_bss_start>:
      96:	ab 3b       	cpi	r26, 0xBB	; 187
      98:	b2 07       	cpc	r27, r18
      9a:	e1 f7       	brne	.-8      	; 0x94 <.do_clear_bss_loop>
      9c:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <main>
      a0:	0c 94 f8 18 	jmp	0x31f0	; 0x31f0 <__do_global_dtors>

000000a4 <__bad_interrupt>:
      a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a8 <print_two_messages>:
      clear();
    }
  }

  wait_for_button(BUTTON_B);
}
      a8:	0f 93       	push	r16
      aa:	1f 93       	push	r17
      ac:	cf 93       	push	r28
      ae:	df 93       	push	r29
  print(message);
  while(1);
}

void print_two_messages(char *message1, char *message2)
{
      b0:	8c 01       	movw	r16, r24
      b2:	eb 01       	movw	r28, r22
  stop();
      b4:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
  clear();
      b8:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
  lcd_goto_xy(0,0);
      bc:	60 e0       	ldi	r22, 0x00	; 0
      be:	80 e0       	ldi	r24, 0x00	; 0
      c0:	0e 94 a7 0b 	call	0x174e	; 0x174e <lcd_goto_xy>
  print(message1);
      c4:	c8 01       	movw	r24, r16
      c6:	0e 94 8b 0a 	call	0x1516	; 0x1516 <print>
  lcd_goto_xy(0,1);
      ca:	61 e0       	ldi	r22, 0x01	; 1
      cc:	80 e0       	ldi	r24, 0x00	; 0
      ce:	0e 94 a7 0b 	call	0x174e	; 0x174e <lcd_goto_xy>
  print(message2);
      d2:	ce 01       	movw	r24, r28
      d4:	0e 94 8b 0a 	call	0x1516	; 0x1516 <print>
}
      d8:	df 91       	pop	r29
      da:	cf 91       	pop	r28
      dc:	1f 91       	pop	r17
      de:	0f 91       	pop	r16
      e0:	08 95       	ret

000000e2 <follow_line_2_init>:
static int k_p_inv = 0;
static int k_i_inv = 0;

void follow_line_2_init(int speed, int p_gain_inv, int i_gain_inv)
{
	base_speed = speed;
      e2:	90 93 a0 02 	sts	0x02A0, r25
      e6:	80 93 9f 02 	sts	0x029F, r24
	k_p_inv = p_gain_inv;
      ea:	70 93 9e 02 	sts	0x029E, r23
      ee:	60 93 9d 02 	sts	0x029D, r22
	k_i_inv = i_gain_inv;
      f2:	50 93 9c 02 	sts	0x029C, r21
      f6:	40 93 9b 02 	sts	0x029B, r20
	i = 0;
      fa:	10 92 a2 02 	sts	0x02A2, r1
      fe:	10 92 a1 02 	sts	0x02A1, r1
     102:	08 95       	ret

00000104 <follow_line_2>:
}

void follow_line_2(void)
{
     104:	cf 93       	push	r28
     106:	df 93       	push	r29
     108:	cd b7       	in	r28, 0x3d	; 61
     10a:	de b7       	in	r29, 0x3e	; 62
     10c:	2a 97       	sbiw	r28, 0x0a	; 10
     10e:	0f b6       	in	r0, 0x3f	; 63
     110:	f8 94       	cli
     112:	de bf       	out	0x3e, r29	; 62
     114:	0f be       	out	0x3f, r0	; 63
     116:	cd bf       	out	0x3d, r28	; 61
	int p;
	int motorDelta;
	unsigned int values[5];
	
	(void)read_line(values,IR_EMITTERS_ON);
     118:	61 e0       	ldi	r22, 0x01	; 1
     11a:	ce 01       	movw	r24, r28
     11c:	01 96       	adiw	r24, 0x01	; 1
     11e:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <read_line>

	//Sensors numebered from left to right
	if( (values[3]>500) && values[1]>500 ){
     122:	2f 81       	ldd	r18, Y+7	; 0x07
     124:	38 85       	ldd	r19, Y+8	; 0x08
     126:	25 3f       	cpi	r18, 0xF5	; 245
     128:	41 e0       	ldi	r20, 0x01	; 1
     12a:	34 07       	cpc	r19, r20
     12c:	70 f0       	brcs	.+28     	; 0x14a <follow_line_2+0x46>
     12e:	8b 81       	ldd	r24, Y+3	; 0x03
     130:	9c 81       	ldd	r25, Y+4	; 0x04
     132:	85 3f       	cpi	r24, 0xF5	; 245
     134:	91 40       	sbci	r25, 0x01	; 1
     136:	48 f0       	brcs	.+18     	; 0x14a <follow_line_2+0x46>
		p = values[4]-values[0];
     138:	29 85       	ldd	r18, Y+9	; 0x09
     13a:	3a 85       	ldd	r19, Y+10	; 0x0a
     13c:	89 81       	ldd	r24, Y+1	; 0x01
     13e:	9a 81       	ldd	r25, Y+2	; 0x02
     140:	a9 01       	movw	r20, r18
     142:	48 1b       	sub	r20, r24
     144:	59 0b       	sbc	r21, r25
     146:	ca 01       	movw	r24, r20
     148:	06 c0       	rjmp	.+12     	; 0x156 <follow_line_2+0x52>
	}
	else {
		p = values[3]-values[1];		
     14a:	8b 81       	ldd	r24, Y+3	; 0x03
     14c:	9c 81       	ldd	r25, Y+4	; 0x04
     14e:	a9 01       	movw	r20, r18
     150:	48 1b       	sub	r20, r24
     152:	59 0b       	sbc	r21, r25
     154:	ca 01       	movw	r24, r20
	}

	i += p;
     156:	e0 91 a1 02 	lds	r30, 0x02A1
     15a:	f0 91 a2 02 	lds	r31, 0x02A2
     15e:	e8 0f       	add	r30, r24
     160:	f9 1f       	adc	r31, r25
     162:	f0 93 a2 02 	sts	0x02A2, r31
     166:	e0 93 a1 02 	sts	0x02A1, r30

	motorDelta = p / k_p_inv + i / k_i_inv;
     16a:	60 91 9d 02 	lds	r22, 0x029D
     16e:	70 91 9e 02 	lds	r23, 0x029E
     172:	0e 94 e5 13 	call	0x27ca	; 0x27ca <__divmodhi4>
     176:	9b 01       	movw	r18, r22
     178:	60 91 9b 02 	lds	r22, 0x029B
     17c:	70 91 9c 02 	lds	r23, 0x029C
     180:	cf 01       	movw	r24, r30
     182:	0e 94 e5 13 	call	0x27ca	; 0x27ca <__divmodhi4>
     186:	62 0f       	add	r22, r18
     188:	73 1f       	adc	r23, r19
	set_m1_speed(base_speed + motorDelta);
     18a:	80 91 9f 02 	lds	r24, 0x029F
     18e:	90 91 a0 02 	lds	r25, 0x02A0
     192:	86 0f       	add	r24, r22
     194:	97 1f       	adc	r25, r23
     196:	0e 94 76 0c 	call	0x18ec	; 0x18ec <set_m1_speed>
	set_m2_speed(base_speed);
     19a:	80 91 9f 02 	lds	r24, 0x029F
     19e:	90 91 a0 02 	lds	r25, 0x02A0
     1a2:	0e 94 9a 0c 	call	0x1934	; 0x1934 <set_m2_speed>
     1a6:	2a 96       	adiw	r28, 0x0a	; 10
     1a8:	0f b6       	in	r0, 0x3f	; 63
     1aa:	f8 94       	cli
     1ac:	de bf       	out	0x3e, r29	; 62
     1ae:	0f be       	out	0x3f, r0	; 63
     1b0:	cd bf       	out	0x3d, r28	; 61
     1b2:	df 91       	pop	r29
     1b4:	cf 91       	pop	r28
     1b6:	08 95       	ret

000001b8 <main>:
// This is the main function, where the code starts.  All C programs
// must have a main() function defined somewhere.
#ifdef AVR_3PI
int main()
{
   startup();
     1b8:	0e 94 97 02 	call	0x52e	; 0x52e <startup>
   // We should never reach this point..
   return 0;
}
     1bc:	80 e0       	ldi	r24, 0x00	; 0
     1be:	90 e0       	ldi	r25, 0x00	; 0
     1c0:	08 95       	ret

000001c2 <initialize>:
void initialize()
{
	// This must be called at the beginning of 3pi code, to set up the
	// sensors.  We use a value of 2000 for the timeout, which
	// corresponds to 2000*0.4 us = 0.8 ms on our 20 MHz processor.
	pololu_3pi_init(2000);
     1c2:	80 ed       	ldi	r24, 0xD0	; 208
     1c4:	97 e0       	ldi	r25, 0x07	; 7
     1c6:	0e 94 b5 0e 	call	0x1d6a	; 0x1d6a <pololu_3pi_init>
#endif // __cplusplus

static inline void set_analog_mode(unsigned char mode)
{
	if (mode == MODE_10_BIT)
		ADMUX &= ~(1 << ADLAR);	// right-adjust result (ADC has result)
     1ca:	ec e7       	ldi	r30, 0x7C	; 124
     1cc:	f0 e0       	ldi	r31, 0x00	; 0
     1ce:	80 81       	ld	r24, Z
     1d0:	8f 7d       	andi	r24, 0xDF	; 223
     1d2:	80 83       	st	Z, r24
     1d4:	08 95       	ret

000001d6 <calibrate_sensors>:
const int           LowSpeedLeft   = 50;
const int           LowSpeedRight  = 50;

/* This function handle the calibration of the line sensors. */
void calibrate_sensors(void)
{
     1d6:	cf 93       	push	r28
     1d8:	df 93       	push	r29
     1da:	ca e0       	ldi	r28, 0x0A	; 10
     1dc:	d0 e0       	ldi	r29, 0x00	; 0
	int i;
	for (i = 0; i<10;i++) 
	{
		set_m1_speed(-LowSpeedLeft);
     1de:	8e ec       	ldi	r24, 0xCE	; 206
     1e0:	9f ef       	ldi	r25, 0xFF	; 255
     1e2:	0e 94 76 0c 	call	0x18ec	; 0x18ec <set_m1_speed>
		set_m2_speed(LowSpeedRight);
     1e6:	82 e3       	ldi	r24, 0x32	; 50
     1e8:	90 e0       	ldi	r25, 0x00	; 0
     1ea:	0e 94 9a 0c 	call	0x1934	; 0x1934 <set_m2_speed>
		calibrate_line_sensors(IR_EMITTERS_ON);
     1ee:	81 e0       	ldi	r24, 0x01	; 1
     1f0:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <calibrate_line_sensors>
		delay_ms(10);
     1f4:	8a e0       	ldi	r24, 0x0A	; 10
     1f6:	90 e0       	ldi	r25, 0x00	; 0
     1f8:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
     1fc:	21 97       	sbiw	r28, 0x01	; 1

/* This function handle the calibration of the line sensors. */
void calibrate_sensors(void)
{
	int i;
	for (i = 0; i<10;i++) 
     1fe:	79 f7       	brne	.-34     	; 0x1de <calibrate_sensors+0x8>
		set_m1_speed(-LowSpeedLeft);
		set_m2_speed(LowSpeedRight);
		calibrate_line_sensors(IR_EMITTERS_ON);
		delay_ms(10);
	}
	stop();
     200:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
     204:	c4 e1       	ldi	r28, 0x14	; 20
     206:	d0 e0       	ldi	r29, 0x00	; 0
	for (i = 0; i<20;i++) 
	{
		set_m1_speed(LowSpeedLeft);
     208:	82 e3       	ldi	r24, 0x32	; 50
     20a:	90 e0       	ldi	r25, 0x00	; 0
     20c:	0e 94 76 0c 	call	0x18ec	; 0x18ec <set_m1_speed>
		set_m2_speed(-LowSpeedRight);
     210:	8e ec       	ldi	r24, 0xCE	; 206
     212:	9f ef       	ldi	r25, 0xFF	; 255
     214:	0e 94 9a 0c 	call	0x1934	; 0x1934 <set_m2_speed>
		calibrate_line_sensors(IR_EMITTERS_ON);
     218:	81 e0       	ldi	r24, 0x01	; 1
     21a:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <calibrate_line_sensors>
		delay_ms(10);
     21e:	8a e0       	ldi	r24, 0x0A	; 10
     220:	90 e0       	ldi	r25, 0x00	; 0
     222:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
     226:	21 97       	sbiw	r28, 0x01	; 1
		set_m2_speed(LowSpeedRight);
		calibrate_line_sensors(IR_EMITTERS_ON);
		delay_ms(10);
	}
	stop();
	for (i = 0; i<20;i++) 
     228:	79 f7       	brne	.-34     	; 0x208 <calibrate_sensors+0x32>
		set_m1_speed(LowSpeedLeft);
		set_m2_speed(-LowSpeedRight);
		calibrate_line_sensors(IR_EMITTERS_ON);
		delay_ms(10);
	} 
	stop();
     22a:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
     22e:	ca e0       	ldi	r28, 0x0A	; 10
     230:	d0 e0       	ldi	r29, 0x00	; 0
	for (i = 0; i<10;i++) 
	{
		set_m1_speed(-LowSpeedLeft);
     232:	8e ec       	ldi	r24, 0xCE	; 206
     234:	9f ef       	ldi	r25, 0xFF	; 255
     236:	0e 94 76 0c 	call	0x18ec	; 0x18ec <set_m1_speed>
		set_m2_speed(LowSpeedRight);
     23a:	82 e3       	ldi	r24, 0x32	; 50
     23c:	90 e0       	ldi	r25, 0x00	; 0
     23e:	0e 94 9a 0c 	call	0x1934	; 0x1934 <set_m2_speed>
		calibrate_line_sensors(IR_EMITTERS_ON);
     242:	81 e0       	ldi	r24, 0x01	; 1
     244:	0e 94 79 0e 	call	0x1cf2	; 0x1cf2 <calibrate_line_sensors>
		delay_ms(10);
     248:	8a e0       	ldi	r24, 0x0A	; 10
     24a:	90 e0       	ldi	r25, 0x00	; 0
     24c:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
     250:	21 97       	sbiw	r28, 0x01	; 1
		set_m2_speed(-LowSpeedRight);
		calibrate_line_sensors(IR_EMITTERS_ON);
		delay_ms(10);
	} 
	stop();
	for (i = 0; i<10;i++) 
     252:	79 f7       	brne	.-34     	; 0x232 <calibrate_sensors+0x5c>
		set_m1_speed(-LowSpeedLeft);
		set_m2_speed(LowSpeedRight);
		calibrate_line_sensors(IR_EMITTERS_ON);
		delay_ms(10);
	}
	stop();
     254:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
}
     258:	df 91       	pop	r29
     25a:	cf 91       	pop	r28
     25c:	08 95       	ret

0000025e <orienteering>:
    }
  }
}

void orienteering(void)
{
     25e:	2f 92       	push	r2
     260:	3f 92       	push	r3
     262:	4f 92       	push	r4
     264:	5f 92       	push	r5
     266:	6f 92       	push	r6
     268:	7f 92       	push	r7
     26a:	8f 92       	push	r8
     26c:	9f 92       	push	r9
     26e:	af 92       	push	r10
     270:	bf 92       	push	r11
     272:	cf 92       	push	r12
     274:	df 92       	push	r13
     276:	ef 92       	push	r14
     278:	ff 92       	push	r15
     27a:	0f 93       	push	r16
     27c:	1f 93       	push	r17
     27e:	cf 93       	push	r28
     280:	df 93       	push	r29
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	ac 97       	sbiw	r28, 0x2c	; 44
     288:	0f b6       	in	r0, 0x3f	; 63
     28a:	f8 94       	cli
     28c:	de bf       	out	0x3e, r29	; 62
     28e:	0f be       	out	0x3f, r0	; 63
     290:	cd bf       	out	0x3d, r28	; 61

  if(buttonPressed == BUTTON_A)
     292:	80 91 c8 02 	lds	r24, 0x02C8
     296:	82 30       	cpi	r24, 0x02	; 2
     298:	01 f5       	brne	.+64     	; 0x2da <orienteering+0x7c>
		
		uint8_t sh_nbr = 0;
		readSH(&sh_nbr);
		
		clear();
		printf("SH=%u", sh_nbr);
     29a:	0e e8       	ldi	r16, 0x8E	; 142
     29c:	11 e0       	ldi	r17, 0x01	; 1
		//printf("SH=%u", sh_code);
		//stop();
		//wait_for_button(BUTTON_A);
		//delay_ms(1000);
		
		clear();
     29e:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
		
		uint8_t sh_nbr = 0;
     2a2:	19 82       	std	Y+1, r1	; 0x01
		readSH(&sh_nbr);
     2a4:	ce 01       	movw	r24, r28
     2a6:	01 96       	adiw	r24, 0x01	; 1
     2a8:	0e 94 1f 06 	call	0xc3e	; 0xc3e <readSH>
		
		clear();
     2ac:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
		printf("SH=%u", sh_nbr);
     2b0:	89 81       	ldd	r24, Y+1	; 0x01
     2b2:	1f 92       	push	r1
     2b4:	8f 93       	push	r24
     2b6:	1f 93       	push	r17
     2b8:	0f 93       	push	r16
     2ba:	0e 94 11 16 	call	0x2c22	; 0x2c22 <printf>
		stop();
     2be:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
		wait_for_button(BUTTON_A);
     2c2:	82 e0       	ldi	r24, 0x02	; 2
     2c4:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <wait_for_button>
		delay_ms(1000);
     2c8:	88 ee       	ldi	r24, 0xE8	; 232
     2ca:	93 e0       	ldi	r25, 0x03	; 3
     2cc:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
		//int speed = 50;
		//int p_gain_inv = 30;
		//int i_gain_inv = 10000;
		//follow_line_2_init(speed, p_gain_inv, i_gain_inv);
		//follow_line_2();
	}
     2d0:	0f 90       	pop	r0
     2d2:	0f 90       	pop	r0
     2d4:	0f 90       	pop	r0
     2d6:	0f 90       	pop	r0
     2d8:	e2 cf       	rjmp	.-60     	; 0x29e <orienteering+0x40>
  }
  else if(buttonPressed == BUTTON_B)
     2da:	80 31       	cpi	r24, 0x10	; 16
     2dc:	09 f0       	breq	.+2      	; 0x2e0 <orienteering+0x82>
     2de:	f1 c0       	rjmp	.+482    	; 0x4c2 <orienteering+0x264>
    /* When displayed "Press ABC" -> press button B to enter this function. */
    /* Add you application software to this function in order to solve the challenge */
    
	//run_orienteering(0);
	
	const int allowedReads[6] = {(int)0x20, (int)0x70, (int)0x00, (int)0x20, (int)0xA0, (int)0x28};
     2e0:	8c e0       	ldi	r24, 0x0C	; 12
     2e2:	e5 e1       	ldi	r30, 0x15	; 21
     2e4:	f1 e0       	ldi	r31, 0x01	; 1
     2e6:	de 01       	movw	r26, r28
     2e8:	11 96       	adiw	r26, 0x01	; 1
     2ea:	01 90       	ld	r0, Z+
     2ec:	0d 92       	st	X+, r0
     2ee:	8a 95       	dec	r24
     2f0:	e1 f7       	brne	.-8      	; 0x2ea <orienteering+0x8c>
	uint8_t finishedFlag;
	uint8_t i;
	uint8_t j = 0;
	uint16_t N_samp = 20; //max 64 if 16 bit...
	unsigned int values[5];
	unsigned int sens_sum[5] = {0, 0, 0, 0, 0};
     2f2:	fe 01       	movw	r30, r28
     2f4:	77 96       	adiw	r30, 0x17	; 23
     2f6:	8a e0       	ldi	r24, 0x0A	; 10
     2f8:	df 01       	movw	r26, r30
     2fa:	1d 92       	st	X+, r1
     2fc:	8a 95       	dec	r24
     2fe:	e9 f7       	brne	.-6      	; 0x2fa <orienteering+0x9c>
	unsigned int treshold[5] = {N_samp*400, N_samp*700, N_samp*800, N_samp*700, N_samp*400};
     300:	80 e4       	ldi	r24, 0x40	; 64
     302:	9f e1       	ldi	r25, 0x1F	; 31
     304:	9e 87       	std	Y+14, r25	; 0x0e
     306:	8d 87       	std	Y+13, r24	; 0x0d
     308:	20 eb       	ldi	r18, 0xB0	; 176
     30a:	36 e3       	ldi	r19, 0x36	; 54
     30c:	38 8b       	std	Y+16, r19	; 0x10
     30e:	2f 87       	std	Y+15, r18	; 0x0f
     310:	40 e8       	ldi	r20, 0x80	; 128
     312:	5e e3       	ldi	r21, 0x3E	; 62
     314:	5a 8b       	std	Y+18, r21	; 0x12
     316:	49 8b       	std	Y+17, r20	; 0x11
     318:	3c 8b       	std	Y+20, r19	; 0x14
     31a:	2b 8b       	std	Y+19, r18	; 0x13
     31c:	9e 8b       	std	Y+22, r25	; 0x16
     31e:	8d 8b       	std	Y+21, r24	; 0x15
		
	uint16_t speed = 50;
	uint16_t p_gain_inv = 30;
	uint16_t i_gain_inv = 10000;

	follow_line_2_init(speed, p_gain_inv, i_gain_inv);
     320:	40 e1       	ldi	r20, 0x10	; 16
     322:	57 e2       	ldi	r21, 0x27	; 39
     324:	6e e1       	ldi	r22, 0x1E	; 30
     326:	70 e0       	ldi	r23, 0x00	; 0
     328:	82 e3       	ldi	r24, 0x32	; 50
     32a:	90 e0       	ldi	r25, 0x00	; 0
     32c:	0e 94 71 00 	call	0xe2	; 0xe2 <follow_line_2_init>
	
	while(!finishedFlag){
     330:	00 e0       	ldi	r16, 0x00	; 0
     332:	10 e0       	ldi	r17, 0x00	; 0
		
		//print_two_messages(last_str, read_str);
		//wait_for_button(BUTTON_B);
		//delay_ms(1000);
		
		(void)read_line(values,IR_EMITTERS_ON);
     334:	7e 01       	movw	r14, r28
     336:	b1 e2       	ldi	r27, 0x21	; 33
     338:	eb 0e       	add	r14, r27
     33a:	f1 1c       	adc	r15, r1
     33c:	3e 01       	movw	r6, r28
     33e:	27 e1       	ldi	r18, 0x17	; 23
     340:	62 0e       	add	r6, r18
     342:	71 1c       	adc	r7, r1
     344:	26 2c       	mov	r2, r6
     346:	37 2c       	mov	r3, r7
     348:	6e 01       	movw	r12, r28
     34a:	3d e0       	ldi	r19, 0x0D	; 13
     34c:	c3 0e       	add	r12, r19
     34e:	d1 1c       	adc	r13, r1
		for(i=0; i<5; i++){
			sens_sum[i] = sens_sum[i] + values[i];
		}
		j += 1;
		if(j >= N_samp){
     350:	41 2c       	mov	r4, r1
     352:	51 2c       	mov	r5, r1
     354:	91 2c       	mov	r9, r1
				if(sens_sum[i] > treshold[i]){
					//clear();
					//printf("%u\n", i);
					//delay_ms(1000);
					mask = 128;
					mask >>= i;
     356:	68 94       	set
     358:	aa 24       	eor	r10, r10
     35a:	a7 f8       	bld	r10, 7
     35c:	b1 2c       	mov	r11, r1
	follow_line_2_init(speed, p_gain_inv, i_gain_inv);
	
	while(!finishedFlag){
		//line = read_line(values,IR_EMITTERS_ON);
		//follow_line(line);
		follow_line_2();
     35e:	0e 94 82 00 	call	0x104	; 0x104 <follow_line_2>
		
		//print_two_messages(last_str, read_str);
		//wait_for_button(BUTTON_B);
		//delay_ms(1000);
		
		(void)read_line(values,IR_EMITTERS_ON);
     362:	61 e0       	ldi	r22, 0x01	; 1
     364:	c7 01       	movw	r24, r14
     366:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <read_line>
     36a:	97 01       	movw	r18, r14
     36c:	7c a6       	std	Y+44, r7	; 0x2c
     36e:	6b a6       	std	Y+43, r6	; 0x2b
     370:	e2 2d       	mov	r30, r2
     372:	f3 2d       	mov	r31, r3
		for(i=0; i<5; i++){
			sens_sum[i] = sens_sum[i] + values[i];
     374:	d9 01       	movw	r26, r18
     376:	8d 91       	ld	r24, X+
     378:	9d 91       	ld	r25, X+
     37a:	9d 01       	movw	r18, r26
     37c:	40 81       	ld	r20, Z
     37e:	51 81       	ldd	r21, Z+1	; 0x01
     380:	84 0f       	add	r24, r20
     382:	95 1f       	adc	r25, r21
     384:	81 93       	st	Z+, r24
     386:	91 93       	st	Z+, r25
		//print_two_messages(last_str, read_str);
		//wait_for_button(BUTTON_B);
		//delay_ms(1000);
		
		(void)read_line(values,IR_EMITTERS_ON);
		for(i=0; i<5; i++){
     388:	ee 15       	cp	r30, r14
     38a:	ff 05       	cpc	r31, r15
     38c:	99 f7       	brne	.-26     	; 0x374 <orienteering+0x116>
			sens_sum[i] = sens_sum[i] + values[i];
		}
		j += 1;
     38e:	1f 5f       	subi	r17, 0xFF	; 255
		if(j >= N_samp){
     390:	14 31       	cpi	r17, 0x14	; 20
     392:	08 f4       	brcc	.+2      	; 0x396 <orienteering+0x138>
     394:	c6 c0       	rjmp	.+396    	; 0x522 <orienteering+0x2c4>
     396:	f6 01       	movw	r30, r12
     398:	84 2d       	mov	r24, r4
     39a:	95 2d       	mov	r25, r5
     39c:	19 2d       	mov	r17, r9
     39e:	6b a5       	ldd	r22, Y+43	; 0x2b
     3a0:	7c a5       	ldd	r23, Y+44	; 0x2c
			// transform to byte
			readByte_temp = 0;
			for(i=0; i<5; i++){
				if(sens_sum[i] > treshold[i]){
     3a2:	21 91       	ld	r18, Z+
     3a4:	31 91       	ld	r19, Z+
     3a6:	db 01       	movw	r26, r22
     3a8:	4d 91       	ld	r20, X+
     3aa:	5c 91       	ld	r21, X
     3ac:	24 17       	cp	r18, r20
     3ae:	35 07       	cpc	r19, r21
     3b0:	40 f4       	brcc	.+16     	; 0x3c2 <orienteering+0x164>
					//clear();
					//printf("%u\n", i);
					//delay_ms(1000);
					mask = 128;
					mask >>= i;
     3b2:	95 01       	movw	r18, r10
     3b4:	08 2e       	mov	r0, r24
     3b6:	02 c0       	rjmp	.+4      	; 0x3bc <orienteering+0x15e>
     3b8:	35 95       	asr	r19
     3ba:	27 95       	ror	r18
     3bc:	0a 94       	dec	r0
     3be:	e2 f7       	brpl	.-8      	; 0x3b8 <orienteering+0x15a>
					readByte_temp |= mask; 
     3c0:	12 2b       	or	r17, r18
				}
				sens_sum[i] = 0;
     3c2:	db 01       	movw	r26, r22
     3c4:	1d 92       	st	X+, r1
     3c6:	1c 92       	st	X, r1
     3c8:	2b a5       	ldd	r18, Y+43	; 0x2b
     3ca:	3c a5       	ldd	r19, Y+44	; 0x2c
     3cc:	2e 5f       	subi	r18, 0xFE	; 254
     3ce:	3f 4f       	sbci	r19, 0xFF	; 255
     3d0:	3c a7       	std	Y+44, r19	; 0x2c
     3d2:	2b a7       	std	Y+43, r18	; 0x2b
     3d4:	01 96       	adiw	r24, 0x01	; 1
		}
		j += 1;
		if(j >= N_samp){
			// transform to byte
			readByte_temp = 0;
			for(i=0; i<5; i++){
     3d6:	85 30       	cpi	r24, 0x05	; 5
     3d8:	91 05       	cpc	r25, r1
     3da:	09 f7       	brne	.-62     	; 0x39e <orienteering+0x140>
     3dc:	fe 01       	movw	r30, r28
     3de:	31 96       	adiw	r30, 0x01	; 1
     3e0:	80 2e       	mov	r8, r16
				}
				sens_sum[i] = 0;
			}
			j = 0;
			for(i=0; i < N_allowed; i++){
				if(readByte_temp == allowedReads[i]){
     3e2:	81 2f       	mov	r24, r17
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	21 91       	ld	r18, Z+
     3e8:	31 91       	ld	r19, Z+
     3ea:	82 17       	cp	r24, r18
     3ec:	93 07       	cpc	r25, r19
     3ee:	09 f4       	brne	.+2      	; 0x3f2 <orienteering+0x194>
     3f0:	81 2e       	mov	r8, r17
					readByte_temp |= mask; 
				}
				sens_sum[i] = 0;
			}
			j = 0;
			for(i=0; i < N_allowed; i++){
     3f2:	ec 15       	cp	r30, r12
     3f4:	fd 05       	cpc	r31, r13
     3f6:	b9 f7       	brne	.-18     	; 0x3e6 <orienteering+0x188>
				if(readByte_temp == allowedReads[i]){
					readByte = readByte_temp;
				}
			}
		}
		if(readByte == lastByte){
     3f8:	80 16       	cp	r8, r16
     3fa:	09 f4       	brne	.+2      	; 0x3fe <orienteering+0x1a0>
     3fc:	94 c0       	rjmp	.+296    	; 0x526 <orienteering+0x2c8>
			//printf("Hej\n");
			//wait_for_button(BUTTON_B);
			//delay_ms(1000);
		}
		else{ //new byte: we have 2 unique
			symbIdent = ((uint16_t)lastByte <<8) | readByte;
     3fe:	88 2d       	mov	r24, r8
     400:	90 e0       	ldi	r25, 0x00	; 0
     402:	90 2b       	or	r25, r16
			//clear();
			//printf("0:%03u\n", lastByte);
			//printf("1:%03u", readByte);
			//wait_for_button(BUTTON_B);
			//delay_ms(1000);
			if(symbIdent == EV_BC_START){
     404:	80 37       	cpi	r24, 0x70	; 112
     406:	30 e2       	ldi	r19, 0x20	; 32
     408:	93 07       	cpc	r25, r19
     40a:	71 f4       	brne	.+28     	; 0x428 <orienteering+0x1ca>
				stop();
     40c:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
				print_two_messages("EV:", "BC_START");	
     410:	64 e9       	ldi	r22, 0x94	; 148
     412:	71 e0       	ldi	r23, 0x01	; 1
     414:	8d e9       	ldi	r24, 0x9D	; 157
     416:	91 e0       	ldi	r25, 0x01	; 1
     418:	0e 94 54 00 	call	0xa8	; 0xa8 <print_two_messages>
				delay_ms(1000);
     41c:	88 ee       	ldi	r24, 0xE8	; 232
     41e:	93 e0       	ldi	r25, 0x03	; 3
     420:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
					mask >>= i;
					readByte_temp |= mask; 
				}
				sens_sum[i] = 0;
			}
			j = 0;
     424:	19 2d       	mov	r17, r9
     426:	81 c0       	rjmp	.+258    	; 0x52a <orienteering+0x2cc>
				}
				else{
					read_bc = 1;	
				}
			}
			else if(symbIdent == EV_BC_STOP){
     428:	81 15       	cp	r24, r1
     42a:	40 e7       	ldi	r20, 0x70	; 112
     42c:	94 07       	cpc	r25, r20
     42e:	71 f4       	brne	.+28     	; 0x44c <orienteering+0x1ee>
				stop();
     430:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
				print_two_messages("EV:", "BC_STOP");
     434:	61 ea       	ldi	r22, 0xA1	; 161
     436:	71 e0       	ldi	r23, 0x01	; 1
     438:	8d e9       	ldi	r24, 0x9D	; 157
     43a:	91 e0       	ldi	r25, 0x01	; 1
     43c:	0e 94 54 00 	call	0xa8	; 0xa8 <print_two_messages>
				delay_ms(1000);
     440:	88 ee       	ldi	r24, 0xE8	; 232
     442:	93 e0       	ldi	r25, 0x03	; 3
     444:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
					mask >>= i;
					readByte_temp |= mask; 
				}
				sens_sum[i] = 0;
			}
			j = 0;
     448:	19 2d       	mov	r17, r9
     44a:	6f c0       	rjmp	.+222    	; 0x52a <orienteering+0x2cc>
				print_two_messages("EV:", "BC_STOP");
				delay_ms(1000);
				read_bc = 0;
				read_sh_bc = 0;
			}
			else if((symbIdent == EV_LEFT_BIT_HIGH_1) || (symbIdent == EV_LEFT_BIT_HIGH_2)){
     44c:	9c 01       	movw	r18, r24
     44e:	37 7f       	andi	r19, 0xF7	; 247
     450:	20 3a       	cpi	r18, 0xA0	; 160
     452:	30 42       	sbci	r19, 0x20	; 32
     454:	71 f4       	brne	.+28     	; 0x472 <orienteering+0x214>
				stop();
     456:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
				print_two_messages("EV:", "LEFTBIT");
     45a:	69 ea       	ldi	r22, 0xA9	; 169
     45c:	71 e0       	ldi	r23, 0x01	; 1
     45e:	8d e9       	ldi	r24, 0x9D	; 157
     460:	91 e0       	ldi	r25, 0x01	; 1
     462:	0e 94 54 00 	call	0xa8	; 0xa8 <print_two_messages>
				delay_ms(1000);
     466:	88 ee       	ldi	r24, 0xE8	; 232
     468:	93 e0       	ldi	r25, 0x03	; 3
     46a:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
					mask >>= i;
					readByte_temp |= mask; 
				}
				sens_sum[i] = 0;
			}
			j = 0;
     46e:	19 2d       	mov	r17, r9
     470:	5c c0       	rjmp	.+184    	; 0x52a <orienteering+0x2cc>
				}
				else{
					;
				}
			}
			else if((symbIdent == EV_RIGHT_BIT_HIGH_1) || (symbIdent == EV_RIGHT_BIT_HIGH_2)){
     472:	9f 77       	andi	r25, 0x7F	; 127
     474:	88 32       	cpi	r24, 0x28	; 40
     476:	90 42       	sbci	r25, 0x20	; 32
     478:	71 f4       	brne	.+28     	; 0x496 <orienteering+0x238>
				stop();
     47a:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
				print_two_messages("EV:", "RIGHTBIT");
     47e:	61 eb       	ldi	r22, 0xB1	; 177
     480:	71 e0       	ldi	r23, 0x01	; 1
     482:	8d e9       	ldi	r24, 0x9D	; 157
     484:	91 e0       	ldi	r25, 0x01	; 1
     486:	0e 94 54 00 	call	0xa8	; 0xa8 <print_two_messages>
				delay_ms(1000);
     48a:	88 ee       	ldi	r24, 0xE8	; 232
     48c:	93 e0       	ldi	r25, 0x03	; 3
     48e:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
					mask >>= i;
					readByte_temp |= mask; 
				}
				sens_sum[i] = 0;
			}
			j = 0;
     492:	19 2d       	mov	r17, r9
     494:	4a c0       	rjmp	.+148    	; 0x52a <orienteering+0x2cc>
				else{
					;
				}
			}
			else{
				stop();
     496:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
				clear();
     49a:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
				print_two_messages("EV:", "Fail");
     49e:	6a eb       	ldi	r22, 0xBA	; 186
     4a0:	71 e0       	ldi	r23, 0x01	; 1
     4a2:	8d e9       	ldi	r24, 0x9D	; 157
     4a4:	91 e0       	ldi	r25, 0x01	; 1
     4a6:	0e 94 54 00 	call	0xa8	; 0xa8 <print_two_messages>
				delay_ms(1000);
     4aa:	88 ee       	ldi	r24, 0xE8	; 232
     4ac:	93 e0       	ldi	r25, 0x03	; 3
     4ae:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
				//wait_for_button(BUTTON_B);
				clear();
     4b2:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
				//printf("0:%03u\n", lastByte);
				//printf("1:%03u", readByte);
				//wait_for_button(BUTTON_B);
				delay_ms(1000);
     4b6:	88 ee       	ldi	r24, 0xE8	; 232
     4b8:	93 e0       	ldi	r25, 0x03	; 3
     4ba:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
					mask >>= i;
					readByte_temp |= mask; 
				}
				sens_sum[i] = 0;
			}
			j = 0;
     4be:	19 2d       	mov	r17, r9
     4c0:	34 c0       	rjmp	.+104    	; 0x52a <orienteering+0x2cc>
		uint8_t sh_code = 0;
		
		result = readBarcode(&barcode, &sh_code);
		
		clear();
		printf("BC=%u\n", barcode);
     4c2:	0f 2e       	mov	r0, r31
     4c4:	f3 ec       	ldi	r31, 0xC3	; 195
     4c6:	ef 2e       	mov	r14, r31
     4c8:	f1 e0       	ldi	r31, 0x01	; 1
     4ca:	ff 2e       	mov	r15, r31
     4cc:	f0 2d       	mov	r31, r0
		printf("SH=%u", sh_code);
     4ce:	0e e8       	ldi	r16, 0x8E	; 142
     4d0:	11 e0       	ldi	r17, 0x01	; 1
    refer to the user's guide.
    */
    //record_bonus_marker();
	while(1){
		uint8_t result = 0;
		uint8_t barcode = 0;
     4d2:	1d 86       	std	Y+13, r1	; 0x0d
		uint8_t sh_code = 0;
     4d4:	19 82       	std	Y+1, r1	; 0x01
		
		result = readBarcode(&barcode, &sh_code);
     4d6:	be 01       	movw	r22, r28
     4d8:	6f 5f       	subi	r22, 0xFF	; 255
     4da:	7f 4f       	sbci	r23, 0xFF	; 255
     4dc:	ce 01       	movw	r24, r28
     4de:	0d 96       	adiw	r24, 0x0d	; 13
     4e0:	0e 94 03 05 	call	0xa06	; 0xa06 <readBarcode>
		
		clear();
     4e4:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
		printf("BC=%u\n", barcode);
     4e8:	8d 85       	ldd	r24, Y+13	; 0x0d
     4ea:	1f 92       	push	r1
     4ec:	8f 93       	push	r24
     4ee:	ff 92       	push	r15
     4f0:	ef 92       	push	r14
     4f2:	0e 94 11 16 	call	0x2c22	; 0x2c22 <printf>
		printf("SH=%u", sh_code);
     4f6:	89 81       	ldd	r24, Y+1	; 0x01
     4f8:	1f 92       	push	r1
     4fa:	8f 93       	push	r24
     4fc:	1f 93       	push	r17
     4fe:	0f 93       	push	r16
     500:	0e 94 11 16 	call	0x2c22	; 0x2c22 <printf>
		stop();
     504:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
		wait_for_button(BUTTON_A);
     508:	82 e0       	ldi	r24, 0x02	; 2
     50a:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <wait_for_button>
		delay_ms(1000);
     50e:	88 ee       	ldi	r24, 0xE8	; 232
     510:	93 e0       	ldi	r25, 0x03	; 3
     512:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
	}
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	f8 94       	cli
     51a:	de bf       	out	0x3e, r29	; 62
     51c:	0f be       	out	0x3f, r0	; 63
     51e:	cd bf       	out	0x3d, r28	; 61
     520:	d8 cf       	rjmp	.-80     	; 0x4d2 <orienteering+0x274>
     522:	80 2e       	mov	r8, r16
     524:	02 c0       	rjmp	.+4      	; 0x52a <orienteering+0x2cc>
     526:	80 2e       	mov	r8, r16
					mask >>= i;
					readByte_temp |= mask; 
				}
				sens_sum[i] = 0;
			}
			j = 0;
     528:	19 2d       	mov	r17, r9
	uint16_t p_gain_inv = 30;
	uint16_t i_gain_inv = 10000;

	follow_line_2_init(speed, p_gain_inv, i_gain_inv);
	
	while(!finishedFlag){
     52a:	08 2d       	mov	r16, r8
     52c:	18 cf       	rjmp	.-464    	; 0x35e <orienteering+0x100>

0000052e <startup>:
  
void startup(void)
{

  // set up the 3pi
  initialize();
     52e:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <initialize>
	
  // Set up the LCD
  lcd_init_printf_with_dimensions(8,2);
     532:	62 e0       	ldi	r22, 0x02	; 2
     534:	88 e0       	ldi	r24, 0x08	; 8
     536:	0e 94 e8 0b 	call	0x17d0	; 0x17d0 <lcd_init_printf_with_dimensions>
  
  clear();
     53a:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
  lcd_goto_xy(0,0);
     53e:	60 e0       	ldi	r22, 0x00	; 0
     540:	80 e0       	ldi	r24, 0x00	; 0
     542:	0e 94 a7 0b 	call	0x174e	; 0x174e <lcd_goto_xy>
  print("Press");
     546:	8a ec       	ldi	r24, 0xCA	; 202
     548:	91 e0       	ldi	r25, 0x01	; 1
     54a:	0e 94 8b 0a 	call	0x1516	; 0x1516 <print>
  lcd_goto_xy(0,1);
     54e:	61 e0       	ldi	r22, 0x01	; 1
     550:	80 e0       	ldi	r24, 0x00	; 0
     552:	0e 94 a7 0b 	call	0x174e	; 0x174e <lcd_goto_xy>
  print("Button A");
     556:	80 ed       	ldi	r24, 0xD0	; 208
     558:	91 e0       	ldi	r25, 0x01	; 1
     55a:	0e 94 8b 0a 	call	0x1516	; 0x1516 <print>
  
  wait_for_button(BUTTON_A);
     55e:	82 e0       	ldi	r24, 0x02	; 2
     560:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <wait_for_button>

  delay_ms(200);
     564:	88 ec       	ldi	r24, 0xC8	; 200
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
  // Calibrate the line sensors
  calibrate_sensors();
     56c:	0e 94 eb 00 	call	0x1d6	; 0x1d6 <calibrate_sensors>
  // Set baud rate of the serial interface
  serial_set_baud_rate(115200);
     570:	60 e0       	ldi	r22, 0x00	; 0
     572:	72 ec       	ldi	r23, 0xC2	; 194
     574:	81 e0       	ldi	r24, 0x01	; 1
     576:	90 e0       	ldi	r25, 0x00	; 0
     578:	0e 94 8b 0d 	call	0x1b16	; 0x1b16 <serial_set_baud_rate>
  
  /* Indicate calibration completed. */
  play_beep();
     57c:	0e 94 48 06 	call	0xc90	; 0xc90 <play_beep>
  clear();
     580:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
  lcd_goto_xy(0,0);
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	80 e0       	ldi	r24, 0x00	; 0
     588:	0e 94 a7 0b 	call	0x174e	; 0x174e <lcd_goto_xy>
  print("Ready");
     58c:	89 ed       	ldi	r24, 0xD9	; 217
     58e:	91 e0       	ldi	r25, 0x01	; 1
     590:	0e 94 8b 0a 	call	0x1516	; 0x1516 <print>
  lcd_goto_xy(0,1);
     594:	61 e0       	ldi	r22, 0x01	; 1
     596:	80 e0       	ldi	r24, 0x00	; 0
     598:	0e 94 a7 0b 	call	0x174e	; 0x174e <lcd_goto_xy>
  print("Pres ABC");
     59c:	8f ed       	ldi	r24, 0xDF	; 223
     59e:	91 e0       	ldi	r25, 0x01	; 1
     5a0:	0e 94 8b 0a 	call	0x1516	; 0x1516 <print>

  while(1)
  {
    buttonPressed = button_is_pressed(ANY_BUTTON);
     5a4:	82 e3       	ldi	r24, 0x32	; 50
     5a6:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <button_is_pressed>
     5aa:	80 93 c8 02 	sts	0x02C8, r24
    if(buttonPressed)
     5ae:	88 23       	and	r24, r24
     5b0:	c9 f3       	breq	.-14     	; 0x5a4 <startup+0x76>
    {
      break;
    }
  }

  orienteering();
     5b2:	0e 94 2f 01 	call	0x25e	; 0x25e <orienteering>
	// never reach the end of its program, or unpredictable behavior
	// will result as random code starts getting executed.  If you
	// really want to stop all actions at some point, set your motors
	// to 0,0 and run the following command to loop forever:
	//
  stop();
     5b6:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
  while(1);
     5ba:	ff cf       	rjmp	.-2      	; 0x5ba <startup+0x8c>

000005bc <readSensorByte>:
		delay_ms(1000);
		clear();
	}
}

void readSensorByte(){
     5bc:	cf 92       	push	r12
     5be:	df 92       	push	r13
     5c0:	ef 92       	push	r14
     5c2:	ff 92       	push	r15
     5c4:	0f 93       	push	r16
     5c6:	1f 93       	push	r17
     5c8:	cf 93       	push	r28
     5ca:	df 93       	push	r29
     5cc:	cd b7       	in	r28, 0x3d	; 61
     5ce:	de b7       	in	r29, 0x3e	; 62
     5d0:	a0 97       	sbiw	r28, 0x20	; 32
     5d2:	0f b6       	in	r0, 0x3f	; 63
     5d4:	f8 94       	cli
     5d6:	de bf       	out	0x3e, r29	; 62
     5d8:	0f be       	out	0x3f, r0	; 63
     5da:	cd bf       	out	0x3d, r28	; 61
*/
//Samling averaging
	uint16_t N_samp = N_SAMPLES_AVERAGE;	//number of samples to average over, max 64 if 16 bit...
	static uint8_t j = 0;							//itteration variable for sample averaging
// Definitions of valid sensor values
	const int allowedReads[6] = {SR_ON_LINE, SR_BC_START, SR_BC_STOP, SR_LEFT_BIT, SR_RIGHT_BIT};
     5dc:	fe 01       	movw	r30, r28
     5de:	31 96       	adiw	r30, 0x01	; 1
     5e0:	8c e0       	ldi	r24, 0x0C	; 12
     5e2:	df 01       	movw	r26, r30
     5e4:	1d 92       	st	X+, r1
     5e6:	8a 95       	dec	r24
     5e8:	e9 f7       	brne	.-6      	; 0x5e4 <readSensorByte+0x28>
     5ea:	80 e2       	ldi	r24, 0x20	; 32
     5ec:	90 e0       	ldi	r25, 0x00	; 0
     5ee:	9a 83       	std	Y+2, r25	; 0x02
     5f0:	89 83       	std	Y+1, r24	; 0x01
     5f2:	80 e7       	ldi	r24, 0x70	; 112
     5f4:	90 e0       	ldi	r25, 0x00	; 0
     5f6:	9c 83       	std	Y+4, r25	; 0x04
     5f8:	8b 83       	std	Y+3, r24	; 0x03
     5fa:	80 ea       	ldi	r24, 0xA0	; 160
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	98 87       	std	Y+8, r25	; 0x08
     600:	8f 83       	std	Y+7, r24	; 0x07
     602:	88 e2       	ldi	r24, 0x28	; 40
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	9a 87       	std	Y+10, r25	; 0x0a
     608:	89 87       	std	Y+9, r24	; 0x09
	const int N_allowed = ARRAYSIZE(allowedReads);
	unsigned int values[5];					//container for sampled sensor values
	static unsigned int sens_sum[5] = {0, 0, 0, 0, 0}; //container for sum of sensor values over number of samples to average over
	const unsigned int treshold[5] = {N_samp*TH0, N_samp*TH1, N_samp*TH2, N_samp*TH1, N_samp*TH0}; //tresholds for different sensors
     60a:	80 ea       	ldi	r24, 0xA0	; 160
     60c:	9f e0       	ldi	r25, 0x0F	; 15
     60e:	98 8f       	std	Y+24, r25	; 0x18
     610:	8f 8b       	std	Y+23, r24	; 0x17
     612:	28 e5       	ldi	r18, 0x58	; 88
     614:	3b e1       	ldi	r19, 0x1B	; 27
     616:	3a 8f       	std	Y+26, r19	; 0x1a
     618:	29 8f       	std	Y+25, r18	; 0x19
     61a:	40 e4       	ldi	r20, 0x40	; 64
     61c:	5f e1       	ldi	r21, 0x1F	; 31
     61e:	5c 8f       	std	Y+28, r21	; 0x1c
     620:	4b 8f       	std	Y+27, r20	; 0x1b
     622:	3e 8f       	std	Y+30, r19	; 0x1e
     624:	2d 8f       	std	Y+29, r18	; 0x1d
     626:	98 a3       	std	Y+32, r25	; 0x20
     628:	8f 8f       	std	Y+31, r24	; 0x1f
	uint8_t mask;							//bit mask container
	uint8_t i;								//itteration variable
	uint8_t readByte_temp = 0;				//current sensor reading temporary
	
	//read sensor values
	(void)read_line(values,IR_EMITTERS_ON);
     62a:	61 e0       	ldi	r22, 0x01	; 1
     62c:	ce 01       	movw	r24, r28
     62e:	0d 96       	adiw	r24, 0x0d	; 13
     630:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <read_line>
     634:	de 01       	movw	r26, r28
     636:	1d 96       	adiw	r26, 0x0d	; 13
     638:	29 ea       	ldi	r18, 0xA9	; 169
     63a:	32 e0       	ldi	r19, 0x02	; 2
     63c:	63 eb       	ldi	r22, 0xB3	; 179
     63e:	72 e0       	ldi	r23, 0x02	; 2
     640:	f9 01       	movw	r30, r18
	
	//averaging
	for(i=0; i<5; i++){
		sens_sum[i] = sens_sum[i] + values[i];
     642:	8d 91       	ld	r24, X+
     644:	9d 91       	ld	r25, X+
     646:	40 81       	ld	r20, Z
     648:	51 81       	ldd	r21, Z+1	; 0x01
     64a:	84 0f       	add	r24, r20
     64c:	95 1f       	adc	r25, r21
     64e:	81 93       	st	Z+, r24
     650:	91 93       	st	Z+, r25
	
	//read sensor values
	(void)read_line(values,IR_EMITTERS_ON);
	
	//averaging
	for(i=0; i<5; i++){
     652:	e6 17       	cp	r30, r22
     654:	f7 07       	cpc	r31, r23
     656:	a9 f7       	brne	.-22     	; 0x642 <readSensorByte+0x86>
		sens_sum[i] = sens_sum[i] + values[i];
	}
	j += 1;
     658:	80 91 a8 02 	lds	r24, 0x02A8
     65c:	8f 5f       	subi	r24, 0xFF	; 255
     65e:	80 93 a8 02 	sts	0x02A8, r24
	
	//Evaluate if valid
	if(j >= N_samp){ //if enough samples have been taken
     662:	8a 30       	cpi	r24, 0x0A	; 10
     664:	c8 f1       	brcs	.+114    	; 0x6d8 <readSensorByte+0x11c>
     666:	fe 01       	movw	r30, r28
     668:	77 96       	adiw	r30, 0x17	; 23
     66a:	80 e0       	ldi	r24, 0x00	; 0
     66c:	90 e0       	ldi	r25, 0x00	; 0
     66e:	40 e0       	ldi	r20, 0x00	; 0
	// transform to byte
		readByte_temp = 0;
		for(i=0; i<5; i++){
			if(sens_sum[i] > treshold[i]){
				mask = 128;
				mask >>= i;
     670:	68 94       	set
     672:	ee 24       	eor	r14, r14
     674:	e7 f8       	bld	r14, 7
     676:	f1 2c       	mov	r15, r1
     678:	69 01       	movw	r12, r18
	//Evaluate if valid
	if(j >= N_samp){ //if enough samples have been taken
	// transform to byte
		readByte_temp = 0;
		for(i=0; i<5; i++){
			if(sens_sum[i] > treshold[i]){
     67a:	61 91       	ld	r22, Z+
     67c:	71 91       	ld	r23, Z+
     67e:	d9 01       	movw	r26, r18
     680:	0d 91       	ld	r16, X+
     682:	1c 91       	ld	r17, X
     684:	60 17       	cp	r22, r16
     686:	71 07       	cpc	r23, r17
     688:	40 f4       	brcc	.+16     	; 0x69a <readSensorByte+0xde>
				mask = 128;
				mask >>= i;
     68a:	b7 01       	movw	r22, r14
     68c:	08 2e       	mov	r0, r24
     68e:	02 c0       	rjmp	.+4      	; 0x694 <readSensorByte+0xd8>
     690:	75 95       	asr	r23
     692:	67 95       	ror	r22
     694:	0a 94       	dec	r0
     696:	e2 f7       	brpl	.-8      	; 0x690 <readSensorByte+0xd4>
				readByte_temp |= mask;
     698:	46 2b       	or	r20, r22
			}
			sens_sum[i] = 0;
     69a:	d6 01       	movw	r26, r12
     69c:	1d 92       	st	X+, r1
     69e:	1c 92       	st	X, r1
     6a0:	2e 5f       	subi	r18, 0xFE	; 254
     6a2:	3f 4f       	sbci	r19, 0xFF	; 255
     6a4:	01 96       	adiw	r24, 0x01	; 1
	
	//Evaluate if valid
	if(j >= N_samp){ //if enough samples have been taken
	// transform to byte
		readByte_temp = 0;
		for(i=0; i<5; i++){
     6a6:	85 30       	cpi	r24, 0x05	; 5
     6a8:	91 05       	cpc	r25, r1
     6aa:	31 f7       	brne	.-52     	; 0x678 <readSensorByte+0xbc>
				mask >>= i;
				readByte_temp |= mask;
			}
			sens_sum[i] = 0;
		}
		j = 0;
     6ac:	10 92 a8 02 	sts	0x02A8, r1
     6b0:	50 91 b3 02 	lds	r21, 0x02B3
     6b4:	fe 01       	movw	r30, r28
     6b6:	31 96       	adiw	r30, 0x01	; 1
     6b8:	be 01       	movw	r22, r28
     6ba:	63 5f       	subi	r22, 0xF3	; 243
     6bc:	7f 4f       	sbci	r23, 0xFF	; 255
		for(i=0; i < N_allowed; i++){
			if(readByte_temp == allowedReads[i]){
     6be:	24 2f       	mov	r18, r20
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	81 91       	ld	r24, Z+
     6c4:	91 91       	ld	r25, Z+
     6c6:	28 17       	cp	r18, r24
     6c8:	39 07       	cpc	r19, r25
     6ca:	09 f4       	brne	.+2      	; 0x6ce <readSensorByte+0x112>
				readByte = readByte_temp;
     6cc:	54 2f       	mov	r21, r20
				readByte_temp |= mask;
			}
			sens_sum[i] = 0;
		}
		j = 0;
		for(i=0; i < N_allowed; i++){
     6ce:	e6 17       	cp	r30, r22
     6d0:	f7 07       	cpc	r31, r23
     6d2:	b9 f7       	brne	.-18     	; 0x6c2 <readSensorByte+0x106>
     6d4:	50 93 b3 02 	sts	0x02B3, r21
			if(readByte_temp == allowedReads[i]){
				readByte = readByte_temp;
			}
		}
	}
}
     6d8:	a0 96       	adiw	r28, 0x20	; 32
     6da:	0f b6       	in	r0, 0x3f	; 63
     6dc:	f8 94       	cli
     6de:	de bf       	out	0x3e, r29	; 62
     6e0:	0f be       	out	0x3f, r0	; 63
     6e2:	cd bf       	out	0x3d, r28	; 61
     6e4:	df 91       	pop	r29
     6e6:	cf 91       	pop	r28
     6e8:	1f 91       	pop	r17
     6ea:	0f 91       	pop	r16
     6ec:	ff 90       	pop	r15
     6ee:	ef 90       	pop	r14
     6f0:	df 90       	pop	r13
     6f2:	cf 90       	pop	r12
     6f4:	08 95       	ret

000006f6 <eventAction>:
	//return value
	uint8_t finished_flag = 0;
	
	
	//check if new value added
	if(readByte == lastByte){
     6f6:	20 91 b3 02 	lds	r18, 0x02B3
     6fa:	30 91 b4 02 	lds	r19, 0x02B4
     6fe:	23 17       	cp	r18, r19
     700:	09 f4       	brne	.+2      	; 0x704 <eventAction+0xe>
     702:	ea c0       	rjmp	.+468    	; 0x8d8 <eventAction+0x1e2>
		; //if not do nothing
	}
	else{ //new byte: we have 2 unique -> evaluate if valid symbol read
		symbIdent = ((uint16_t)lastByte <<8) | readByte;
     704:	82 2f       	mov	r24, r18
     706:	90 e0       	ldi	r25, 0x00	; 0
     708:	93 2b       	or	r25, r19
		lastByte = readByte;
     70a:	20 93 b4 02 	sts	0x02B4, r18
		
		if(symbIdent == EV_BC_START){
     70e:	80 37       	cpi	r24, 0x70	; 112
     710:	20 e2       	ldi	r18, 0x20	; 32
     712:	92 07       	cpc	r25, r18
     714:	81 f5       	brne	.+96     	; 0x776 <eventAction+0x80>
			debugPrint("EV:", "BC_START");
			if(curr_state == INIT){
     716:	80 91 a7 02 	lds	r24, 0x02A7
     71a:	88 23       	and	r24, r24
     71c:	09 f4       	brne	.+2      	; 0x720 <eventAction+0x2a>
     71e:	d8 c0       	rjmp	.+432    	; 0x8d0 <eventAction+0x1da>
				//dist_home += 1; add istead  when moving to state reading bc... always return to same spot..	
			}
			else if(curr_state == READING_BC){
     720:	81 30       	cpi	r24, 0x01	; 1
     722:	59 f4       	brne	.+22     	; 0x73a <eventAction+0x44>
				prev_state = curr_state;
     724:	80 93 a6 02 	sts	0x02A6, r24
				curr_state = FINISHED_BC;
     728:	82 e0       	ldi	r24, 0x02	; 2
     72a:	80 93 a7 02 	sts	0x02A7, r24
				dist_home += 1;
     72e:	80 91 a5 02 	lds	r24, 0x02A5
     732:	8f 5f       	subi	r24, 0xFF	; 255
     734:	80 93 a5 02 	sts	0x02A5, r24
     738:	cb c0       	rjmp	.+406    	; 0x8d0 <eventAction+0x1da>
			}
			else if(curr_state == READING_SH){
     73a:	83 30       	cpi	r24, 0x03	; 3
     73c:	59 f4       	brne	.+22     	; 0x754 <eventAction+0x5e>
				prev_state = curr_state;
     73e:	80 93 a6 02 	sts	0x02A6, r24
				curr_state = FINISHED_READING;
     742:	84 e0       	ldi	r24, 0x04	; 4
     744:	80 93 a7 02 	sts	0x02A7, r24
				dist_home += 1; //one extra in to account for "fake read" due to turn
     748:	80 91 a5 02 	lds	r24, 0x02A5
     74c:	8f 5f       	subi	r24, 0xFF	; 255
     74e:	80 93 a5 02 	sts	0x02A5, r24
     752:	be c0       	rjmp	.+380    	; 0x8d0 <eventAction+0x1da>
			}
			else if(curr_state == FINISHED_READING){
     754:	84 30       	cpi	r24, 0x04	; 4
     756:	09 f0       	breq	.+2      	; 0x75a <eventAction+0x64>
     758:	bb c0       	rjmp	.+374    	; 0x8d0 <eventAction+0x1da>
				dist_home -= 1;
     75a:	80 91 a5 02 	lds	r24, 0x02A5
     75e:	81 50       	subi	r24, 0x01	; 1
     760:	80 93 a5 02 	sts	0x02A5, r24
				if(dist_home == 0){
     764:	81 11       	cpse	r24, r1
     766:	b4 c0       	rjmp	.+360    	; 0x8d0 <eventAction+0x1da>
					prev_state = curr_state;
     768:	84 e0       	ldi	r24, 0x04	; 4
     76a:	80 93 a6 02 	sts	0x02A6, r24
					curr_state = FINISHED;
     76e:	85 e0       	ldi	r24, 0x05	; 5
     770:	80 93 a7 02 	sts	0x02A7, r24
     774:	ad c0       	rjmp	.+346    	; 0x8d0 <eventAction+0x1da>
			}
			else{
				;
			}
		}
		if(symbIdent == EV_BC_CONT){
     776:	80 32       	cpi	r24, 0x20	; 32
     778:	40 e7       	ldi	r20, 0x70	; 112
     77a:	94 07       	cpc	r25, r20
     77c:	89 f5       	brne	.+98     	; 0x7e0 <eventAction+0xea>
			debugPrint("EV:", "BC_CONT");
			if(curr_state == INIT){
     77e:	80 91 a7 02 	lds	r24, 0x02A7
     782:	81 11       	cpse	r24, r1
     784:	0d c0       	rjmp	.+26     	; 0x7a0 <eventAction+0xaa>
				prev_state = curr_state;
     786:	10 92 a6 02 	sts	0x02A6, r1
				curr_state = READING_BC;
     78a:	81 e0       	ldi	r24, 0x01	; 1
     78c:	80 93 a7 02 	sts	0x02A7, r24
				bc = 0;
     790:	10 92 13 01 	sts	0x0113, r1
				dist_home += 2; //one extra in order to always return robot at the same spot.
     794:	80 91 a5 02 	lds	r24, 0x02A5
     798:	8e 5f       	subi	r24, 0xFE	; 254
     79a:	80 93 a5 02 	sts	0x02A5, r24
     79e:	98 c0       	rjmp	.+304    	; 0x8d0 <eventAction+0x1da>
			}
			else if(curr_state == FINISHED_BC){
     7a0:	82 30       	cpi	r24, 0x02	; 2
     7a2:	69 f4       	brne	.+26     	; 0x7be <eventAction+0xc8>
				prev_state = curr_state;
     7a4:	80 93 a6 02 	sts	0x02A6, r24
				curr_state = READING_SH;
     7a8:	83 e0       	ldi	r24, 0x03	; 3
     7aa:	80 93 a7 02 	sts	0x02A7, r24
				sh_bc = 0;
     7ae:	10 92 12 01 	sts	0x0112, r1
				dist_home += 1;
     7b2:	80 91 a5 02 	lds	r24, 0x02A5
     7b6:	8f 5f       	subi	r24, 0xFF	; 255
     7b8:	80 93 a5 02 	sts	0x02A5, r24
     7bc:	89 c0       	rjmp	.+274    	; 0x8d0 <eventAction+0x1da>
			}
			else if(curr_state == FINISHED_READING){
     7be:	84 30       	cpi	r24, 0x04	; 4
     7c0:	09 f0       	breq	.+2      	; 0x7c4 <eventAction+0xce>
     7c2:	86 c0       	rjmp	.+268    	; 0x8d0 <eventAction+0x1da>
				dist_home -= 1;
     7c4:	80 91 a5 02 	lds	r24, 0x02A5
     7c8:	81 50       	subi	r24, 0x01	; 1
     7ca:	80 93 a5 02 	sts	0x02A5, r24
				if(dist_home == 0){
     7ce:	81 11       	cpse	r24, r1
     7d0:	7f c0       	rjmp	.+254    	; 0x8d0 <eventAction+0x1da>
					prev_state = curr_state;
     7d2:	84 e0       	ldi	r24, 0x04	; 4
     7d4:	80 93 a6 02 	sts	0x02A6, r24
					curr_state = FINISHED;
     7d8:	85 e0       	ldi	r24, 0x05	; 5
     7da:	80 93 a7 02 	sts	0x02A7, r24
     7de:	78 c0       	rjmp	.+240    	; 0x8d0 <eventAction+0x1da>
			}
			else{
				;
			}
		}
		else if(symbIdent == EV_BC_STOP){
     7e0:	81 15       	cp	r24, r1
     7e2:	20 e7       	ldi	r18, 0x70	; 112
     7e4:	92 07       	cpc	r25, r18
     7e6:	71 f5       	brne	.+92     	; 0x844 <eventAction+0x14e>
			debugPrint("EV:", "BC_STOP");
			bc_index = 0;
     7e8:	10 92 a4 02 	sts	0x02A4, r1
			sh_bc_index = 0;
     7ec:	10 92 a3 02 	sts	0x02A3, r1
			if(curr_state == FINISHED_BC){
     7f0:	80 91 a7 02 	lds	r24, 0x02A7
     7f4:	82 30       	cpi	r24, 0x02	; 2
     7f6:	41 f4       	brne	.+16     	; 0x808 <eventAction+0x112>
				prev_state = curr_state;
     7f8:	80 93 a6 02 	sts	0x02A6, r24
				curr_state = FINISHED_READING;
     7fc:	94 e0       	ldi	r25, 0x04	; 4
     7fe:	90 93 a7 02 	sts	0x02A7, r25
				dist_home = 2; //account for skipping one when turning
     802:	80 93 a5 02 	sts	0x02A5, r24
     806:	08 c0       	rjmp	.+16     	; 0x818 <eventAction+0x122>
			}
			else if(curr_state == FINISHED_READING){
     808:	84 30       	cpi	r24, 0x04	; 4
     80a:	31 f4       	brne	.+12     	; 0x818 <eventAction+0x122>
				prev_state = curr_state;
     80c:	80 93 a6 02 	sts	0x02A6, r24
				curr_state = FINISHED_READING;
     810:	80 93 a7 02 	sts	0x02A7, r24
				dist_home = 4; //account for skipping one when turning
     814:	80 93 a5 02 	sts	0x02A5, r24
			}
			else{
				;
			}
			stop();
     818:	0e 94 4d 06 	call	0xc9a	; 0xc9a <stop>
			clear();
     81c:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
			printf("Turning..");
     820:	88 ee       	ldi	r24, 0xE8	; 232
     822:	91 e0       	ldi	r25, 0x01	; 1
     824:	9f 93       	push	r25
     826:	8f 93       	push	r24
     828:	0e 94 11 16 	call	0x2c22	; 0x2c22 <printf>
			wait_for_button(BUTTON_A);
     82c:	82 e0       	ldi	r24, 0x02	; 2
     82e:	0e 94 f5 0c 	call	0x19ea	; 0x19ea <wait_for_button>
			delay_ms(1000);
     832:	88 ee       	ldi	r24, 0xE8	; 232
     834:	93 e0       	ldi	r25, 0x03	; 3
     836:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
			clear();
     83a:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
     83e:	0f 90       	pop	r0
     840:	0f 90       	pop	r0
     842:	46 c0       	rjmp	.+140    	; 0x8d0 <eventAction+0x1da>
		}
		else if((symbIdent == EV_LEFT_BIT_HIGH_1) || (symbIdent == EV_LEFT_BIT_HIGH_2)){
     844:	9c 01       	movw	r18, r24
     846:	37 7f       	andi	r19, 0xF7	; 247
     848:	20 3a       	cpi	r18, 0xA0	; 160
     84a:	30 42       	sbci	r19, 0x20	; 32
     84c:	61 f5       	brne	.+88     	; 0x8a6 <eventAction+0x1b0>
			debugPrint("EV:", "LEFTBIT");
			if(curr_state == READING_BC){
     84e:	80 91 a7 02 	lds	r24, 0x02A7
     852:	81 30       	cpi	r24, 0x01	; 1
     854:	99 f4       	brne	.+38     	; 0x87c <eventAction+0x186>
				mask = 1;
				mask <<= bc_index;
     856:	20 91 a4 02 	lds	r18, 0x02A4
     85a:	81 e0       	ldi	r24, 0x01	; 1
     85c:	90 e0       	ldi	r25, 0x00	; 0
     85e:	02 2e       	mov	r0, r18
     860:	02 c0       	rjmp	.+4      	; 0x866 <eventAction+0x170>
     862:	88 0f       	add	r24, r24
     864:	99 1f       	adc	r25, r25
     866:	0a 94       	dec	r0
     868:	e2 f7       	brpl	.-8      	; 0x862 <eventAction+0x16c>
				bc |= mask;
     86a:	90 91 13 01 	lds	r25, 0x0113
     86e:	89 2b       	or	r24, r25
     870:	80 93 13 01 	sts	0x0113, r24
				bc_index += 1;
     874:	2f 5f       	subi	r18, 0xFF	; 255
     876:	20 93 a4 02 	sts	0x02A4, r18
     87a:	2a c0       	rjmp	.+84     	; 0x8d0 <eventAction+0x1da>
			}
			else if(curr_state == READING_SH){
     87c:	83 30       	cpi	r24, 0x03	; 3
     87e:	41 f5       	brne	.+80     	; 0x8d0 <eventAction+0x1da>
				mask = 1;
				mask <<= sh_bc_index;
     880:	20 91 a3 02 	lds	r18, 0x02A3
     884:	81 e0       	ldi	r24, 0x01	; 1
     886:	90 e0       	ldi	r25, 0x00	; 0
     888:	02 2e       	mov	r0, r18
     88a:	02 c0       	rjmp	.+4      	; 0x890 <eventAction+0x19a>
     88c:	88 0f       	add	r24, r24
     88e:	99 1f       	adc	r25, r25
     890:	0a 94       	dec	r0
     892:	e2 f7       	brpl	.-8      	; 0x88c <eventAction+0x196>
				sh_bc |= mask;
     894:	90 91 12 01 	lds	r25, 0x0112
     898:	89 2b       	or	r24, r25
     89a:	80 93 12 01 	sts	0x0112, r24
				sh_bc_index += 1;
     89e:	2f 5f       	subi	r18, 0xFF	; 255
     8a0:	20 93 a3 02 	sts	0x02A3, r18
     8a4:	15 c0       	rjmp	.+42     	; 0x8d0 <eventAction+0x1da>
			}
			else{
				;
			}
		}
		else if((symbIdent == EV_RIGHT_BIT_HIGH_1) || (symbIdent == EV_RIGHT_BIT_HIGH_2)){
     8a6:	9f 77       	andi	r25, 0x7F	; 127
     8a8:	88 32       	cpi	r24, 0x28	; 40
     8aa:	90 42       	sbci	r25, 0x20	; 32
     8ac:	89 f4       	brne	.+34     	; 0x8d0 <eventAction+0x1da>
			debugPrint("EV:", "RIGHTBIT");
			if(curr_state == READING_BC){
     8ae:	80 91 a7 02 	lds	r24, 0x02A7
     8b2:	81 30       	cpi	r24, 0x01	; 1
     8b4:	31 f4       	brne	.+12     	; 0x8c2 <eventAction+0x1cc>
				bc_index += 1;
     8b6:	80 91 a4 02 	lds	r24, 0x02A4
     8ba:	8f 5f       	subi	r24, 0xFF	; 255
     8bc:	80 93 a4 02 	sts	0x02A4, r24
     8c0:	07 c0       	rjmp	.+14     	; 0x8d0 <eventAction+0x1da>
			}
			else if(curr_state == READING_SH){
     8c2:	83 30       	cpi	r24, 0x03	; 3
     8c4:	29 f4       	brne	.+10     	; 0x8d0 <eventAction+0x1da>
				sh_bc_index += 1;
     8c6:	80 91 a3 02 	lds	r24, 0x02A3
     8ca:	8f 5f       	subi	r24, 0xFF	; 255
     8cc:	80 93 a3 02 	sts	0x02A3, r24
			//printf("1:%03u", readByte);
			//wait_for_button(BUTTON_B);
			//delay_ms(1000);
			//clear();
		}
		lastByte = readByte;
     8d0:	80 91 b3 02 	lds	r24, 0x02B3
     8d4:	80 93 b4 02 	sts	0x02B4, r24
	}
	
	if(DEBUG_MODE_2){
		switch (curr_state){
     8d8:	80 91 a7 02 	lds	r24, 0x02A7
     8dc:	82 30       	cpi	r24, 0x02	; 2
     8de:	c9 f1       	breq	.+114    	; 0x952 <__stack+0x53>
     8e0:	28 f4       	brcc	.+10     	; 0x8ec <eventAction+0x1f6>
     8e2:	88 23       	and	r24, r24
     8e4:	61 f0       	breq	.+24     	; 0x8fe <eventAction+0x208>
     8e6:	81 30       	cpi	r24, 0x01	; 1
     8e8:	f9 f0       	breq	.+62     	; 0x928 <__stack+0x29>
     8ea:	86 c0       	rjmp	.+268    	; 0x9f8 <__stack+0xf9>
     8ec:	84 30       	cpi	r24, 0x04	; 4
     8ee:	09 f4       	brne	.+2      	; 0x8f2 <eventAction+0x1fc>
     8f0:	5a c0       	rjmp	.+180    	; 0x9a6 <__stack+0xa7>
     8f2:	08 f4       	brcc	.+2      	; 0x8f6 <eventAction+0x200>
     8f4:	43 c0       	rjmp	.+134    	; 0x97c <__stack+0x7d>
     8f6:	85 30       	cpi	r24, 0x05	; 5
     8f8:	09 f4       	brne	.+2      	; 0x8fc <eventAction+0x206>
     8fa:	6a c0       	rjmp	.+212    	; 0x9d0 <__stack+0xd1>
     8fc:	7d c0       	rjmp	.+250    	; 0x9f8 <__stack+0xf9>
			case INIT:
				clear();
     8fe:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
				printf("INIT\n");
     902:	82 ef       	ldi	r24, 0xF2	; 242
     904:	91 e0       	ldi	r25, 0x01	; 1
     906:	0e 94 27 16 	call	0x2c4e	; 0x2c4e <puts>
				printf("dh: %u", dist_home);
     90a:	80 91 a5 02 	lds	r24, 0x02A5
     90e:	1f 92       	push	r1
     910:	8f 93       	push	r24
     912:	87 ef       	ldi	r24, 0xF7	; 247
     914:	91 e0       	ldi	r25, 0x01	; 1
     916:	9f 93       	push	r25
     918:	8f 93       	push	r24
     91a:	0e 94 11 16 	call	0x2c22	; 0x2c22 <printf>
				break;
     91e:	0f 90       	pop	r0
     920:	0f 90       	pop	r0
     922:	0f 90       	pop	r0
     924:	0f 90       	pop	r0
     926:	68 c0       	rjmp	.+208    	; 0x9f8 <__stack+0xf9>
			case READING_BC:
				clear();
     928:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
				printf("READ_BC\n");
     92c:	8e ef       	ldi	r24, 0xFE	; 254
     92e:	91 e0       	ldi	r25, 0x01	; 1
     930:	0e 94 27 16 	call	0x2c4e	; 0x2c4e <puts>
				printf("dh: %u", dist_home);
     934:	80 91 a5 02 	lds	r24, 0x02A5
     938:	1f 92       	push	r1
     93a:	8f 93       	push	r24
     93c:	87 ef       	ldi	r24, 0xF7	; 247
     93e:	91 e0       	ldi	r25, 0x01	; 1
     940:	9f 93       	push	r25
     942:	8f 93       	push	r24
     944:	0e 94 11 16 	call	0x2c22	; 0x2c22 <printf>
			break;
     948:	0f 90       	pop	r0
     94a:	0f 90       	pop	r0
     94c:	0f 90       	pop	r0
     94e:	0f 90       	pop	r0
     950:	53 c0       	rjmp	.+166    	; 0x9f8 <__stack+0xf9>
			case FINISHED_BC:
				clear();
     952:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
				printf("FIN_BC\n");
     956:	86 e0       	ldi	r24, 0x06	; 6
     958:	92 e0       	ldi	r25, 0x02	; 2
     95a:	0e 94 27 16 	call	0x2c4e	; 0x2c4e <puts>
				printf("dh: %u", dist_home);
     95e:	80 91 a5 02 	lds	r24, 0x02A5
     962:	1f 92       	push	r1
     964:	8f 93       	push	r24
     966:	87 ef       	ldi	r24, 0xF7	; 247
     968:	91 e0       	ldi	r25, 0x01	; 1
     96a:	9f 93       	push	r25
     96c:	8f 93       	push	r24
     96e:	0e 94 11 16 	call	0x2c22	; 0x2c22 <printf>
			break;
     972:	0f 90       	pop	r0
     974:	0f 90       	pop	r0
     976:	0f 90       	pop	r0
     978:	0f 90       	pop	r0
     97a:	3e c0       	rjmp	.+124    	; 0x9f8 <__stack+0xf9>
			case READING_SH:
				clear();
     97c:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
				printf("READ_SH\n");
     980:	8d e0       	ldi	r24, 0x0D	; 13
     982:	92 e0       	ldi	r25, 0x02	; 2
     984:	0e 94 27 16 	call	0x2c4e	; 0x2c4e <puts>
				printf("dh: %u", dist_home);
     988:	80 91 a5 02 	lds	r24, 0x02A5
     98c:	1f 92       	push	r1
     98e:	8f 93       	push	r24
     990:	87 ef       	ldi	r24, 0xF7	; 247
     992:	91 e0       	ldi	r25, 0x01	; 1
     994:	9f 93       	push	r25
     996:	8f 93       	push	r24
     998:	0e 94 11 16 	call	0x2c22	; 0x2c22 <printf>
			break;
     99c:	0f 90       	pop	r0
     99e:	0f 90       	pop	r0
     9a0:	0f 90       	pop	r0
     9a2:	0f 90       	pop	r0
     9a4:	29 c0       	rjmp	.+82     	; 0x9f8 <__stack+0xf9>
			case FINISHED_READING:
				clear();
     9a6:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
				printf("FIN_READ\n");
     9aa:	85 e1       	ldi	r24, 0x15	; 21
     9ac:	92 e0       	ldi	r25, 0x02	; 2
     9ae:	0e 94 27 16 	call	0x2c4e	; 0x2c4e <puts>
				printf("dh: %u", dist_home);
     9b2:	80 91 a5 02 	lds	r24, 0x02A5
     9b6:	1f 92       	push	r1
     9b8:	8f 93       	push	r24
     9ba:	87 ef       	ldi	r24, 0xF7	; 247
     9bc:	91 e0       	ldi	r25, 0x01	; 1
     9be:	9f 93       	push	r25
     9c0:	8f 93       	push	r24
     9c2:	0e 94 11 16 	call	0x2c22	; 0x2c22 <printf>
			break;
     9c6:	0f 90       	pop	r0
     9c8:	0f 90       	pop	r0
     9ca:	0f 90       	pop	r0
     9cc:	0f 90       	pop	r0
     9ce:	14 c0       	rjmp	.+40     	; 0x9f8 <__stack+0xf9>
			case FINISHED:
				clear();
     9d0:	0e 94 7c 0a 	call	0x14f8	; 0x14f8 <clear>
				printf("FIN\n");
     9d4:	8e e1       	ldi	r24, 0x1E	; 30
     9d6:	92 e0       	ldi	r25, 0x02	; 2
     9d8:	0e 94 27 16 	call	0x2c4e	; 0x2c4e <puts>
				printf("dh: %u", dist_home);
     9dc:	80 91 a5 02 	lds	r24, 0x02A5
     9e0:	1f 92       	push	r1
     9e2:	8f 93       	push	r24
     9e4:	87 ef       	ldi	r24, 0xF7	; 247
     9e6:	91 e0       	ldi	r25, 0x01	; 1
     9e8:	9f 93       	push	r25
     9ea:	8f 93       	push	r24
     9ec:	0e 94 11 16 	call	0x2c22	; 0x2c22 <printf>
			break;
     9f0:	0f 90       	pop	r0
     9f2:	0f 90       	pop	r0
     9f4:	0f 90       	pop	r0
     9f6:	0f 90       	pop	r0
	//	wait_for_button(BUTTON_A);
	//	delay_ms(1000);
	//	clear();
	//	turn_flag = 0;
	//}
	if(curr_state == FINISHED){
     9f8:	81 e0       	ldi	r24, 0x01	; 1
     9fa:	90 91 a7 02 	lds	r25, 0x02A7
     9fe:	95 30       	cpi	r25, 0x05	; 5
     a00:	09 f0       	breq	.+2      	; 0xa04 <__stack+0x105>
     a02:	80 e0       	ldi	r24, 0x00	; 0
		finished_flag = 1;
	}
	return finished_flag;
}
     a04:	08 95       	ret

00000a06 <readBarcode>:


uint8_t readBarcode(uint8_t *barcode, uint8_t *sh_code){
     a06:	0f 93       	push	r16
     a08:	1f 93       	push	r17
     a0a:	cf 93       	push	r28
     a0c:	df 93       	push	r29
     a0e:	8c 01       	movw	r16, r24
     a10:	eb 01       	movw	r28, r22
	int follow_p_gain_inv = BC_FOLLOW_P_GAIN_INV;
	int follow_i_gain_inv = BC_FOLLOW_I_GAIN_INV;
	
	uint8_t returnValue;
	
	follow_line_2_init(follow_speed, follow_p_gain_inv, follow_i_gain_inv);
     a12:	40 e1       	ldi	r20, 0x10	; 16
     a14:	57 e2       	ldi	r21, 0x27	; 39
     a16:	64 e1       	ldi	r22, 0x14	; 20
     a18:	70 e0       	ldi	r23, 0x00	; 0
     a1a:	82 e3       	ldi	r24, 0x32	; 50
     a1c:	90 e0       	ldi	r25, 0x00	; 0
     a1e:	0e 94 71 00 	call	0xe2	; 0xe2 <follow_line_2_init>
	
	while(!finished_flag){
		//follow line 
		follow_line_2();
     a22:	0e 94 82 00 	call	0x104	; 0x104 <follow_line_2>
		//read sensors
		readSensorByte();
     a26:	0e 94 de 02 	call	0x5bc	; 0x5bc <readSensorByte>
		//take action
		finished_flag = eventAction();
     a2a:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <eventAction>
	
	uint8_t returnValue;
	
	follow_line_2_init(follow_speed, follow_p_gain_inv, follow_i_gain_inv);
	
	while(!finished_flag){
     a2e:	88 23       	and	r24, r24
     a30:	c1 f3       	breq	.-16     	; 0xa22 <readBarcode+0x1c>
		//read sensors
		readSensorByte();
		//take action
		finished_flag = eventAction();
	}
	*barcode = bc;
     a32:	80 91 13 01 	lds	r24, 0x0113
     a36:	f8 01       	movw	r30, r16
     a38:	80 83       	st	Z, r24
	*sh_code = sh_bc;
     a3a:	80 91 12 01 	lds	r24, 0x0112
     a3e:	88 83       	st	Y, r24
	//check result
	if( (bc>0) && (bc<50) && (sh_bc>=0) && (sh_bc<5) ){
     a40:	80 91 13 01 	lds	r24, 0x0113
     a44:	81 50       	subi	r24, 0x01	; 1
     a46:	81 33       	cpi	r24, 0x31	; 49
     a48:	38 f4       	brcc	.+14     	; 0xa58 <readBarcode+0x52>
     a4a:	81 e0       	ldi	r24, 0x01	; 1
     a4c:	90 91 12 01 	lds	r25, 0x0112
     a50:	95 30       	cpi	r25, 0x05	; 5
     a52:	18 f4       	brcc	.+6      	; 0xa5a <readBarcode+0x54>
     a54:	80 e0       	ldi	r24, 0x00	; 0
     a56:	01 c0       	rjmp	.+2      	; 0xa5a <readBarcode+0x54>
		returnValue = 0;
	}
	else{
		returnValue = 1;
     a58:	81 e0       	ldi	r24, 0x01	; 1
	}
	return returnValue;
     a5a:	df 91       	pop	r29
     a5c:	cf 91       	pop	r28
     a5e:	1f 91       	pop	r17
     a60:	0f 91       	pop	r16
     a62:	08 95       	ret

00000a64 <readSensorByteSH>:
// Containers for output
uint8_t sh_read = 255; //stakeholder, 255 = no read
//reading
static uint16_t read_store = 0;

void readSensorByteSH(){
     a64:	cf 92       	push	r12
     a66:	df 92       	push	r13
     a68:	ef 92       	push	r14
     a6a:	ff 92       	push	r15
     a6c:	0f 93       	push	r16
     a6e:	1f 93       	push	r17
     a70:	cf 93       	push	r28
     a72:	df 93       	push	r29
     a74:	cd b7       	in	r28, 0x3d	; 61
     a76:	de b7       	in	r29, 0x3e	; 62
     a78:	a0 97       	sbiw	r28, 0x20	; 32
     a7a:	0f b6       	in	r0, 0x3f	; 63
     a7c:	f8 94       	cli
     a7e:	de bf       	out	0x3e, r29	; 62
     a80:	0f be       	out	0x3f, r0	; 63
     a82:	cd bf       	out	0x3d, r28	; 61
	uint16_t N_samp = SH_N_SAMPLES_AVERAGE;	//number of samples to average over, max 64 if 16 bit...
	static uint8_t j = 0;							//itteration variable for sample averaging
	// Definitions of valid sensor values
	
	//const int allowedReads[5] = {SR_ON_LINE, SR_SHX_1, SR_SHX_2, SR_SHX_3, SR_SHX_4};
	const int allowedReads[6] = {SR_ON_LINE, SR_SHX_1, SR_SHX_2, SR_SHX_3, SR_SHX_4, SR_SHX_5};
     a84:	8c e0       	ldi	r24, 0x0C	; 12
     a86:	e1 e2       	ldi	r30, 0x21	; 33
     a88:	f1 e0       	ldi	r31, 0x01	; 1
     a8a:	de 01       	movw	r26, r28
     a8c:	11 96       	adiw	r26, 0x01	; 1
     a8e:	01 90       	ld	r0, Z+
     a90:	0d 92       	st	X+, r0
     a92:	8a 95       	dec	r24
     a94:	e1 f7       	brne	.-8      	; 0xa8e <readSensorByteSH+0x2a>
	
	const int N_allowed = ARRAYSIZE(allowedReads);
	unsigned int values[5];					//container for sampled sensor values
	static unsigned int sens_sum[5] = {0, 0, 0, 0, 0}; //container for sum of sensor values over number of samples to average over
	const unsigned int treshold[5] = {N_samp*SH_TH0, N_samp*SH_TH1, N_samp*SH_TH2, N_samp*SH_TH1, N_samp*SH_TH0}; //tresholds for different sensors
     a96:	88 eb       	ldi	r24, 0xB8	; 184
     a98:	9b e0       	ldi	r25, 0x0B	; 11
     a9a:	98 8f       	std	Y+24, r25	; 0x18
     a9c:	8f 8b       	std	Y+23, r24	; 0x17
     a9e:	28 e8       	ldi	r18, 0x88	; 136
     aa0:	33 e1       	ldi	r19, 0x13	; 19
     aa2:	3a 8f       	std	Y+26, r19	; 0x1a
     aa4:	29 8f       	std	Y+25, r18	; 0x19
     aa6:	40 e4       	ldi	r20, 0x40	; 64
     aa8:	5f e1       	ldi	r21, 0x1F	; 31
     aaa:	5c 8f       	std	Y+28, r21	; 0x1c
     aac:	4b 8f       	std	Y+27, r20	; 0x1b
     aae:	3e 8f       	std	Y+30, r19	; 0x1e
     ab0:	2d 8f       	std	Y+29, r18	; 0x1d
     ab2:	98 a3       	std	Y+32, r25	; 0x20
     ab4:	8f 8f       	std	Y+31, r24	; 0x1f
	uint8_t mask;							//bit mask container
	uint8_t i;								//itteration variable
	uint8_t readByte_temp = 0;				//current sensor reading temporary
	
	//read sensor values
	(void)read_line(values,IR_EMITTERS_ON);
     ab6:	61 e0       	ldi	r22, 0x01	; 1
     ab8:	ce 01       	movw	r24, r28
     aba:	0d 96       	adiw	r24, 0x0d	; 13
     abc:	0e 94 7f 0e 	call	0x1cfe	; 0x1cfe <read_line>
     ac0:	de 01       	movw	r26, r28
     ac2:	1d 96       	adiw	r26, 0x0d	; 13
     ac4:	26 eb       	ldi	r18, 0xB6	; 182
     ac6:	32 e0       	ldi	r19, 0x02	; 2
     ac8:	60 ec       	ldi	r22, 0xC0	; 192
     aca:	72 e0       	ldi	r23, 0x02	; 2
     acc:	f9 01       	movw	r30, r18
	
	//averaging
	for(i=0; i<5; i++){
		sens_sum[i] = sens_sum[i] + values[i];
     ace:	8d 91       	ld	r24, X+
     ad0:	9d 91       	ld	r25, X+
     ad2:	40 81       	ld	r20, Z
     ad4:	51 81       	ldd	r21, Z+1	; 0x01
     ad6:	84 0f       	add	r24, r20
     ad8:	95 1f       	adc	r25, r21
     ada:	81 93       	st	Z+, r24
     adc:	91 93       	st	Z+, r25
	
	//read sensor values
	(void)read_line(values,IR_EMITTERS_ON);
	
	//averaging
	for(i=0; i<5; i++){
     ade:	e6 17       	cp	r30, r22
     ae0:	f7 07       	cpc	r31, r23
     ae2:	a9 f7       	brne	.-22     	; 0xace <readSensorByteSH+0x6a>
		sens_sum[i] = sens_sum[i] + values[i];
	}
	j += 1;
     ae4:	80 91 b5 02 	lds	r24, 0x02B5
     ae8:	8f 5f       	subi	r24, 0xFF	; 255
     aea:	80 93 b5 02 	sts	0x02B5, r24
	
	//Evaluate if valid
	if(j >= N_samp){ //if enough samples have been taken
     aee:	8a 30       	cpi	r24, 0x0A	; 10
     af0:	c8 f1       	brcs	.+114    	; 0xb64 <readSensorByteSH+0x100>
     af2:	fe 01       	movw	r30, r28
     af4:	77 96       	adiw	r30, 0x17	; 23
     af6:	80 e0       	ldi	r24, 0x00	; 0
     af8:	90 e0       	ldi	r25, 0x00	; 0
     afa:	40 e0       	ldi	r20, 0x00	; 0
		// transform to byte
		readByte_temp = 0;
		for(i=0; i<5; i++){
			if(sens_sum[i] > treshold[i]){
				mask = 128;
				mask >>= i;
     afc:	68 94       	set
     afe:	ee 24       	eor	r14, r14
     b00:	e7 f8       	bld	r14, 7
     b02:	f1 2c       	mov	r15, r1
     b04:	69 01       	movw	r12, r18
	//Evaluate if valid
	if(j >= N_samp){ //if enough samples have been taken
		// transform to byte
		readByte_temp = 0;
		for(i=0; i<5; i++){
			if(sens_sum[i] > treshold[i]){
     b06:	61 91       	ld	r22, Z+
     b08:	71 91       	ld	r23, Z+
     b0a:	d9 01       	movw	r26, r18
     b0c:	0d 91       	ld	r16, X+
     b0e:	1c 91       	ld	r17, X
     b10:	60 17       	cp	r22, r16
     b12:	71 07       	cpc	r23, r17
     b14:	40 f4       	brcc	.+16     	; 0xb26 <readSensorByteSH+0xc2>
				mask = 128;
				mask >>= i;
     b16:	b7 01       	movw	r22, r14
     b18:	08 2e       	mov	r0, r24
     b1a:	02 c0       	rjmp	.+4      	; 0xb20 <readSensorByteSH+0xbc>
     b1c:	75 95       	asr	r23
     b1e:	67 95       	ror	r22
     b20:	0a 94       	dec	r0
     b22:	e2 f7       	brpl	.-8      	; 0xb1c <readSensorByteSH+0xb8>
				readByte_temp |= mask;
     b24:	46 2b       	or	r20, r22
			}
			sens_sum[i] = 0;
     b26:	d6 01       	movw	r26, r12
     b28:	1d 92       	st	X+, r1
     b2a:	1c 92       	st	X, r1
     b2c:	2e 5f       	subi	r18, 0xFE	; 254
     b2e:	3f 4f       	sbci	r19, 0xFF	; 255
     b30:	01 96       	adiw	r24, 0x01	; 1
	
	//Evaluate if valid
	if(j >= N_samp){ //if enough samples have been taken
		// transform to byte
		readByte_temp = 0;
		for(i=0; i<5; i++){
     b32:	85 30       	cpi	r24, 0x05	; 5
     b34:	91 05       	cpc	r25, r1
     b36:	31 f7       	brne	.-52     	; 0xb04 <readSensorByteSH+0xa0>
				mask >>= i;
				readByte_temp |= mask;
			}
			sens_sum[i] = 0;
		}
		j = 0;
     b38:	10 92 b5 02 	sts	0x02B5, r1
     b3c:	50 91 c2 02 	lds	r21, 0x02C2
     b40:	fe 01       	movw	r30, r28
     b42:	31 96       	adiw	r30, 0x01	; 1
     b44:	be 01       	movw	r22, r28
     b46:	63 5f       	subi	r22, 0xF3	; 243
     b48:	7f 4f       	sbci	r23, 0xFF	; 255
		for(i=0; i < N_allowed; i++){
			if(readByte_temp == allowedReads[i]){
     b4a:	24 2f       	mov	r18, r20
     b4c:	30 e0       	ldi	r19, 0x00	; 0
     b4e:	81 91       	ld	r24, Z+
     b50:	91 91       	ld	r25, Z+
     b52:	28 17       	cp	r18, r24
     b54:	39 07       	cpc	r19, r25
     b56:	09 f4       	brne	.+2      	; 0xb5a <readSensorByteSH+0xf6>
				readByteSH = readByte_temp;
     b58:	54 2f       	mov	r21, r20
				readByte_temp |= mask;
			}
			sens_sum[i] = 0;
		}
		j = 0;
		for(i=0; i < N_allowed; i++){
     b5a:	e6 17       	cp	r30, r22
     b5c:	f7 07       	cpc	r31, r23
     b5e:	b9 f7       	brne	.-18     	; 0xb4e <readSensorByteSH+0xea>
     b60:	50 93 c2 02 	sts	0x02C2, r21
			if(readByte_temp == allowedReads[i]){
				readByteSH = readByte_temp;
			}
		}
	}
}
     b64:	a0 96       	adiw	r28, 0x20	; 32
     b66:	0f b6       	in	r0, 0x3f	; 63
     b68:	f8 94       	cli
     b6a:	de bf       	out	0x3e, r29	; 62
     b6c:	0f be       	out	0x3f, r0	; 63
     b6e:	cd bf       	out	0x3d, r28	; 61
     b70:	df 91       	pop	r29
     b72:	cf 91       	pop	r28
     b74:	1f 91       	pop	r17
     b76:	0f 91       	pop	r16
     b78:	ff 90       	pop	r15
     b7a:	ef 90       	pop	r14
     b7c:	df 90       	pop	r13
     b7e:	cf 90       	pop	r12
     b80:	08 95       	ret

00000b82 <eventActionSH>:
	//return value
	uint8_t finished_flag = 0;
	
	
	//check if new value added
	if(readByteSH == lastByteSH){
     b82:	20 91 c2 02 	lds	r18, 0x02C2
     b86:	80 91 c3 02 	lds	r24, 0x02C3
     b8a:	28 17       	cp	r18, r24
     b8c:	09 f4       	brne	.+2      	; 0xb90 <eventActionSH+0xe>
     b8e:	53 c0       	rjmp	.+166    	; 0xc36 <eventActionSH+0xb4>
		//wait_for_button(BUTTON_A);
		//delay_ms(1000);
		//clear();
		
		
		symbIdent = (read_store <<5) | (readByteSH>>3);
     b90:	32 2f       	mov	r19, r18
     b92:	36 95       	lsr	r19
     b94:	36 95       	lsr	r19
     b96:	36 95       	lsr	r19
     b98:	80 91 c0 02 	lds	r24, 0x02C0
     b9c:	90 91 c1 02 	lds	r25, 0x02C1
     ba0:	88 0f       	add	r24, r24
     ba2:	99 1f       	adc	r25, r25
     ba4:	82 95       	swap	r24
     ba6:	92 95       	swap	r25
     ba8:	90 7f       	andi	r25, 0xF0	; 240
     baa:	98 27       	eor	r25, r24
     bac:	80 7f       	andi	r24, 0xF0	; 240
     bae:	98 27       	eor	r25, r24
     bb0:	83 2b       	or	r24, r19
		read_store = symbIdent;
     bb2:	90 93 c1 02 	sts	0x02C1, r25
     bb6:	80 93 c0 02 	sts	0x02C0, r24
		symbIdent <<= 1; 
     bba:	88 0f       	add	r24, r24
     bbc:	99 1f       	adc	r25, r25
		lastByteSH = readByteSH;
     bbe:	20 93 c3 02 	sts	0x02C3, r18
		//wait_for_button(BUTTON_A);
		//delay_ms(1000);
		//clear();
		
		
		if((symbIdent == EV_SH_4_w) || (symbIdent == EV_SH_4_a)){
     bc2:	8e 37       	cpi	r24, 0x7E	; 126
     bc4:	25 e2       	ldi	r18, 0x25	; 37
     bc6:	92 07       	cpc	r25, r18
     bc8:	21 f0       	breq	.+8      	; 0xbd2 <eventActionSH+0x50>
     bca:	8a 32       	cpi	r24, 0x2A	; 42
     bcc:	21 e7       	ldi	r18, 0x71	; 113
     bce:	92 07       	cpc	r25, r18
     bd0:	29 f4       	brne	.+10     	; 0xbdc <eventActionSH+0x5a>
			sh_read = 4;
     bd2:	84 e0       	ldi	r24, 0x04	; 4
     bd4:	80 93 14 01 	sts	0x0114, r24
			//need further testing to determine 1 or 4 if a
			finished_flag = 1;
     bd8:	81 e0       	ldi	r24, 0x01	; 1
     bda:	08 95       	ret
		}
		else if(symbIdent == EV_SH_3){
     bdc:	88 34       	cpi	r24, 0x48	; 72
     bde:	25 e2       	ldi	r18, 0x25	; 37
     be0:	92 07       	cpc	r25, r18
     be2:	29 f4       	brne	.+10     	; 0xbee <eventActionSH+0x6c>
			sh_read = 3;
     be4:	83 e0       	ldi	r24, 0x03	; 3
     be6:	80 93 14 01 	sts	0x0114, r24
			finished_flag = 1;
     bea:	81 e0       	ldi	r24, 0x01	; 1
     bec:	08 95       	ret
		}
		else if(symbIdent == EV_SH_2){
     bee:	8c 31       	cpi	r24, 0x1C	; 28
     bf0:	21 e7       	ldi	r18, 0x71	; 113
     bf2:	92 07       	cpc	r25, r18
     bf4:	29 f4       	brne	.+10     	; 0xc00 <eventActionSH+0x7e>
			sh_read = 2;
     bf6:	82 e0       	ldi	r24, 0x02	; 2
     bf8:	80 93 14 01 	sts	0x0114, r24
			finished_flag = 1;
     bfc:	81 e0       	ldi	r24, 0x01	; 1
     bfe:	08 95       	ret
		}
		else if((symbIdent == EV_SH_1_a) || (symbIdent == EV_SH_1_w1) || (symbIdent == EV_SH_1_w2) || (symbIdent == EV_SH_1_w3) || (symbIdent == EV_SH_1_w4) || (symbIdent == EV_SH_1_w5) || (symbIdent == EV_SH_1_w6)){
     c00:	8a 3e       	cpi	r24, 0xEA	; 234
     c02:	2f ea       	ldi	r18, 0xAF	; 175
     c04:	92 07       	cpc	r25, r18
     c06:	99 f0       	breq	.+38     	; 0xc2e <eventActionSH+0xac>
     c08:	8c 3d       	cpi	r24, 0xDC	; 220
     c0a:	2f ea       	ldi	r18, 0xAF	; 175
     c0c:	92 07       	cpc	r25, r18
     c0e:	79 f0       	breq	.+30     	; 0xc2e <eventActionSH+0xac>
     c10:	88 3c       	cpi	r24, 0xC8	; 200
     c12:	2f ea       	ldi	r18, 0xAF	; 175
     c14:	92 07       	cpc	r25, r18
     c16:	59 f0       	breq	.+22     	; 0xc2e <eventActionSH+0xac>
     c18:	8a 3e       	cpi	r24, 0xEA	; 234
     c1a:	27 e7       	ldi	r18, 0x77	; 119
     c1c:	92 07       	cpc	r25, r18
     c1e:	39 f0       	breq	.+14     	; 0xc2e <eventActionSH+0xac>
     c20:	8c 3d       	cpi	r24, 0xDC	; 220
     c22:	27 e7       	ldi	r18, 0x77	; 119
     c24:	92 07       	cpc	r25, r18
     c26:	19 f0       	breq	.+6      	; 0xc2e <eventActionSH+0xac>
     c28:	88 3c       	cpi	r24, 0xC8	; 200
     c2a:	97 47       	sbci	r25, 0x77	; 119
     c2c:	31 f4       	brne	.+12     	; 0xc3a <eventActionSH+0xb8>
			sh_read = 1;
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	80 93 14 01 	sts	0x0114, r24
     c34:	08 95       	ret
	//Sensor value transformation
	uint16_t symbIdent = 0;					//container for sensor-read event combination
	
	
	//return value
	uint8_t finished_flag = 0;
     c36:	80 e0       	ldi	r24, 0x00	; 0
     c38:	08 95       	ret
     c3a:	80 e0       	ldi	r24, 0x00	; 0
		else{
			;
		}
	}
	return finished_flag;
}
     c3c:	08 95       	ret

00000c3e <readSH>:

void readSH(uint8_t *sh_nbr){
     c3e:	0f 93       	push	r16
     c40:	1f 93       	push	r17
     c42:	cf 93       	push	r28
     c44:	df 93       	push	r29
     c46:	8c 01       	movw	r16, r24
	int follow_p_gain_inv = SH_FOLLOW_P_GAIN_INV;
	int follow_i_gain_inv = SH_FOLLOW_I_GAIN_INV;
	
	uint16_t loop_counter = 0;
	
	read_store = 0;
     c48:	10 92 c1 02 	sts	0x02C1, r1
     c4c:	10 92 c0 02 	sts	0x02C0, r1
	sh_read = 255;
     c50:	8f ef       	ldi	r24, 0xFF	; 255
     c52:	80 93 14 01 	sts	0x0114, r24
	
	follow_line_2_init(follow_speed, follow_p_gain_inv, follow_i_gain_inv);
     c56:	40 e1       	ldi	r20, 0x10	; 16
     c58:	57 e2       	ldi	r21, 0x27	; 39
     c5a:	64 e1       	ldi	r22, 0x14	; 20
     c5c:	70 e0       	ldi	r23, 0x00	; 0
     c5e:	8e e1       	ldi	r24, 0x1E	; 30
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	0e 94 71 00 	call	0xe2	; 0xe2 <follow_line_2_init>
     c66:	c8 ec       	ldi	r28, 0xC8	; 200
     c68:	d0 e0       	ldi	r29, 0x00	; 0
	
	while((!finished_flag) && (loop_counter < MAX_DIST_SAMP)){
		
		//follow line
		follow_line_2();
     c6a:	0e 94 82 00 	call	0x104	; 0x104 <follow_line_2>
		//read sensors
		readSensorByteSH();
     c6e:	0e 94 32 05 	call	0xa64	; 0xa64 <readSensorByteSH>
		//take action
		finished_flag = eventActionSH();
     c72:	0e 94 c1 05 	call	0xb82	; 0xb82 <eventActionSH>
	read_store = 0;
	sh_read = 255;
	
	follow_line_2_init(follow_speed, follow_p_gain_inv, follow_i_gain_inv);
	
	while((!finished_flag) && (loop_counter < MAX_DIST_SAMP)){
     c76:	81 11       	cpse	r24, r1
     c78:	02 c0       	rjmp	.+4      	; 0xc7e <readSH+0x40>
     c7a:	21 97       	sbiw	r28, 0x01	; 1
     c7c:	b1 f7       	brne	.-20     	; 0xc6a <readSH+0x2c>
		//take action
		finished_flag = eventActionSH();
		loop_counter++;
	}
	
	*sh_nbr = sh_read;
     c7e:	80 91 14 01 	lds	r24, 0x0114
     c82:	f8 01       	movw	r30, r16
     c84:	80 83       	st	Z, r24
}
     c86:	df 91       	pop	r29
     c88:	cf 91       	pop	r28
     c8a:	1f 91       	pop	r17
     c8c:	0f 91       	pop	r16
     c8e:	08 95       	ret

00000c90 <play_beep>:
const char ccc[] PROGMEM = "!L16 V8 ccc";
const char fff[] PROGMEM = "!L16 V8 fff";

void play_beep(void)
{
  play_from_program_space(beep);
     c90:	82 e2       	ldi	r24, 0x22	; 34
     c92:	92 e0       	ldi	r25, 0x02	; 2
     c94:	0e 94 70 09 	call	0x12e0	; 0x12e0 <play_from_program_space>
     c98:	08 95       	ret

00000c9a <stop>:
  play_from_program_space(fff);
}
  
/* Stop robot. */
void stop(void){
	set_m1_speed(0);
     c9a:	80 e0       	ldi	r24, 0x00	; 0
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	0e 94 76 0c 	call	0x18ec	; 0x18ec <set_m1_speed>
  set_m2_speed(0);
     ca2:	80 e0       	ldi	r24, 0x00	; 0
     ca4:	90 e0       	ldi	r25, 0x00	; 0
     ca6:	0e 94 9a 0c 	call	0x1934	; 0x1934 <set_m2_speed>
  delay_ms(100);
     caa:	84 e6       	ldi	r24, 0x64	; 100
     cac:	90 e0       	ldi	r25, 0x00	; 0
     cae:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
     cb2:	08 95       	ret

00000cb4 <_ZL16currentCharacterv>:
     cb4:	90 91 33 02 	lds	r25, 0x0233
     cb8:	e0 91 2e 02 	lds	r30, 0x022E
     cbc:	f0 91 2f 02 	lds	r31, 0x022F
     cc0:	99 23       	and	r25, r25
     cc2:	11 f0       	breq	.+4      	; 0xcc8 <_ZL16currentCharacterv+0x14>
     cc4:	84 91       	lpm	r24, Z
     cc6:	01 c0       	rjmp	.+2      	; 0xcca <_ZL16currentCharacterv+0x16>
     cc8:	80 81       	ld	r24, Z
     cca:	2f eb       	ldi	r18, 0xBF	; 191
     ccc:	28 0f       	add	r18, r24
     cce:	2a 31       	cpi	r18, 0x1A	; 26
     cd0:	10 f4       	brcc	.+4      	; 0xcd6 <_ZL16currentCharacterv+0x22>
     cd2:	80 5e       	subi	r24, 0xE0	; 224
     cd4:	08 95       	ret
     cd6:	80 32       	cpi	r24, 0x20	; 32
     cd8:	49 f4       	brne	.+18     	; 0xcec <_ZL16currentCharacterv+0x38>
     cda:	9f 01       	movw	r18, r30
     cdc:	2f 5f       	subi	r18, 0xFF	; 255
     cde:	3f 4f       	sbci	r19, 0xFF	; 255
     ce0:	30 93 2f 02 	sts	0x022F, r19
     ce4:	20 93 2e 02 	sts	0x022E, r18
     ce8:	ef 2b       	or	r30, r31
     cea:	31 f7       	brne	.-52     	; 0xcb8 <_ZL16currentCharacterv+0x4>
     cec:	08 95       	ret

00000cee <_ZL9getNumberv>:
     cee:	1f 93       	push	r17
     cf0:	cf 93       	push	r28
     cf2:	df 93       	push	r29
     cf4:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZL16currentCharacterv>
     cf8:	c0 e0       	ldi	r28, 0x00	; 0
     cfa:	d0 e0       	ldi	r29, 0x00	; 0
     cfc:	1a e0       	ldi	r17, 0x0A	; 10
     cfe:	90 ed       	ldi	r25, 0xD0	; 208
     d00:	98 0f       	add	r25, r24
     d02:	9a 30       	cpi	r25, 0x0A	; 10
     d04:	b8 f4       	brcc	.+46     	; 0xd34 <_ZL9getNumberv+0x46>
     d06:	9e 01       	movw	r18, r28
     d08:	12 9f       	mul	r17, r18
     d0a:	e0 01       	movw	r28, r0
     d0c:	13 9f       	mul	r17, r19
     d0e:	d0 0d       	add	r29, r0
     d10:	11 24       	eor	r1, r1
     d12:	c8 0f       	add	r28, r24
     d14:	d1 1d       	adc	r29, r1
     d16:	87 fd       	sbrc	r24, 7
     d18:	da 95       	dec	r29
     d1a:	e0 97       	sbiw	r28, 0x30	; 48
     d1c:	80 91 2e 02 	lds	r24, 0x022E
     d20:	90 91 2f 02 	lds	r25, 0x022F
     d24:	01 96       	adiw	r24, 0x01	; 1
     d26:	90 93 2f 02 	sts	0x022F, r25
     d2a:	80 93 2e 02 	sts	0x022E, r24
     d2e:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZL16currentCharacterv>
     d32:	e5 cf       	rjmp	.-54     	; 0xcfe <_ZL9getNumberv+0x10>
     d34:	ce 01       	movw	r24, r28
     d36:	df 91       	pop	r29
     d38:	cf 91       	pop	r28
     d3a:	1f 91       	pop	r17
     d3c:	08 95       	ret

00000d3e <_ZN15OrangutanBuzzer5init2Ev>:
     d3e:	10 92 6f 00 	sts	0x006F, r1
     d42:	83 e2       	ldi	r24, 0x23	; 35
     d44:	80 93 80 00 	sts	0x0080, r24
     d48:	81 e1       	ldi	r24, 0x11	; 17
     d4a:	80 93 81 00 	sts	0x0081, r24
     d4e:	10 92 82 00 	sts	0x0082, r1
     d52:	80 e1       	ldi	r24, 0x10	; 16
     d54:	97 e2       	ldi	r25, 0x27	; 39
     d56:	90 93 89 00 	sts	0x0089, r25
     d5a:	80 93 88 00 	sts	0x0088, r24
     d5e:	10 92 8b 00 	sts	0x008B, r1
     d62:	10 92 8a 00 	sts	0x008A, r1
     d66:	22 9a       	sbi	0x04, 2	; 4
     d68:	78 94       	sei
     d6a:	08 95       	ret

00000d6c <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
     d6c:	8f 92       	push	r8
     d6e:	9f 92       	push	r9
     d70:	af 92       	push	r10
     d72:	bf 92       	push	r11
     d74:	df 92       	push	r13
     d76:	ef 92       	push	r14
     d78:	ff 92       	push	r15
     d7a:	0f 93       	push	r16
     d7c:	1f 93       	push	r17
     d7e:	cf 93       	push	r28
     d80:	df 93       	push	r29
     d82:	5c 01       	movw	r10, r24
     d84:	8b 01       	movw	r16, r22
     d86:	d4 2e       	mov	r13, r20
     d88:	80 91 30 02 	lds	r24, 0x0230
     d8c:	81 11       	cpse	r24, r1
     d8e:	05 c0       	rjmp	.+10     	; 0xd9a <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
     d90:	81 e0       	ldi	r24, 0x01	; 1
     d92:	80 93 30 02 	sts	0x0230, r24
     d96:	0e 94 9f 06 	call	0xd3e	; 0xd3e <_ZN15OrangutanBuzzer5init2Ev>
     d9a:	10 92 09 01 	sts	0x0109, r1
     d9e:	b7 fe       	sbrs	r11, 7
     da0:	05 c0       	rjmp	.+10     	; 0xdac <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
     da2:	e8 94       	clt
     da4:	b7 f8       	bld	r11, 7
     da6:	2a e0       	ldi	r18, 0x0A	; 10
     da8:	f2 2e       	mov	r15, r18
     daa:	02 c0       	rjmp	.+4      	; 0xdb0 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
     dac:	ff 24       	eor	r15, r15
     dae:	f3 94       	inc	r15
     db0:	e0 90 81 00 	lds	r14, 0x0081
     db4:	2e 2d       	mov	r18, r14
     db6:	28 7f       	andi	r18, 0xF8	; 248
     db8:	e2 2e       	mov	r14, r18
     dba:	48 ec       	ldi	r20, 0xC8	; 200
     dbc:	f4 9e       	mul	r15, r20
     dbe:	c0 01       	movw	r24, r0
     dc0:	11 24       	eor	r1, r1
     dc2:	8a 15       	cp	r24, r10
     dc4:	9b 05       	cpc	r25, r11
     dc6:	e0 f4       	brcc	.+56     	; 0xe00 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
     dc8:	e5 01       	movw	r28, r10
     dca:	51 e1       	ldi	r21, 0x11	; 17
     dcc:	a5 16       	cp	r10, r21
     dce:	57 e2       	ldi	r21, 0x27	; 39
     dd0:	b5 06       	cpc	r11, r21
     dd2:	10 f0       	brcs	.+4      	; 0xdd8 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
     dd4:	c0 e1       	ldi	r28, 0x10	; 16
     dd6:	d7 e2       	ldi	r29, 0x27	; 39
     dd8:	be 01       	movw	r22, r28
     dda:	76 95       	lsr	r23
     ddc:	67 95       	ror	r22
     dde:	80 e0       	ldi	r24, 0x00	; 0
     de0:	90 e0       	ldi	r25, 0x00	; 0
     de2:	60 58       	subi	r22, 0x80	; 128
     de4:	79 46       	sbci	r23, 0x69	; 105
     de6:	87 46       	sbci	r24, 0x67	; 103
     de8:	9f 4f       	sbci	r25, 0xFF	; 255
     dea:	4e 01       	movw	r8, r28
     dec:	a1 2c       	mov	r10, r1
     dee:	b1 2c       	mov	r11, r1
     df0:	a5 01       	movw	r20, r10
     df2:	94 01       	movw	r18, r8
     df4:	0e 94 f9 13 	call	0x27f2	; 0x27f2 <__udivmodsi4>
     df8:	59 01       	movw	r10, r18
     dfa:	8e 2d       	mov	r24, r14
     dfc:	81 60       	ori	r24, 0x01	; 1
     dfe:	24 c0       	rjmp	.+72     	; 0xe48 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
     e00:	c8 e2       	ldi	r28, 0x28	; 40
     e02:	fc 9e       	mul	r15, r28
     e04:	c0 2d       	mov	r28, r0
     e06:	11 24       	eor	r1, r1
     e08:	d0 e0       	ldi	r29, 0x00	; 0
     e0a:	ca 15       	cp	r28, r10
     e0c:	db 05       	cpc	r29, r11
     e0e:	08 f4       	brcc	.+2      	; 0xe12 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
     e10:	e5 01       	movw	r28, r10
     e12:	be 01       	movw	r22, r28
     e14:	76 95       	lsr	r23
     e16:	67 95       	ror	r22
     e18:	9e 01       	movw	r18, r28
     e1a:	40 e0       	ldi	r20, 0x00	; 0
     e1c:	50 e0       	ldi	r21, 0x00	; 0
     e1e:	8a e0       	ldi	r24, 0x0A	; 10
     e20:	f8 12       	cpse	r15, r24
     e22:	07 c0       	rjmp	.+14     	; 0xe32 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
     e24:	80 e0       	ldi	r24, 0x00	; 0
     e26:	90 e0       	ldi	r25, 0x00	; 0
     e28:	60 5e       	subi	r22, 0xE0	; 224
     e2a:	73 44       	sbci	r23, 0x43	; 67
     e2c:	81 44       	sbci	r24, 0x41	; 65
     e2e:	9f 4f       	sbci	r25, 0xFF	; 255
     e30:	06 c0       	rjmp	.+12     	; 0xe3e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
     e32:	80 e0       	ldi	r24, 0x00	; 0
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	60 53       	subi	r22, 0x30	; 48
     e38:	7d 4e       	sbci	r23, 0xED	; 237
     e3a:	8c 4e       	sbci	r24, 0xEC	; 236
     e3c:	9f 4f       	sbci	r25, 0xFF	; 255
     e3e:	0e 94 f9 13 	call	0x27f2	; 0x27f2 <__udivmodsi4>
     e42:	59 01       	movw	r10, r18
     e44:	8e 2d       	mov	r24, r14
     e46:	82 60       	ori	r24, 0x02	; 2
     e48:	88 2e       	mov	r8, r24
     e4a:	2a e0       	ldi	r18, 0x0A	; 10
     e4c:	f2 12       	cpse	r15, r18
     e4e:	07 c0       	rjmp	.+14     	; 0xe5e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
     e50:	ce 01       	movw	r24, r28
     e52:	05 96       	adiw	r24, 0x05	; 5
     e54:	6a e0       	ldi	r22, 0x0A	; 10
     e56:	70 e0       	ldi	r23, 0x00	; 0
     e58:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__udivmodhi4>
     e5c:	eb 01       	movw	r28, r22
     e5e:	c8 3e       	cpi	r28, 0xE8	; 232
     e60:	43 e0       	ldi	r20, 0x03	; 3
     e62:	d4 07       	cpc	r29, r20
     e64:	59 f0       	breq	.+22     	; 0xe7c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
     e66:	98 01       	movw	r18, r16
     e68:	de 01       	movw	r26, r28
     e6a:	0e 94 3a 14 	call	0x2874	; 0x2874 <__umulhisi3>
     e6e:	28 ee       	ldi	r18, 0xE8	; 232
     e70:	33 e0       	ldi	r19, 0x03	; 3
     e72:	40 e0       	ldi	r20, 0x00	; 0
     e74:	50 e0       	ldi	r21, 0x00	; 0
     e76:	0e 94 1b 14 	call	0x2836	; 0x2836 <__divmodsi4>
     e7a:	89 01       	movw	r16, r18
     e7c:	10 92 6f 00 	sts	0x006F, r1
     e80:	80 92 81 00 	sts	0x0081, r8
     e84:	b0 92 89 00 	sts	0x0089, r11
     e88:	a0 92 88 00 	sts	0x0088, r10
     e8c:	20 91 88 00 	lds	r18, 0x0088
     e90:	30 91 89 00 	lds	r19, 0x0089
     e94:	4d 2d       	mov	r20, r13
     e96:	40 31       	cpi	r20, 0x10	; 16
     e98:	08 f0       	brcs	.+2      	; 0xe9c <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
     e9a:	4f e0       	ldi	r20, 0x0F	; 15
     e9c:	80 e1       	ldi	r24, 0x10	; 16
     e9e:	90 e0       	ldi	r25, 0x00	; 0
     ea0:	84 1b       	sub	r24, r20
     ea2:	91 09       	sbc	r25, r1
     ea4:	a9 01       	movw	r20, r18
     ea6:	02 c0       	rjmp	.+4      	; 0xeac <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
     ea8:	56 95       	lsr	r21
     eaa:	47 95       	ror	r20
     eac:	8a 95       	dec	r24
     eae:	e2 f7       	brpl	.-8      	; 0xea8 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
     eb0:	50 93 8b 00 	sts	0x008B, r21
     eb4:	40 93 8a 00 	sts	0x008A, r20
     eb8:	10 93 36 02 	sts	0x0236, r17
     ebc:	00 93 35 02 	sts	0x0235, r16
     ec0:	86 b3       	in	r24, 0x16	; 22
     ec2:	8f ef       	ldi	r24, 0xFF	; 255
     ec4:	86 bb       	out	0x16, r24	; 22
     ec6:	81 e0       	ldi	r24, 0x01	; 1
     ec8:	80 93 6f 00 	sts	0x006F, r24
     ecc:	df 91       	pop	r29
     ece:	cf 91       	pop	r28
     ed0:	1f 91       	pop	r17
     ed2:	0f 91       	pop	r16
     ed4:	ff 90       	pop	r15
     ed6:	ef 90       	pop	r14
     ed8:	df 90       	pop	r13
     eda:	bf 90       	pop	r11
     edc:	af 90       	pop	r10
     ede:	9f 90       	pop	r9
     ee0:	8f 90       	pop	r8
     ee2:	08 95       	ret

00000ee4 <_ZN15OrangutanBuzzer8playNoteEhjh>:
     ee4:	cf 93       	push	r28
     ee6:	df 93       	push	r29
     ee8:	eb 01       	movw	r28, r22
     eea:	8f 3f       	cpi	r24, 0xFF	; 255
     eec:	11 f0       	breq	.+4      	; 0xef2 <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
     eee:	41 11       	cpse	r20, r1
     ef0:	05 c0       	rjmp	.+10     	; 0xefc <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
     ef2:	40 e0       	ldi	r20, 0x00	; 0
     ef4:	be 01       	movw	r22, r28
     ef6:	88 ee       	ldi	r24, 0xE8	; 232
     ef8:	93 e0       	ldi	r25, 0x03	; 3
     efa:	43 c0       	rjmp	.+134    	; 0xf82 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
     efc:	81 31       	cpi	r24, 0x11	; 17
     efe:	30 f0       	brcs	.+12     	; 0xf0c <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
     f00:	50 ef       	ldi	r21, 0xF0	; 240
     f02:	58 0f       	add	r21, r24
     f04:	50 36       	cpi	r21, 0x60	; 96
     f06:	18 f0       	brcs	.+6      	; 0xf0e <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
     f08:	5f e5       	ldi	r21, 0x5F	; 95
     f0a:	01 c0       	rjmp	.+2      	; 0xf0e <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
     f0c:	50 e0       	ldi	r21, 0x00	; 0
     f0e:	85 2f       	mov	r24, r21
     f10:	6c e0       	ldi	r22, 0x0C	; 12
     f12:	0e 94 c5 13 	call	0x278a	; 0x278a <__udivmodqi4>
     f16:	68 2f       	mov	r22, r24
     f18:	74 ef       	ldi	r23, 0xF4	; 244
     f1a:	76 03       	mulsu	r23, r22
     f1c:	90 01       	movw	r18, r0
     f1e:	11 24       	eor	r1, r1
     f20:	25 0f       	add	r18, r21
     f22:	31 1d       	adc	r19, r1
     f24:	2c 30       	cpi	r18, 0x0C	; 12
     f26:	31 05       	cpc	r19, r1
     f28:	40 f4       	brcc	.+16     	; 0xf3a <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
     f2a:	f9 01       	movw	r30, r18
     f2c:	ee 0f       	add	r30, r30
     f2e:	ff 1f       	adc	r31, r31
     f30:	e3 5d       	subi	r30, 0xD3	; 211
     f32:	fe 4f       	sbci	r31, 0xFE	; 254
     f34:	20 81       	ld	r18, Z
     f36:	31 81       	ldd	r19, Z+1	; 0x01
     f38:	02 c0       	rjmp	.+4      	; 0xf3e <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
     f3a:	20 e0       	ldi	r18, 0x00	; 0
     f3c:	30 e0       	ldi	r19, 0x00	; 0
     f3e:	87 30       	cpi	r24, 0x07	; 7
     f40:	81 f0       	breq	.+32     	; 0xf62 <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
     f42:	08 2e       	mov	r0, r24
     f44:	02 c0       	rjmp	.+4      	; 0xf4a <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
     f46:	22 0f       	add	r18, r18
     f48:	33 1f       	adc	r19, r19
     f4a:	0a 94       	dec	r0
     f4c:	e2 f7       	brpl	.-8      	; 0xf46 <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
     f4e:	82 30       	cpi	r24, 0x02	; 2
     f50:	28 f0       	brcs	.+10     	; 0xf5c <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
     f52:	c9 01       	movw	r24, r18
     f54:	05 96       	adiw	r24, 0x05	; 5
     f56:	6a e0       	ldi	r22, 0x0A	; 10
     f58:	70 e0       	ldi	r23, 0x00	; 0
     f5a:	0c c0       	rjmp	.+24     	; 0xf74 <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
     f5c:	c9 01       	movw	r24, r18
     f5e:	90 58       	subi	r25, 0x80	; 128
     f60:	0c c0       	rjmp	.+24     	; 0xf7a <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
     f62:	c9 01       	movw	r24, r18
     f64:	36 e0       	ldi	r19, 0x06	; 6
     f66:	88 0f       	add	r24, r24
     f68:	99 1f       	adc	r25, r25
     f6a:	3a 95       	dec	r19
     f6c:	e1 f7       	brne	.-8      	; 0xf66 <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
     f6e:	02 96       	adiw	r24, 0x02	; 2
     f70:	65 e0       	ldi	r22, 0x05	; 5
     f72:	70 e0       	ldi	r23, 0x00	; 0
     f74:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__udivmodhi4>
     f78:	cb 01       	movw	r24, r22
     f7a:	40 31       	cpi	r20, 0x10	; 16
     f7c:	08 f0       	brcs	.+2      	; 0xf80 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
     f7e:	4f e0       	ldi	r20, 0x0F	; 15
     f80:	be 01       	movw	r22, r28
     f82:	0e 94 b6 06 	call	0xd6c	; 0xd6c <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     f86:	df 91       	pop	r29
     f88:	cf 91       	pop	r28
     f8a:	08 95       	ret

00000f8c <_ZL8nextNotev>:
     f8c:	a2 e0       	ldi	r26, 0x02	; 2
     f8e:	b0 e0       	ldi	r27, 0x00	; 0
     f90:	ec ec       	ldi	r30, 0xCC	; 204
     f92:	f7 e0       	ldi	r31, 0x07	; 7
     f94:	0c 94 5e 14 	jmp	0x28bc	; 0x28bc <__prologue_saves__+0x4>
     f98:	90 90 08 01 	lds	r9, 0x0108
     f9c:	80 91 32 02 	lds	r24, 0x0232
     fa0:	88 23       	and	r24, r24
     fa2:	21 f0       	breq	.+8      	; 0xfac <_ZL8nextNotev+0x20>
     fa4:	60 91 31 02 	lds	r22, 0x0231
     fa8:	61 11       	cpse	r22, r1
     faa:	17 c0       	rjmp	.+46     	; 0xfda <_ZL8nextNotev+0x4e>
     fac:	77 24       	eor	r7, r7
     fae:	73 94       	inc	r7
     fb0:	b0 ec       	ldi	r27, 0xC0	; 192
     fb2:	ab 2e       	mov	r10, r27
     fb4:	bd e5       	ldi	r27, 0x5D	; 93
     fb6:	bb 2e       	mov	r11, r27
     fb8:	1a e0       	ldi	r17, 0x0A	; 10
     fba:	61 2e       	mov	r6, r17
     fbc:	04 e0       	ldi	r16, 0x04	; 4
     fbe:	80 2e       	mov	r8, r16
     fc0:	80 ed       	ldi	r24, 0xD0	; 208
     fc2:	c8 2e       	mov	r12, r24
     fc4:	87 e0       	ldi	r24, 0x07	; 7
     fc6:	d8 2e       	mov	r13, r24
     fc8:	94 e0       	ldi	r25, 0x04	; 4
     fca:	e9 2e       	mov	r14, r25
     fcc:	f1 2c       	mov	r15, r1
     fce:	04 ef       	ldi	r16, 0xF4	; 244
     fd0:	11 e0       	ldi	r17, 0x01	; 1
     fd2:	2f e0       	ldi	r18, 0x0F	; 15
     fd4:	42 2e       	mov	r4, r18
     fd6:	51 2c       	mov	r5, r1
     fd8:	15 c0       	rjmp	.+42     	; 0x1004 <_ZL8nextNotev+0x78>
     fda:	70 e0       	ldi	r23, 0x00	; 0
     fdc:	40 e0       	ldi	r20, 0x00	; 0
     fde:	88 ee       	ldi	r24, 0xE8	; 232
     fe0:	93 e0       	ldi	r25, 0x03	; 3
     fe2:	0e 94 b6 06 	call	0xd6c	; 0xd6c <_ZN15OrangutanBuzzer13playFrequencyEjjh>
     fe6:	10 92 31 02 	sts	0x0231, r1
     fea:	17 c1       	rjmp	.+558    	; 0x121a <_ZL8nextNotev+0x28e>
     fec:	86 36       	cpi	r24, 0x66	; 102
     fee:	d4 f5       	brge	.+116    	; 0x1064 <_ZL8nextNotev+0xd8>
     ff0:	81 36       	cpi	r24, 0x61	; 97
     ff2:	09 f4       	brne	.+2      	; 0xff6 <_ZL8nextNotev+0x6a>
     ff4:	a9 c0       	rjmp	.+338    	; 0x1148 <_ZL8nextNotev+0x1bc>
     ff6:	7c f5       	brge	.+94     	; 0x1056 <_ZL8nextNotev+0xca>
     ff8:	8c 33       	cpi	r24, 0x3C	; 60
     ffa:	09 f4       	brne	.+2      	; 0xffe <_ZL8nextNotev+0x72>
     ffc:	60 c0       	rjmp	.+192    	; 0x10be <_ZL8nextNotev+0x132>
     ffe:	8e 33       	cpi	r24, 0x3E	; 62
    1000:	81 f4       	brne	.+32     	; 0x1022 <_ZL8nextNotev+0x96>
    1002:	93 94       	inc	r9
    1004:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZL16currentCharacterv>
    1008:	20 91 2e 02 	lds	r18, 0x022E
    100c:	30 91 2f 02 	lds	r19, 0x022F
    1010:	2f 5f       	subi	r18, 0xFF	; 255
    1012:	3f 4f       	sbci	r19, 0xFF	; 255
    1014:	30 93 2f 02 	sts	0x022F, r19
    1018:	20 93 2e 02 	sts	0x022E, r18
    101c:	85 36       	cpi	r24, 0x65	; 101
    101e:	31 f7       	brne	.-52     	; 0xfec <_ZL8nextNotev+0x60>
    1020:	52 c0       	rjmp	.+164    	; 0x10c6 <_ZL8nextNotev+0x13a>
    1022:	81 32       	cpi	r24, 0x21	; 33
    1024:	09 f0       	breq	.+2      	; 0x1028 <_ZL8nextNotev+0x9c>
    1026:	8b c0       	rjmp	.+278    	; 0x113e <_ZL8nextNotev+0x1b2>
    1028:	80 92 08 01 	sts	0x0108, r8
    102c:	d0 92 07 01 	sts	0x0107, r13
    1030:	c0 92 06 01 	sts	0x0106, r12
    1034:	f0 92 05 01 	sts	0x0105, r15
    1038:	e0 92 04 01 	sts	0x0104, r14
    103c:	10 93 03 01 	sts	0x0103, r17
    1040:	00 93 02 01 	sts	0x0102, r16
    1044:	50 92 01 01 	sts	0x0101, r5
    1048:	40 92 00 01 	sts	0x0100, r4
    104c:	10 92 32 02 	sts	0x0232, r1
    1050:	a4 e0       	ldi	r26, 0x04	; 4
    1052:	9a 2e       	mov	r9, r26
    1054:	d7 cf       	rjmp	.-82     	; 0x1004 <_ZL8nextNotev+0x78>
    1056:	83 36       	cpi	r24, 0x63	; 99
    1058:	a1 f1       	breq	.+104    	; 0x10c2 <_ZL8nextNotev+0x136>
    105a:	0c f4       	brge	.+2      	; 0x105e <_ZL8nextNotev+0xd2>
    105c:	78 c0       	rjmp	.+240    	; 0x114e <_ZL8nextNotev+0x1c2>
    105e:	10 e0       	ldi	r17, 0x00	; 0
    1060:	82 e0       	ldi	r24, 0x02	; 2
    1062:	77 c0       	rjmp	.+238    	; 0x1152 <_ZL8nextNotev+0x1c6>
    1064:	8d 36       	cpi	r24, 0x6D	; 109
    1066:	c1 f1       	breq	.+112    	; 0x10d8 <_ZL8nextNotev+0x14c>
    1068:	94 f4       	brge	.+36     	; 0x108e <_ZL8nextNotev+0x102>
    106a:	87 36       	cpi	r24, 0x67	; 103
    106c:	91 f1       	breq	.+100    	; 0x10d2 <_ZL8nextNotev+0x146>
    106e:	74 f1       	brlt	.+92     	; 0x10cc <_ZL8nextNotev+0x140>
    1070:	8c 36       	cpi	r24, 0x6C	; 108
    1072:	09 f0       	breq	.+2      	; 0x1076 <_ZL8nextNotev+0xea>
    1074:	64 c0       	rjmp	.+200    	; 0x113e <_ZL8nextNotev+0x1b2>
    1076:	0e 94 77 06 	call	0xcee	; 0xcee <_ZL9getNumberv>
    107a:	bc 01       	movw	r22, r24
    107c:	90 93 05 01 	sts	0x0105, r25
    1080:	80 93 04 01 	sts	0x0104, r24
    1084:	80 91 06 01 	lds	r24, 0x0106
    1088:	90 91 07 01 	lds	r25, 0x0107
    108c:	51 c0       	rjmp	.+162    	; 0x1130 <_ZL8nextNotev+0x1a4>
    108e:	82 37       	cpi	r24, 0x72	; 114
    1090:	c9 f1       	breq	.+114    	; 0x1104 <_ZL8nextNotev+0x178>
    1092:	4c f4       	brge	.+18     	; 0x10a6 <_ZL8nextNotev+0x11a>
    1094:	8f 36       	cpi	r24, 0x6F	; 111
    1096:	09 f0       	breq	.+2      	; 0x109a <_ZL8nextNotev+0x10e>
    1098:	52 c0       	rjmp	.+164    	; 0x113e <_ZL8nextNotev+0x1b2>
    109a:	0e 94 77 06 	call	0xcee	; 0xcee <_ZL9getNumberv>
    109e:	98 2e       	mov	r9, r24
    10a0:	80 93 08 01 	sts	0x0108, r24
    10a4:	af cf       	rjmp	.-162    	; 0x1004 <_ZL8nextNotev+0x78>
    10a6:	84 37       	cpi	r24, 0x74	; 116
    10a8:	81 f1       	breq	.+96     	; 0x110a <_ZL8nextNotev+0x17e>
    10aa:	86 37       	cpi	r24, 0x76	; 118
    10ac:	09 f0       	breq	.+2      	; 0x10b0 <_ZL8nextNotev+0x124>
    10ae:	47 c0       	rjmp	.+142    	; 0x113e <_ZL8nextNotev+0x1b2>
    10b0:	0e 94 77 06 	call	0xcee	; 0xcee <_ZL9getNumberv>
    10b4:	90 93 01 01 	sts	0x0101, r25
    10b8:	80 93 00 01 	sts	0x0100, r24
    10bc:	a3 cf       	rjmp	.-186    	; 0x1004 <_ZL8nextNotev+0x78>
    10be:	9a 94       	dec	r9
    10c0:	a1 cf       	rjmp	.-190    	; 0x1004 <_ZL8nextNotev+0x78>
    10c2:	10 e0       	ldi	r17, 0x00	; 0
    10c4:	20 c0       	rjmp	.+64     	; 0x1106 <_ZL8nextNotev+0x17a>
    10c6:	10 e0       	ldi	r17, 0x00	; 0
    10c8:	84 e0       	ldi	r24, 0x04	; 4
    10ca:	43 c0       	rjmp	.+134    	; 0x1152 <_ZL8nextNotev+0x1c6>
    10cc:	10 e0       	ldi	r17, 0x00	; 0
    10ce:	85 e0       	ldi	r24, 0x05	; 5
    10d0:	40 c0       	rjmp	.+128    	; 0x1152 <_ZL8nextNotev+0x1c6>
    10d2:	10 e0       	ldi	r17, 0x00	; 0
    10d4:	87 e0       	ldi	r24, 0x07	; 7
    10d6:	3d c0       	rjmp	.+122    	; 0x1152 <_ZL8nextNotev+0x1c6>
    10d8:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZL16currentCharacterv>
    10dc:	8c 36       	cpi	r24, 0x6C	; 108
    10de:	19 f4       	brne	.+6      	; 0x10e6 <_ZL8nextNotev+0x15a>
    10e0:	10 92 32 02 	sts	0x0232, r1
    10e4:	04 c0       	rjmp	.+8      	; 0x10ee <_ZL8nextNotev+0x162>
    10e6:	70 92 32 02 	sts	0x0232, r7
    10ea:	10 92 31 02 	sts	0x0231, r1
    10ee:	20 91 2e 02 	lds	r18, 0x022E
    10f2:	30 91 2f 02 	lds	r19, 0x022F
    10f6:	2f 5f       	subi	r18, 0xFF	; 255
    10f8:	3f 4f       	sbci	r19, 0xFF	; 255
    10fa:	30 93 2f 02 	sts	0x022F, r19
    10fe:	20 93 2e 02 	sts	0x022E, r18
    1102:	80 cf       	rjmp	.-256    	; 0x1004 <_ZL8nextNotev+0x78>
    1104:	11 e0       	ldi	r17, 0x01	; 1
    1106:	80 e0       	ldi	r24, 0x00	; 0
    1108:	24 c0       	rjmp	.+72     	; 0x1152 <_ZL8nextNotev+0x1c6>
    110a:	0e 94 77 06 	call	0xcee	; 0xcee <_ZL9getNumberv>
    110e:	bc 01       	movw	r22, r24
    1110:	c5 01       	movw	r24, r10
    1112:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__udivmodhi4>
    1116:	66 9e       	mul	r6, r22
    1118:	c0 01       	movw	r24, r0
    111a:	67 9e       	mul	r6, r23
    111c:	90 0d       	add	r25, r0
    111e:	11 24       	eor	r1, r1
    1120:	90 93 07 01 	sts	0x0107, r25
    1124:	80 93 06 01 	sts	0x0106, r24
    1128:	60 91 04 01 	lds	r22, 0x0104
    112c:	70 91 05 01 	lds	r23, 0x0105
    1130:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__udivmodhi4>
    1134:	70 93 03 01 	sts	0x0103, r23
    1138:	60 93 02 01 	sts	0x0102, r22
    113c:	63 cf       	rjmp	.-314    	; 0x1004 <_ZL8nextNotev+0x78>
    113e:	10 92 2f 02 	sts	0x022F, r1
    1142:	10 92 2e 02 	sts	0x022E, r1
    1146:	69 c0       	rjmp	.+210    	; 0x121a <_ZL8nextNotev+0x28e>
    1148:	10 e0       	ldi	r17, 0x00	; 0
    114a:	89 e0       	ldi	r24, 0x09	; 9
    114c:	02 c0       	rjmp	.+4      	; 0x1152 <_ZL8nextNotev+0x1c6>
    114e:	10 e0       	ldi	r17, 0x00	; 0
    1150:	8b e0       	ldi	r24, 0x0B	; 11
    1152:	08 2f       	mov	r16, r24
    1154:	9c e0       	ldi	r25, 0x0C	; 12
    1156:	99 9e       	mul	r9, r25
    1158:	00 0d       	add	r16, r0
    115a:	11 24       	eor	r1, r1
    115c:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZL16currentCharacterv>
    1160:	98 2f       	mov	r25, r24
    1162:	97 7f       	andi	r25, 0xF7	; 247
    1164:	93 32       	cpi	r25, 0x23	; 35
    1166:	61 f4       	brne	.+24     	; 0x1180 <_ZL8nextNotev+0x1f4>
    1168:	20 91 2e 02 	lds	r18, 0x022E
    116c:	30 91 2f 02 	lds	r19, 0x022F
    1170:	2f 5f       	subi	r18, 0xFF	; 255
    1172:	3f 4f       	sbci	r19, 0xFF	; 255
    1174:	30 93 2f 02 	sts	0x022F, r19
    1178:	20 93 2e 02 	sts	0x022E, r18
    117c:	0f 5f       	subi	r16, 0xFF	; 255
    117e:	ee cf       	rjmp	.-36     	; 0x115c <_ZL8nextNotev+0x1d0>
    1180:	8d 32       	cpi	r24, 0x2D	; 45
    1182:	71 f4       	brne	.+28     	; 0x11a0 <_ZL8nextNotev+0x214>
    1184:	20 91 2e 02 	lds	r18, 0x022E
    1188:	30 91 2f 02 	lds	r19, 0x022F
    118c:	2f 5f       	subi	r18, 0xFF	; 255
    118e:	3f 4f       	sbci	r19, 0xFF	; 255
    1190:	30 93 2f 02 	sts	0x022F, r19
    1194:	20 93 2e 02 	sts	0x022E, r18
    1198:	01 50       	subi	r16, 0x01	; 1
    119a:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZL16currentCharacterv>
    119e:	f0 cf       	rjmp	.-32     	; 0x1180 <_ZL8nextNotev+0x1f4>
    11a0:	60 91 02 01 	lds	r22, 0x0102
    11a4:	70 91 03 01 	lds	r23, 0x0103
    11a8:	81 53       	subi	r24, 0x31	; 49
    11aa:	88 30       	cpi	r24, 0x08	; 8
    11ac:	50 f4       	brcc	.+20     	; 0x11c2 <_ZL8nextNotev+0x236>
    11ae:	e0 90 06 01 	lds	r14, 0x0106
    11b2:	f0 90 07 01 	lds	r15, 0x0107
    11b6:	0e 94 77 06 	call	0xcee	; 0xcee <_ZL9getNumberv>
    11ba:	bc 01       	movw	r22, r24
    11bc:	c7 01       	movw	r24, r14
    11be:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__udivmodhi4>
    11c2:	7b 01       	movw	r14, r22
    11c4:	f6 94       	lsr	r15
    11c6:	e7 94       	ror	r14
    11c8:	69 83       	std	Y+1, r22	; 0x01
    11ca:	7a 83       	std	Y+2, r23	; 0x02
    11cc:	0e 94 5a 06 	call	0xcb4	; 0xcb4 <_ZL16currentCharacterv>
    11d0:	69 81       	ldd	r22, Y+1	; 0x01
    11d2:	7a 81       	ldd	r23, Y+2	; 0x02
    11d4:	8e 32       	cpi	r24, 0x2E	; 46
    11d6:	69 f4       	brne	.+26     	; 0x11f2 <_ZL8nextNotev+0x266>
    11d8:	20 91 2e 02 	lds	r18, 0x022E
    11dc:	30 91 2f 02 	lds	r19, 0x022F
    11e0:	2f 5f       	subi	r18, 0xFF	; 255
    11e2:	3f 4f       	sbci	r19, 0xFF	; 255
    11e4:	30 93 2f 02 	sts	0x022F, r19
    11e8:	20 93 2e 02 	sts	0x022E, r18
    11ec:	6e 0d       	add	r22, r14
    11ee:	7f 1d       	adc	r23, r15
    11f0:	e9 cf       	rjmp	.-46     	; 0x11c4 <_ZL8nextNotev+0x238>
    11f2:	80 91 32 02 	lds	r24, 0x0232
    11f6:	88 23       	and	r24, r24
    11f8:	39 f0       	breq	.+14     	; 0x1208 <_ZL8nextNotev+0x27c>
    11fa:	9b 01       	movw	r18, r22
    11fc:	36 95       	lsr	r19
    11fe:	27 95       	ror	r18
    1200:	20 93 31 02 	sts	0x0231, r18
    1204:	62 1b       	sub	r22, r18
    1206:	71 09       	sbc	r23, r1
    1208:	40 91 00 01 	lds	r20, 0x0100
    120c:	11 23       	and	r17, r17
    120e:	11 f0       	breq	.+4      	; 0x1214 <_ZL8nextNotev+0x288>
    1210:	8f ef       	ldi	r24, 0xFF	; 255
    1212:	01 c0       	rjmp	.+2      	; 0x1216 <_ZL8nextNotev+0x28a>
    1214:	80 2f       	mov	r24, r16
    1216:	0e 94 72 07 	call	0xee4	; 0xee4 <_ZN15OrangutanBuzzer8playNoteEhjh>
    121a:	22 96       	adiw	r28, 0x02	; 2
    121c:	e0 e1       	ldi	r30, 0x10	; 16
    121e:	0c 94 7a 14 	jmp	0x28f4	; 0x28f4 <__epilogue_restores__+0x4>

00001222 <__vector_13>:
    1222:	1f 92       	push	r1
    1224:	0f 92       	push	r0
    1226:	0f b6       	in	r0, 0x3f	; 63
    1228:	0f 92       	push	r0
    122a:	11 24       	eor	r1, r1
    122c:	2f 93       	push	r18
    122e:	3f 93       	push	r19
    1230:	4f 93       	push	r20
    1232:	5f 93       	push	r21
    1234:	6f 93       	push	r22
    1236:	7f 93       	push	r23
    1238:	8f 93       	push	r24
    123a:	9f 93       	push	r25
    123c:	af 93       	push	r26
    123e:	bf 93       	push	r27
    1240:	ef 93       	push	r30
    1242:	ff 93       	push	r31
    1244:	80 91 35 02 	lds	r24, 0x0235
    1248:	90 91 36 02 	lds	r25, 0x0236
    124c:	9c 01       	movw	r18, r24
    124e:	21 50       	subi	r18, 0x01	; 1
    1250:	31 09       	sbc	r19, r1
    1252:	30 93 36 02 	sts	0x0236, r19
    1256:	20 93 35 02 	sts	0x0235, r18
    125a:	89 2b       	or	r24, r25
    125c:	11 f5       	brne	.+68     	; 0x12a2 <__vector_13+0x80>
    125e:	10 92 6f 00 	sts	0x006F, r1
    1262:	78 94       	sei
    1264:	80 91 81 00 	lds	r24, 0x0081
    1268:	88 7f       	andi	r24, 0xF8	; 248
    126a:	81 60       	ori	r24, 0x01	; 1
    126c:	80 93 81 00 	sts	0x0081, r24
    1270:	80 e1       	ldi	r24, 0x10	; 16
    1272:	97 e2       	ldi	r25, 0x27	; 39
    1274:	90 93 89 00 	sts	0x0089, r25
    1278:	80 93 88 00 	sts	0x0088, r24
    127c:	10 92 8b 00 	sts	0x008B, r1
    1280:	10 92 8a 00 	sts	0x008A, r1
    1284:	81 e0       	ldi	r24, 0x01	; 1
    1286:	80 93 09 01 	sts	0x0109, r24
    128a:	80 91 2e 02 	lds	r24, 0x022E
    128e:	90 91 2f 02 	lds	r25, 0x022F
    1292:	89 2b       	or	r24, r25
    1294:	31 f0       	breq	.+12     	; 0x12a2 <__vector_13+0x80>
    1296:	80 91 34 02 	lds	r24, 0x0234
    129a:	81 11       	cpse	r24, r1
    129c:	02 c0       	rjmp	.+4      	; 0x12a2 <__vector_13+0x80>
    129e:	0e 94 c6 07 	call	0xf8c	; 0xf8c <_ZL8nextNotev>
    12a2:	ff 91       	pop	r31
    12a4:	ef 91       	pop	r30
    12a6:	bf 91       	pop	r27
    12a8:	af 91       	pop	r26
    12aa:	9f 91       	pop	r25
    12ac:	8f 91       	pop	r24
    12ae:	7f 91       	pop	r23
    12b0:	6f 91       	pop	r22
    12b2:	5f 91       	pop	r21
    12b4:	4f 91       	pop	r20
    12b6:	3f 91       	pop	r19
    12b8:	2f 91       	pop	r18
    12ba:	0f 90       	pop	r0
    12bc:	0f be       	out	0x3f, r0	; 63
    12be:	0f 90       	pop	r0
    12c0:	1f 90       	pop	r1
    12c2:	18 95       	reti

000012c4 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>:
    12c4:	10 92 6f 00 	sts	0x006F, r1
    12c8:	90 93 2f 02 	sts	0x022F, r25
    12cc:	80 93 2e 02 	sts	0x022E, r24
    12d0:	81 e0       	ldi	r24, 0x01	; 1
    12d2:	80 93 33 02 	sts	0x0233, r24
    12d6:	10 92 31 02 	sts	0x0231, r1
    12da:	0e 94 c6 07 	call	0xf8c	; 0xf8c <_ZL8nextNotev>
    12de:	08 95       	ret

000012e0 <play_from_program_space>:
    12e0:	0e 94 62 09 	call	0x12c4	; 0x12c4 <_ZN15OrangutanBuzzer20playFromProgramSpaceEPKc>
    12e4:	08 95       	ret

000012e6 <void_getchar>:
    12e6:	80 e0       	ldi	r24, 0x00	; 0
    12e8:	90 e0       	ldi	r25, 0x00	; 0
    12ea:	08 95       	ret

000012ec <delay_us.constprop.0>:
    12ec:	81 e0       	ldi	r24, 0x01	; 1
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	6f 93       	push	r22
    12f2:	64 e0       	ldi	r22, 0x04	; 4
    12f4:	6a 95       	dec	r22
    12f6:	f1 f7       	brne	.-4      	; 0x12f4 <delay_us.constprop.0+0x8>
    12f8:	6f 91       	pop	r22
    12fa:	01 97       	sbiw	r24, 0x01	; 1
    12fc:	c9 f7       	brne	.-14     	; 0x12f0 <delay_us.constprop.0+0x4>
    12fe:	08 95       	ret

00001300 <_ZN12OrangutanLCD8busyWaitEv>:
    1300:	0f 93       	push	r16
    1302:	1f 93       	push	r17
    1304:	cf 93       	push	r28
    1306:	df 93       	push	r29
    1308:	1a b1       	in	r17, 0x0a	; 10
    130a:	57 98       	cbi	0x0a, 7	; 10
    130c:	5a 98       	cbi	0x0b, 2	; 11
    130e:	28 9a       	sbi	0x05, 0	; 5
    1310:	c0 e0       	ldi	r28, 0x00	; 0
    1312:	d0 e0       	ldi	r29, 0x00	; 0
    1314:	0e 94 76 09 	call	0x12ec	; 0x12ec <delay_us.constprop.0>
    1318:	5c 9a       	sbi	0x0b, 4	; 11
    131a:	0e 94 76 09 	call	0x12ec	; 0x12ec <delay_us.constprop.0>
    131e:	09 b1       	in	r16, 0x09	; 9
    1320:	5c 98       	cbi	0x0b, 4	; 11
    1322:	0e 94 76 09 	call	0x12ec	; 0x12ec <delay_us.constprop.0>
    1326:	5c 9a       	sbi	0x0b, 4	; 11
    1328:	0e 94 76 09 	call	0x12ec	; 0x12ec <delay_us.constprop.0>
    132c:	5c 98       	cbi	0x0b, 4	; 11
    132e:	24 96       	adiw	r28, 0x04	; 4
    1330:	07 ff       	sbrs	r16, 7
    1332:	10 c0       	rjmp	.+32     	; 0x1354 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    1334:	ae 01       	movw	r20, r28
    1336:	60 e0       	ldi	r22, 0x00	; 0
    1338:	70 e0       	ldi	r23, 0x00	; 0
    133a:	80 91 37 02 	lds	r24, 0x0237
    133e:	90 91 38 02 	lds	r25, 0x0238
    1342:	a0 91 39 02 	lds	r26, 0x0239
    1346:	b0 91 3a 02 	lds	r27, 0x023A
    134a:	48 17       	cp	r20, r24
    134c:	59 07       	cpc	r21, r25
    134e:	6a 07       	cpc	r22, r26
    1350:	7b 07       	cpc	r23, r27
    1352:	00 f3       	brcs	.-64     	; 0x1314 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    1354:	1a b9       	out	0x0a, r17	; 10
    1356:	df 91       	pop	r29
    1358:	cf 91       	pop	r28
    135a:	1f 91       	pop	r17
    135c:	0f 91       	pop	r16
    135e:	08 95       	ret

00001360 <_ZN12OrangutanLCD8sendDataEh>:
    1360:	95 b1       	in	r25, 0x05	; 5
    1362:	28 2f       	mov	r18, r24
    1364:	21 70       	andi	r18, 0x01	; 1
    1366:	30 e0       	ldi	r19, 0x00	; 0
    1368:	22 0f       	add	r18, r18
    136a:	33 1f       	adc	r19, r19
    136c:	48 2f       	mov	r20, r24
    136e:	46 70       	andi	r20, 0x06	; 6
    1370:	68 e0       	ldi	r22, 0x08	; 8
    1372:	46 9f       	mul	r20, r22
    1374:	a0 01       	movw	r20, r0
    1376:	11 24       	eor	r1, r1
    1378:	24 2b       	or	r18, r20
    137a:	9d 7c       	andi	r25, 0xCD	; 205
    137c:	29 2b       	or	r18, r25
    137e:	25 b9       	out	0x05, r18	; 5
    1380:	9b b1       	in	r25, 0x0b	; 11
    1382:	88 70       	andi	r24, 0x08	; 8
    1384:	82 95       	swap	r24
    1386:	80 7f       	andi	r24, 0xF0	; 240
    1388:	9f 77       	andi	r25, 0x7F	; 127
    138a:	89 2b       	or	r24, r25
    138c:	8b b9       	out	0x0b, r24	; 11
    138e:	5c 9a       	sbi	0x0b, 4	; 11
    1390:	0e 94 76 09 	call	0x12ec	; 0x12ec <delay_us.constprop.0>
    1394:	5c 98       	cbi	0x0b, 4	; 11
    1396:	0e 94 76 09 	call	0x12ec	; 0x12ec <delay_us.constprop.0>
    139a:	08 95       	ret

0000139c <_ZN12OrangutanLCD4sendEhhh>:
    139c:	a0 e0       	ldi	r26, 0x00	; 0
    139e:	b0 e0       	ldi	r27, 0x00	; 0
    13a0:	e4 ed       	ldi	r30, 0xD4	; 212
    13a2:	f9 e0       	ldi	r31, 0x09	; 9
    13a4:	0c 94 67 14 	jmp	0x28ce	; 0x28ce <__prologue_saves__+0x16>
    13a8:	c8 2f       	mov	r28, r24
    13aa:	d6 2e       	mov	r13, r22
    13ac:	e4 2e       	mov	r14, r20
    13ae:	80 91 c4 02 	lds	r24, 0x02C4
    13b2:	81 11       	cpse	r24, r1
    13b4:	05 c0       	rjmp	.+10     	; 0x13c0 <_ZN12OrangutanLCD4sendEhhh+0x24>
    13b6:	81 e0       	ldi	r24, 0x01	; 1
    13b8:	80 93 c4 02 	sts	0x02C4, r24
    13bc:	0e 94 14 0a 	call	0x1428	; 0x1428 <_ZN12OrangutanLCD5init2Ev>
    13c0:	0e 94 80 09 	call	0x1300	; 0x1300 <_ZN12OrangutanLCD8busyWaitEv>
    13c4:	14 b1       	in	r17, 0x04	; 4
    13c6:	d5 b1       	in	r29, 0x05	; 5
    13c8:	fa b0       	in	r15, 0x0a	; 10
    13ca:	0b b1       	in	r16, 0x0b	; 11
    13cc:	28 98       	cbi	0x05, 0	; 5
    13ce:	dd 20       	and	r13, r13
    13d0:	11 f0       	breq	.+4      	; 0x13d6 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    13d2:	5a 9a       	sbi	0x0b, 2	; 11
    13d4:	01 c0       	rjmp	.+2      	; 0x13d8 <_ZN12OrangutanLCD4sendEhhh+0x3c>
    13d6:	5a 98       	cbi	0x0b, 2	; 11
    13d8:	94 b1       	in	r25, 0x04	; 4
    13da:	92 63       	ori	r25, 0x32	; 50
    13dc:	94 b9       	out	0x04, r25	; 4
    13de:	57 9a       	sbi	0x0a, 7	; 10
    13e0:	81 e0       	ldi	r24, 0x01	; 1
    13e2:	e8 16       	cp	r14, r24
    13e4:	29 f0       	breq	.+10     	; 0x13f0 <_ZN12OrangutanLCD4sendEhhh+0x54>
    13e6:	8c 2f       	mov	r24, r28
    13e8:	82 95       	swap	r24
    13ea:	8f 70       	andi	r24, 0x0F	; 15
    13ec:	0e 94 b0 09 	call	0x1360	; 0x1360 <_ZN12OrangutanLCD8sendDataEh>
    13f0:	8c 2f       	mov	r24, r28
    13f2:	8f 70       	andi	r24, 0x0F	; 15
    13f4:	0e 94 b0 09 	call	0x1360	; 0x1360 <_ZN12OrangutanLCD8sendDataEh>
    13f8:	fa b8       	out	0x0a, r15	; 10
    13fa:	0b b9       	out	0x0b, r16	; 11
    13fc:	14 b9       	out	0x04, r17	; 4
    13fe:	d5 b9       	out	0x05, r29	; 5
    1400:	cd b7       	in	r28, 0x3d	; 61
    1402:	de b7       	in	r29, 0x3e	; 62
    1404:	e7 e0       	ldi	r30, 0x07	; 7
    1406:	0c 94 83 14 	jmp	0x2906	; 0x2906 <__epilogue_restores__+0x16>

0000140a <_ZN12OrangutanLCD8send_cmdEh>:
    140a:	42 e0       	ldi	r20, 0x02	; 2
    140c:	60 e0       	ldi	r22, 0x00	; 0
    140e:	0e 94 ce 09 	call	0x139c	; 0x139c <_ZN12OrangutanLCD4sendEhhh>
    1412:	08 95       	ret

00001414 <_ZN12OrangutanLCD9send_dataEh>:
    1414:	42 e0       	ldi	r20, 0x02	; 2
    1416:	61 e0       	ldi	r22, 0x01	; 1
    1418:	0e 94 ce 09 	call	0x139c	; 0x139c <_ZN12OrangutanLCD4sendEhhh>
    141c:	08 95       	ret

0000141e <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    141e:	41 e0       	ldi	r20, 0x01	; 1
    1420:	60 e0       	ldi	r22, 0x00	; 0
    1422:	0e 94 ce 09 	call	0x139c	; 0x139c <_ZN12OrangutanLCD4sendEhhh>
    1426:	08 95       	ret

00001428 <_ZN12OrangutanLCD5init2Ev>:
    1428:	80 e1       	ldi	r24, 0x10	; 16
    142a:	97 e2       	ldi	r25, 0x27	; 39
    142c:	a0 e0       	ldi	r26, 0x00	; 0
    142e:	b0 e0       	ldi	r27, 0x00	; 0
    1430:	80 93 37 02 	sts	0x0237, r24
    1434:	90 93 38 02 	sts	0x0238, r25
    1438:	a0 93 39 02 	sts	0x0239, r26
    143c:	b0 93 3a 02 	sts	0x023A, r27
    1440:	52 9a       	sbi	0x0a, 2	; 10
    1442:	20 9a       	sbi	0x04, 0	; 4
    1444:	54 9a       	sbi	0x0a, 4	; 10
    1446:	8e e1       	ldi	r24, 0x1E	; 30
    1448:	90 e0       	ldi	r25, 0x00	; 0
    144a:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
    144e:	83 e0       	ldi	r24, 0x03	; 3
    1450:	0e 94 0f 0a 	call	0x141e	; 0x141e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1454:	86 e0       	ldi	r24, 0x06	; 6
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
    145c:	83 e0       	ldi	r24, 0x03	; 3
    145e:	0e 94 0f 0a 	call	0x141e	; 0x141e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1462:	82 e0       	ldi	r24, 0x02	; 2
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
    146a:	83 e0       	ldi	r24, 0x03	; 3
    146c:	0e 94 0f 0a 	call	0x141e	; 0x141e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    1470:	82 e0       	ldi	r24, 0x02	; 2
    1472:	90 e0       	ldi	r25, 0x00	; 0
    1474:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
    1478:	82 e0       	ldi	r24, 0x02	; 2
    147a:	0e 94 0f 0a 	call	0x141e	; 0x141e <_ZN12OrangutanLCD13send_4bit_cmdEh>
    147e:	82 e0       	ldi	r24, 0x02	; 2
    1480:	90 e0       	ldi	r25, 0x00	; 0
    1482:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
    1486:	88 e2       	ldi	r24, 0x28	; 40
    1488:	0e 94 05 0a 	call	0x140a	; 0x140a <_ZN12OrangutanLCD8send_cmdEh>
    148c:	88 e0       	ldi	r24, 0x08	; 8
    148e:	0e 94 05 0a 	call	0x140a	; 0x140a <_ZN12OrangutanLCD8send_cmdEh>
    1492:	81 e0       	ldi	r24, 0x01	; 1
    1494:	0e 94 05 0a 	call	0x140a	; 0x140a <_ZN12OrangutanLCD8send_cmdEh>
    1498:	86 e0       	ldi	r24, 0x06	; 6
    149a:	0e 94 05 0a 	call	0x140a	; 0x140a <_ZN12OrangutanLCD8send_cmdEh>
    149e:	8c e0       	ldi	r24, 0x0C	; 12
    14a0:	0e 94 05 0a 	call	0x140a	; 0x140a <_ZN12OrangutanLCD8send_cmdEh>
    14a4:	08 95       	ret

000014a6 <_ZN12OrangutanLCD5clearEv>:
    14a6:	81 e0       	ldi	r24, 0x01	; 1
    14a8:	0e 94 05 0a 	call	0x140a	; 0x140a <_ZN12OrangutanLCD8send_cmdEh>
    14ac:	80 91 3d 02 	lds	r24, 0x023D
    14b0:	90 91 3e 02 	lds	r25, 0x023E
    14b4:	89 2b       	or	r24, r25
    14b6:	f9 f0       	breq	.+62     	; 0x14f6 <_ZN12OrangutanLCD5clearEv+0x50>
    14b8:	60 e0       	ldi	r22, 0x00	; 0
    14ba:	a0 e2       	ldi	r26, 0x20	; 32
    14bc:	26 2f       	mov	r18, r22
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	70 91 0a 01 	lds	r23, 0x010A
    14c4:	80 91 0b 01 	lds	r24, 0x010B
    14c8:	90 e0       	ldi	r25, 0x00	; 0
    14ca:	01 97       	sbiw	r24, 0x01	; 1
    14cc:	78 9f       	mul	r23, r24
    14ce:	a0 01       	movw	r20, r0
    14d0:	79 9f       	mul	r23, r25
    14d2:	50 0d       	add	r21, r0
    14d4:	11 24       	eor	r1, r1
    14d6:	24 17       	cp	r18, r20
    14d8:	35 07       	cpc	r19, r21
    14da:	4c f4       	brge	.+18     	; 0x14ee <_ZN12OrangutanLCD5clearEv+0x48>
    14dc:	e0 91 3d 02 	lds	r30, 0x023D
    14e0:	f0 91 3e 02 	lds	r31, 0x023E
    14e4:	e2 0f       	add	r30, r18
    14e6:	f3 1f       	adc	r31, r19
    14e8:	a0 83       	st	Z, r26
    14ea:	6f 5f       	subi	r22, 0xFF	; 255
    14ec:	e7 cf       	rjmp	.-50     	; 0x14bc <_ZN12OrangutanLCD5clearEv+0x16>
    14ee:	10 92 3b 02 	sts	0x023B, r1
    14f2:	10 92 3c 02 	sts	0x023C, r1
    14f6:	08 95       	ret

000014f8 <clear>:
    14f8:	0e 94 53 0a 	call	0x14a6	; 0x14a6 <_ZN12OrangutanLCD5clearEv>
    14fc:	08 95       	ret

000014fe <_ZN12OrangutanLCD5printEPKc>:
    14fe:	cf 93       	push	r28
    1500:	df 93       	push	r29
    1502:	ec 01       	movw	r28, r24
    1504:	89 91       	ld	r24, Y+
    1506:	88 23       	and	r24, r24
    1508:	19 f0       	breq	.+6      	; 0x1510 <_ZN12OrangutanLCD5printEPKc+0x12>
    150a:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD9send_dataEh>
    150e:	fa cf       	rjmp	.-12     	; 0x1504 <_ZN12OrangutanLCD5printEPKc+0x6>
    1510:	df 91       	pop	r29
    1512:	cf 91       	pop	r28
    1514:	08 95       	ret

00001516 <print>:
    1516:	0e 94 7f 0a 	call	0x14fe	; 0x14fe <_ZN12OrangutanLCD5printEPKc>
    151a:	08 95       	ret

0000151c <_ZN12OrangutanLCD6gotoXYEhh>:
    151c:	a5 e0       	ldi	r26, 0x05	; 5
    151e:	b0 e0       	ldi	r27, 0x00	; 0
    1520:	e4 e9       	ldi	r30, 0x94	; 148
    1522:	fa e0       	ldi	r31, 0x0A	; 10
    1524:	0c 94 6b 14 	jmp	0x28d6	; 0x28d6 <__prologue_saves__+0x1e>
    1528:	18 2f       	mov	r17, r24
    152a:	80 e8       	ldi	r24, 0x80	; 128
    152c:	89 83       	std	Y+1, r24	; 0x01
    152e:	80 ec       	ldi	r24, 0xC0	; 192
    1530:	8a 83       	std	Y+2, r24	; 0x02
    1532:	84 e9       	ldi	r24, 0x94	; 148
    1534:	8b 83       	std	Y+3, r24	; 0x03
    1536:	84 ed       	ldi	r24, 0xD4	; 212
    1538:	8c 83       	std	Y+4, r24	; 0x04
    153a:	fe 01       	movw	r30, r28
    153c:	e6 0f       	add	r30, r22
    153e:	f1 1d       	adc	r31, r1
    1540:	81 81       	ldd	r24, Z+1	; 0x01
    1542:	81 0f       	add	r24, r17
    1544:	6d 83       	std	Y+5, r22	; 0x05
    1546:	0e 94 05 0a 	call	0x140a	; 0x140a <_ZN12OrangutanLCD8send_cmdEh>
    154a:	10 93 3b 02 	sts	0x023B, r17
    154e:	6d 81       	ldd	r22, Y+5	; 0x05
    1550:	60 93 3c 02 	sts	0x023C, r22
    1554:	25 96       	adiw	r28, 0x05	; 5
    1556:	e3 e0       	ldi	r30, 0x03	; 3
    1558:	0c 94 87 14 	jmp	0x290e	; 0x290e <__epilogue_restores__+0x1e>

0000155c <lcd_putchar>:
    155c:	ff 92       	push	r15
    155e:	0f 93       	push	r16
    1560:	1f 93       	push	r17
    1562:	cf 93       	push	r28
    1564:	df 93       	push	r29
    1566:	c8 2f       	mov	r28, r24
    1568:	80 91 3d 02 	lds	r24, 0x023D
    156c:	90 91 3e 02 	lds	r25, 0x023E
    1570:	89 2b       	or	r24, r25
    1572:	49 f4       	brne	.+18     	; 0x1586 <lcd_putchar+0x2a>
    1574:	8c 2f       	mov	r24, r28
    1576:	99 27       	eor	r25, r25
    1578:	87 fd       	sbrc	r24, 7
    157a:	90 95       	com	r25
    157c:	cd b7       	in	r28, 0x3d	; 61
    157e:	de b7       	in	r29, 0x3e	; 62
    1580:	e5 e0       	ldi	r30, 0x05	; 5
    1582:	0c 94 85 14 	jmp	0x290a	; 0x290a <__epilogue_restores__+0x1a>
    1586:	ca 30       	cpi	r28, 0x0A	; 10
    1588:	09 f4       	brne	.+2      	; 0x158c <lcd_putchar+0x30>
    158a:	3e c0       	rjmp	.+124    	; 0x1608 <lcd_putchar+0xac>
    158c:	c8 30       	cpi	r28, 0x08	; 8
    158e:	c1 f4       	brne	.+48     	; 0x15c0 <lcd_putchar+0x64>
    1590:	80 91 3b 02 	lds	r24, 0x023B
    1594:	81 50       	subi	r24, 0x01	; 1
    1596:	80 93 3b 02 	sts	0x023B, r24
    159a:	8f 3f       	cpi	r24, 0xFF	; 255
    159c:	51 f4       	brne	.+20     	; 0x15b2 <lcd_putchar+0x56>
    159e:	80 91 3c 02 	lds	r24, 0x023C
    15a2:	81 50       	subi	r24, 0x01	; 1
    15a4:	80 93 3c 02 	sts	0x023C, r24
    15a8:	80 91 0a 01 	lds	r24, 0x010A
    15ac:	81 50       	subi	r24, 0x01	; 1
    15ae:	80 93 3b 02 	sts	0x023B, r24
    15b2:	80 91 3c 02 	lds	r24, 0x023C
    15b6:	8f 3f       	cpi	r24, 0xFF	; 255
    15b8:	c1 f5       	brne	.+112    	; 0x162a <lcd_putchar+0xce>
    15ba:	10 92 3c 02 	sts	0x023C, r1
    15be:	33 c0       	rjmp	.+102    	; 0x1626 <lcd_putchar+0xca>
    15c0:	8c 2f       	mov	r24, r28
    15c2:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD9send_dataEh>
    15c6:	80 91 3c 02 	lds	r24, 0x023C
    15ca:	88 23       	and	r24, r24
    15cc:	a1 f0       	breq	.+40     	; 0x15f6 <lcd_putchar+0x9a>
    15ce:	90 e0       	ldi	r25, 0x00	; 0
    15d0:	01 97       	sbiw	r24, 0x01	; 1
    15d2:	40 91 0a 01 	lds	r20, 0x010A
    15d6:	48 9f       	mul	r20, r24
    15d8:	90 01       	movw	r18, r0
    15da:	49 9f       	mul	r20, r25
    15dc:	30 0d       	add	r19, r0
    15de:	11 24       	eor	r1, r1
    15e0:	80 91 3b 02 	lds	r24, 0x023B
    15e4:	e0 91 3d 02 	lds	r30, 0x023D
    15e8:	f0 91 3e 02 	lds	r31, 0x023E
    15ec:	e2 0f       	add	r30, r18
    15ee:	f3 1f       	adc	r31, r19
    15f0:	e8 0f       	add	r30, r24
    15f2:	f1 1d       	adc	r31, r1
    15f4:	c0 83       	st	Z, r28
    15f6:	80 91 3b 02 	lds	r24, 0x023B
    15fa:	8f 5f       	subi	r24, 0xFF	; 255
    15fc:	80 93 3b 02 	sts	0x023B, r24
    1600:	90 91 0a 01 	lds	r25, 0x010A
    1604:	89 13       	cpse	r24, r25
    1606:	b6 cf       	rjmp	.-148    	; 0x1574 <lcd_putchar+0x18>
    1608:	40 91 3c 02 	lds	r20, 0x023C
    160c:	84 2f       	mov	r24, r20
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	20 91 0b 01 	lds	r18, 0x010B
    1614:	30 e0       	ldi	r19, 0x00	; 0
    1616:	21 50       	subi	r18, 0x01	; 1
    1618:	31 09       	sbc	r19, r1
    161a:	82 17       	cp	r24, r18
    161c:	93 07       	cpc	r25, r19
    161e:	61 f0       	breq	.+24     	; 0x1638 <lcd_putchar+0xdc>
    1620:	4f 5f       	subi	r20, 0xFF	; 255
    1622:	40 93 3c 02 	sts	0x023C, r20
    1626:	10 92 3b 02 	sts	0x023B, r1
    162a:	60 91 3c 02 	lds	r22, 0x023C
    162e:	80 91 3b 02 	lds	r24, 0x023B
    1632:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN12OrangutanLCD6gotoXYEhh>
    1636:	9e cf       	rjmp	.-196    	; 0x1574 <lcd_putchar+0x18>
    1638:	d0 e0       	ldi	r29, 0x00	; 0
    163a:	60 91 0b 01 	lds	r22, 0x010B
    163e:	86 2f       	mov	r24, r22
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	02 97       	sbiw	r24, 0x02	; 2
    1644:	2d 2f       	mov	r18, r29
    1646:	33 27       	eor	r19, r19
    1648:	27 fd       	sbrc	r18, 7
    164a:	30 95       	com	r19
    164c:	28 17       	cp	r18, r24
    164e:	39 07       	cpc	r19, r25
    1650:	8c f5       	brge	.+98     	; 0x16b4 <lcd_putchar+0x158>
    1652:	6d 2f       	mov	r22, r29
    1654:	80 e0       	ldi	r24, 0x00	; 0
    1656:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN12OrangutanLCD6gotoXYEhh>
    165a:	f1 2c       	mov	r15, r1
    165c:	20 91 0a 01 	lds	r18, 0x010A
    1660:	f2 16       	cp	r15, r18
    1662:	30 f5       	brcc	.+76     	; 0x16b0 <lcd_putchar+0x154>
    1664:	0f 2d       	mov	r16, r15
    1666:	10 e0       	ldi	r17, 0x00	; 0
    1668:	3d 2f       	mov	r19, r29
    166a:	32 03       	mulsu	r19, r18
    166c:	c0 01       	movw	r24, r0
    166e:	11 24       	eor	r1, r1
    1670:	e0 91 3d 02 	lds	r30, 0x023D
    1674:	f0 91 3e 02 	lds	r31, 0x023E
    1678:	e0 0f       	add	r30, r16
    167a:	f1 1f       	adc	r31, r17
    167c:	e8 0f       	add	r30, r24
    167e:	f9 1f       	adc	r31, r25
    1680:	80 81       	ld	r24, Z
    1682:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD9send_dataEh>
    1686:	e0 91 3d 02 	lds	r30, 0x023D
    168a:	f0 91 3e 02 	lds	r31, 0x023E
    168e:	20 91 0a 01 	lds	r18, 0x010A
    1692:	3d 2f       	mov	r19, r29
    1694:	32 03       	mulsu	r19, r18
    1696:	c0 01       	movw	r24, r0
    1698:	11 24       	eor	r1, r1
    169a:	e0 0f       	add	r30, r16
    169c:	f1 1f       	adc	r31, r17
    169e:	e8 0f       	add	r30, r24
    16a0:	f9 1f       	adc	r31, r25
    16a2:	df 01       	movw	r26, r30
    16a4:	a2 0f       	add	r26, r18
    16a6:	b1 1d       	adc	r27, r1
    16a8:	8c 91       	ld	r24, X
    16aa:	80 83       	st	Z, r24
    16ac:	f3 94       	inc	r15
    16ae:	d6 cf       	rjmp	.-84     	; 0x165c <lcd_putchar+0x100>
    16b0:	df 5f       	subi	r29, 0xFF	; 255
    16b2:	c3 cf       	rjmp	.-122    	; 0x163a <lcd_putchar+0xde>
    16b4:	62 30       	cpi	r22, 0x02	; 2
    16b6:	40 f4       	brcc	.+16     	; 0x16c8 <lcd_putchar+0x16c>
    16b8:	60 91 0b 01 	lds	r22, 0x010B
    16bc:	61 50       	subi	r22, 0x01	; 1
    16be:	80 e0       	ldi	r24, 0x00	; 0
    16c0:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN12OrangutanLCD6gotoXYEhh>
    16c4:	d0 e0       	ldi	r29, 0x00	; 0
    16c6:	39 c0       	rjmp	.+114    	; 0x173a <lcd_putchar+0x1de>
    16c8:	62 50       	subi	r22, 0x02	; 2
    16ca:	80 e0       	ldi	r24, 0x00	; 0
    16cc:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN12OrangutanLCD6gotoXYEhh>
    16d0:	d0 e0       	ldi	r29, 0x00	; 0
    16d2:	60 e2       	ldi	r22, 0x20	; 32
    16d4:	f6 2e       	mov	r15, r22
    16d6:	40 91 0a 01 	lds	r20, 0x010A
    16da:	d4 17       	cp	r29, r20
    16dc:	68 f7       	brcc	.-38     	; 0x16b8 <lcd_putchar+0x15c>
    16de:	0d 2f       	mov	r16, r29
    16e0:	10 e0       	ldi	r17, 0x00	; 0
    16e2:	20 91 0b 01 	lds	r18, 0x010B
    16e6:	30 e0       	ldi	r19, 0x00	; 0
    16e8:	22 50       	subi	r18, 0x02	; 2
    16ea:	31 09       	sbc	r19, r1
    16ec:	42 9f       	mul	r20, r18
    16ee:	c0 01       	movw	r24, r0
    16f0:	43 9f       	mul	r20, r19
    16f2:	90 0d       	add	r25, r0
    16f4:	11 24       	eor	r1, r1
    16f6:	e0 91 3d 02 	lds	r30, 0x023D
    16fa:	f0 91 3e 02 	lds	r31, 0x023E
    16fe:	e0 0f       	add	r30, r16
    1700:	f1 1f       	adc	r31, r17
    1702:	e8 0f       	add	r30, r24
    1704:	f9 1f       	adc	r31, r25
    1706:	80 81       	ld	r24, Z
    1708:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD9send_dataEh>
    170c:	20 91 0b 01 	lds	r18, 0x010B
    1710:	30 e0       	ldi	r19, 0x00	; 0
    1712:	22 50       	subi	r18, 0x02	; 2
    1714:	31 09       	sbc	r19, r1
    1716:	40 91 0a 01 	lds	r20, 0x010A
    171a:	42 9f       	mul	r20, r18
    171c:	c0 01       	movw	r24, r0
    171e:	43 9f       	mul	r20, r19
    1720:	90 0d       	add	r25, r0
    1722:	11 24       	eor	r1, r1
    1724:	e0 91 3d 02 	lds	r30, 0x023D
    1728:	f0 91 3e 02 	lds	r31, 0x023E
    172c:	e0 0f       	add	r30, r16
    172e:	f1 1f       	adc	r31, r17
    1730:	e8 0f       	add	r30, r24
    1732:	f9 1f       	adc	r31, r25
    1734:	f0 82       	st	Z, r15
    1736:	df 5f       	subi	r29, 0xFF	; 255
    1738:	ce cf       	rjmp	.-100    	; 0x16d6 <lcd_putchar+0x17a>
    173a:	80 91 0a 01 	lds	r24, 0x010A
    173e:	d8 17       	cp	r29, r24
    1740:	08 f0       	brcs	.+2      	; 0x1744 <lcd_putchar+0x1e8>
    1742:	71 cf       	rjmp	.-286    	; 0x1626 <lcd_putchar+0xca>
    1744:	80 e2       	ldi	r24, 0x20	; 32
    1746:	0e 94 0a 0a 	call	0x1414	; 0x1414 <_ZN12OrangutanLCD9send_dataEh>
    174a:	df 5f       	subi	r29, 0xFF	; 255
    174c:	f6 cf       	rjmp	.-20     	; 0x173a <lcd_putchar+0x1de>

0000174e <lcd_goto_xy>:
    174e:	0e 94 8e 0a 	call	0x151c	; 0x151c <_ZN12OrangutanLCD6gotoXYEhh>
    1752:	08 95       	ret

00001754 <_ZN12OrangutanLCD10initPrintfEv>:
    1754:	80 91 3d 02 	lds	r24, 0x023D
    1758:	90 91 3e 02 	lds	r25, 0x023E
    175c:	00 97       	sbiw	r24, 0x00	; 0
    175e:	11 f0       	breq	.+4      	; 0x1764 <_ZN12OrangutanLCD10initPrintfEv+0x10>
    1760:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <free>
    1764:	20 91 0a 01 	lds	r18, 0x010A
    1768:	80 91 0b 01 	lds	r24, 0x010B
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	01 97       	sbiw	r24, 0x01	; 1
    1770:	ac 01       	movw	r20, r24
    1772:	24 9f       	mul	r18, r20
    1774:	c0 01       	movw	r24, r0
    1776:	25 9f       	mul	r18, r21
    1778:	90 0d       	add	r25, r0
    177a:	11 24       	eor	r1, r1
    177c:	0e 94 99 14 	call	0x2932	; 0x2932 <malloc>
    1780:	90 93 3e 02 	sts	0x023E, r25
    1784:	80 93 3d 02 	sts	0x023D, r24
    1788:	89 2b       	or	r24, r25
    178a:	09 f1       	breq	.+66     	; 0x17ce <_ZN12OrangutanLCD10initPrintfEv+0x7a>
    178c:	60 e0       	ldi	r22, 0x00	; 0
    178e:	a0 e2       	ldi	r26, 0x20	; 32
    1790:	26 2f       	mov	r18, r22
    1792:	30 e0       	ldi	r19, 0x00	; 0
    1794:	70 91 0a 01 	lds	r23, 0x010A
    1798:	80 91 0b 01 	lds	r24, 0x010B
    179c:	90 e0       	ldi	r25, 0x00	; 0
    179e:	01 97       	sbiw	r24, 0x01	; 1
    17a0:	78 9f       	mul	r23, r24
    17a2:	a0 01       	movw	r20, r0
    17a4:	79 9f       	mul	r23, r25
    17a6:	50 0d       	add	r21, r0
    17a8:	11 24       	eor	r1, r1
    17aa:	24 17       	cp	r18, r20
    17ac:	35 07       	cpc	r19, r21
    17ae:	4c f4       	brge	.+18     	; 0x17c2 <_ZN12OrangutanLCD10initPrintfEv+0x6e>
    17b0:	e0 91 3d 02 	lds	r30, 0x023D
    17b4:	f0 91 3e 02 	lds	r31, 0x023E
    17b8:	e2 0f       	add	r30, r18
    17ba:	f3 1f       	adc	r31, r19
    17bc:	a0 83       	st	Z, r26
    17be:	6f 5f       	subi	r22, 0xFF	; 255
    17c0:	e7 cf       	rjmp	.-50     	; 0x1790 <_ZN12OrangutanLCD10initPrintfEv+0x3c>
    17c2:	63 e7       	ldi	r22, 0x73	; 115
    17c4:	79 e0       	ldi	r23, 0x09	; 9
    17c6:	8e ea       	ldi	r24, 0xAE	; 174
    17c8:	9a e0       	ldi	r25, 0x0A	; 10
    17ca:	0e 94 c6 15 	call	0x2b8c	; 0x2b8c <fdevopen>
    17ce:	08 95       	ret

000017d0 <lcd_init_printf_with_dimensions>:
    17d0:	80 93 0a 01 	sts	0x010A, r24
    17d4:	60 93 0b 01 	sts	0x010B, r22
    17d8:	0e 94 aa 0b 	call	0x1754	; 0x1754 <_ZN12OrangutanLCD10initPrintfEv>
    17dc:	08 95       	ret

000017de <_ZN16OrangutanDigital9setOutputEhh>:
    17de:	88 30       	cpi	r24, 0x08	; 8
    17e0:	58 f4       	brcc	.+22     	; 0x17f8 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    17e2:	91 e0       	ldi	r25, 0x01	; 1
    17e4:	01 c0       	rjmp	.+2      	; 0x17e8 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    17e6:	99 0f       	add	r25, r25
    17e8:	8a 95       	dec	r24
    17ea:	ea f7       	brpl	.-6      	; 0x17e6 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    17ec:	89 2f       	mov	r24, r25
    17ee:	aa e2       	ldi	r26, 0x2A	; 42
    17f0:	b0 e0       	ldi	r27, 0x00	; 0
    17f2:	eb e2       	ldi	r30, 0x2B	; 43
    17f4:	f0 e0       	ldi	r31, 0x00	; 0
    17f6:	21 c0       	rjmp	.+66     	; 0x183a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    17f8:	8e 30       	cpi	r24, 0x0E	; 14
    17fa:	60 f4       	brcc	.+24     	; 0x1814 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    17fc:	98 ef       	ldi	r25, 0xF8	; 248
    17fe:	98 0f       	add	r25, r24
    1800:	81 e0       	ldi	r24, 0x01	; 1
    1802:	01 c0       	rjmp	.+2      	; 0x1806 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    1804:	88 0f       	add	r24, r24
    1806:	9a 95       	dec	r25
    1808:	ea f7       	brpl	.-6      	; 0x1804 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    180a:	a4 e2       	ldi	r26, 0x24	; 36
    180c:	b0 e0       	ldi	r27, 0x00	; 0
    180e:	e5 e2       	ldi	r30, 0x25	; 37
    1810:	f0 e0       	ldi	r31, 0x00	; 0
    1812:	13 c0       	rjmp	.+38     	; 0x183a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1814:	85 31       	cpi	r24, 0x15	; 21
    1816:	60 f4       	brcc	.+24     	; 0x1830 <_ZN16OrangutanDigital9setOutputEhh+0x52>
    1818:	92 ef       	ldi	r25, 0xF2	; 242
    181a:	98 0f       	add	r25, r24
    181c:	81 e0       	ldi	r24, 0x01	; 1
    181e:	01 c0       	rjmp	.+2      	; 0x1822 <_ZN16OrangutanDigital9setOutputEhh+0x44>
    1820:	88 0f       	add	r24, r24
    1822:	9a 95       	dec	r25
    1824:	ea f7       	brpl	.-6      	; 0x1820 <_ZN16OrangutanDigital9setOutputEhh+0x42>
    1826:	a7 e2       	ldi	r26, 0x27	; 39
    1828:	b0 e0       	ldi	r27, 0x00	; 0
    182a:	e8 e2       	ldi	r30, 0x28	; 40
    182c:	f0 e0       	ldi	r31, 0x00	; 0
    182e:	05 c0       	rjmp	.+10     	; 0x183a <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1830:	80 e0       	ldi	r24, 0x00	; 0
    1832:	a0 e0       	ldi	r26, 0x00	; 0
    1834:	b0 e0       	ldi	r27, 0x00	; 0
    1836:	e0 e0       	ldi	r30, 0x00	; 0
    1838:	f0 e0       	ldi	r31, 0x00	; 0
    183a:	6f 3f       	cpi	r22, 0xFF	; 255
    183c:	19 f4       	brne	.+6      	; 0x1844 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    183e:	90 81       	ld	r25, Z
    1840:	98 27       	eor	r25, r24
    1842:	09 c0       	rjmp	.+18     	; 0x1856 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1844:	66 23       	and	r22, r22
    1846:	19 f0       	breq	.+6      	; 0x184e <_ZN16OrangutanDigital9setOutputEhh+0x70>
    1848:	90 81       	ld	r25, Z
    184a:	98 2b       	or	r25, r24
    184c:	04 c0       	rjmp	.+8      	; 0x1856 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    184e:	20 81       	ld	r18, Z
    1850:	98 2f       	mov	r25, r24
    1852:	90 95       	com	r25
    1854:	92 23       	and	r25, r18
    1856:	90 83       	st	Z, r25
    1858:	9c 91       	ld	r25, X
    185a:	98 2b       	or	r25, r24
    185c:	9c 93       	st	X, r25
    185e:	08 95       	ret

00001860 <_ZN15OrangutanMotors5init2Ev>:
    1860:	83 ef       	ldi	r24, 0xF3	; 243
    1862:	80 93 b0 00 	sts	0x00B0, r24
    1866:	84 bd       	out	0x24, r24	; 36
    1868:	82 e0       	ldi	r24, 0x02	; 2
    186a:	80 93 b1 00 	sts	0x00B1, r24
    186e:	85 bd       	out	0x25, r24	; 37
    1870:	10 92 b4 00 	sts	0x00B4, r1
    1874:	10 92 b3 00 	sts	0x00B3, r1
    1878:	18 bc       	out	0x28, r1	; 40
    187a:	17 bc       	out	0x27, r1	; 39
    187c:	60 e0       	ldi	r22, 0x00	; 0
    187e:	86 e0       	ldi	r24, 0x06	; 6
    1880:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN16OrangutanDigital9setOutputEhh>
    1884:	60 e0       	ldi	r22, 0x00	; 0
    1886:	85 e0       	ldi	r24, 0x05	; 5
    1888:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN16OrangutanDigital9setOutputEhh>
    188c:	60 e0       	ldi	r22, 0x00	; 0
    188e:	8b e0       	ldi	r24, 0x0B	; 11
    1890:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN16OrangutanDigital9setOutputEhh>
    1894:	60 e0       	ldi	r22, 0x00	; 0
    1896:	83 e0       	ldi	r24, 0x03	; 3
    1898:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN16OrangutanDigital9setOutputEhh>
    189c:	08 95       	ret

0000189e <_ZN15OrangutanMotors4initEv>:
    189e:	80 91 c5 02 	lds	r24, 0x02C5
    18a2:	81 11       	cpse	r24, r1
    18a4:	05 c0       	rjmp	.+10     	; 0x18b0 <_ZN15OrangutanMotors4initEv+0x12>
    18a6:	81 e0       	ldi	r24, 0x01	; 1
    18a8:	80 93 c5 02 	sts	0x02C5, r24
    18ac:	0e 94 30 0c 	call	0x1860	; 0x1860 <_ZN15OrangutanMotors5init2Ev>
    18b0:	08 95       	ret

000018b2 <_ZN15OrangutanMotors10setM1SpeedEi>:
    18b2:	cf 93       	push	r28
    18b4:	df 93       	push	r29
    18b6:	ec 01       	movw	r28, r24
    18b8:	0e 94 4f 0c 	call	0x189e	; 0x189e <_ZN15OrangutanMotors4initEv>
    18bc:	d7 ff       	sbrs	r29, 7
    18be:	05 c0       	rjmp	.+10     	; 0x18ca <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    18c0:	d1 95       	neg	r29
    18c2:	c1 95       	neg	r28
    18c4:	d1 09       	sbc	r29, r1
    18c6:	81 e0       	ldi	r24, 0x01	; 1
    18c8:	01 c0       	rjmp	.+2      	; 0x18cc <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    18ca:	80 e0       	ldi	r24, 0x00	; 0
    18cc:	cf 3f       	cpi	r28, 0xFF	; 255
    18ce:	d1 05       	cpc	r29, r1
    18d0:	19 f0       	breq	.+6      	; 0x18d8 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    18d2:	14 f0       	brlt	.+4      	; 0x18d8 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    18d4:	cf ef       	ldi	r28, 0xFF	; 255
    18d6:	d0 e0       	ldi	r29, 0x00	; 0
    18d8:	88 23       	and	r24, r24
    18da:	19 f0       	breq	.+6      	; 0x18e2 <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    18dc:	18 bc       	out	0x28, r1	; 40
    18de:	c7 bd       	out	0x27, r28	; 39
    18e0:	02 c0       	rjmp	.+4      	; 0x18e6 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    18e2:	c8 bd       	out	0x28, r28	; 40
    18e4:	17 bc       	out	0x27, r1	; 39
    18e6:	df 91       	pop	r29
    18e8:	cf 91       	pop	r28
    18ea:	08 95       	ret

000018ec <set_m1_speed>:
    18ec:	0e 94 59 0c 	call	0x18b2	; 0x18b2 <_ZN15OrangutanMotors10setM1SpeedEi>
    18f0:	08 95       	ret

000018f2 <_ZN15OrangutanMotors10setM2SpeedEi>:
    18f2:	cf 93       	push	r28
    18f4:	df 93       	push	r29
    18f6:	ec 01       	movw	r28, r24
    18f8:	0e 94 4f 0c 	call	0x189e	; 0x189e <_ZN15OrangutanMotors4initEv>
    18fc:	d7 ff       	sbrs	r29, 7
    18fe:	05 c0       	rjmp	.+10     	; 0x190a <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    1900:	d1 95       	neg	r29
    1902:	c1 95       	neg	r28
    1904:	d1 09       	sbc	r29, r1
    1906:	81 e0       	ldi	r24, 0x01	; 1
    1908:	01 c0       	rjmp	.+2      	; 0x190c <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    190a:	80 e0       	ldi	r24, 0x00	; 0
    190c:	cf 3f       	cpi	r28, 0xFF	; 255
    190e:	d1 05       	cpc	r29, r1
    1910:	19 f0       	breq	.+6      	; 0x1918 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1912:	14 f0       	brlt	.+4      	; 0x1918 <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1914:	cf ef       	ldi	r28, 0xFF	; 255
    1916:	d0 e0       	ldi	r29, 0x00	; 0
    1918:	88 23       	and	r24, r24
    191a:	29 f0       	breq	.+10     	; 0x1926 <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    191c:	10 92 b4 00 	sts	0x00B4, r1
    1920:	c0 93 b3 00 	sts	0x00B3, r28
    1924:	04 c0       	rjmp	.+8      	; 0x192e <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    1926:	c0 93 b4 00 	sts	0x00B4, r28
    192a:	10 92 b3 00 	sts	0x00B3, r1
    192e:	df 91       	pop	r29
    1930:	cf 91       	pop	r28
    1932:	08 95       	ret

00001934 <set_m2_speed>:
    1934:	0e 94 79 0c 	call	0x18f2	; 0x18f2 <_ZN15OrangutanMotors10setM2SpeedEi>
    1938:	08 95       	ret

0000193a <_ZN20OrangutanPushbuttons5init2Ev>:
    193a:	84 b1       	in	r24, 0x04	; 4
    193c:	8d 7c       	andi	r24, 0xCD	; 205
    193e:	84 b9       	out	0x04, r24	; 4
    1940:	85 b1       	in	r24, 0x05	; 5
    1942:	82 63       	ori	r24, 0x32	; 50
    1944:	85 b9       	out	0x05, r24	; 5
    1946:	85 e0       	ldi	r24, 0x05	; 5
    1948:	90 e0       	ldi	r25, 0x00	; 0
    194a:	6f 93       	push	r22
    194c:	64 e0       	ldi	r22, 0x04	; 4
    194e:	6a 95       	dec	r22
    1950:	f1 f7       	brne	.-4      	; 0x194e <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    1952:	6f 91       	pop	r22
    1954:	01 97       	sbiw	r24, 0x01	; 1
    1956:	c9 f7       	brne	.-14     	; 0x194a <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    1958:	08 95       	ret

0000195a <_ZN20OrangutanPushbuttons4initEv>:
    195a:	80 91 c6 02 	lds	r24, 0x02C6
    195e:	81 11       	cpse	r24, r1
    1960:	05 c0       	rjmp	.+10     	; 0x196c <_ZN20OrangutanPushbuttons4initEv+0x12>
    1962:	81 e0       	ldi	r24, 0x01	; 1
    1964:	80 93 c6 02 	sts	0x02C6, r24
    1968:	0e 94 9d 0c 	call	0x193a	; 0x193a <_ZN20OrangutanPushbuttons5init2Ev>
    196c:	08 95       	ret

0000196e <_ZN20OrangutanPushbuttons12waitForPressEh>:
    196e:	1f 93       	push	r17
    1970:	cf 93       	push	r28
    1972:	df 93       	push	r29
    1974:	18 2f       	mov	r17, r24
    1976:	0e 94 ad 0c 	call	0x195a	; 0x195a <_ZN20OrangutanPushbuttons4initEv>
    197a:	c1 2f       	mov	r28, r17
    197c:	d0 e0       	ldi	r29, 0x00	; 0
    197e:	23 b1       	in	r18, 0x03	; 3
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	20 95       	com	r18
    1984:	30 95       	com	r19
    1986:	2c 23       	and	r18, r28
    1988:	3d 23       	and	r19, r29
    198a:	23 2b       	or	r18, r19
    198c:	c1 f3       	breq	.-16     	; 0x197e <_ZN20OrangutanPushbuttons12waitForPressEh+0x10>
    198e:	8a e0       	ldi	r24, 0x0A	; 10
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
    1996:	23 b1       	in	r18, 0x03	; 3
    1998:	30 e0       	ldi	r19, 0x00	; 0
    199a:	20 95       	com	r18
    199c:	30 95       	com	r19
    199e:	2c 23       	and	r18, r28
    19a0:	3d 23       	and	r19, r29
    19a2:	23 2b       	or	r18, r19
    19a4:	61 f3       	breq	.-40     	; 0x197e <_ZN20OrangutanPushbuttons12waitForPressEh+0x10>
    19a6:	83 b1       	in	r24, 0x03	; 3
    19a8:	80 95       	com	r24
    19aa:	81 23       	and	r24, r17
    19ac:	df 91       	pop	r29
    19ae:	cf 91       	pop	r28
    19b0:	1f 91       	pop	r17
    19b2:	08 95       	ret

000019b4 <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    19b4:	cf 93       	push	r28
    19b6:	c8 2f       	mov	r28, r24
    19b8:	0e 94 ad 0c 	call	0x195a	; 0x195a <_ZN20OrangutanPushbuttons4initEv>
    19bc:	83 b1       	in	r24, 0x03	; 3
    19be:	8c 23       	and	r24, r28
    19c0:	e9 f3       	breq	.-6      	; 0x19bc <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    19c2:	8a e0       	ldi	r24, 0x0A	; 10
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	0e 94 3d 0e 	call	0x1c7a	; 0x1c7a <delay_ms>
    19ca:	83 b1       	in	r24, 0x03	; 3
    19cc:	8c 23       	and	r24, r28
    19ce:	b1 f3       	breq	.-20     	; 0x19bc <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    19d0:	83 b1       	in	r24, 0x03	; 3
    19d2:	8c 23       	and	r24, r28
    19d4:	cf 91       	pop	r28
    19d6:	08 95       	ret

000019d8 <_ZN20OrangutanPushbuttons13waitForButtonEh>:
    19d8:	cf 93       	push	r28
    19da:	0e 94 b7 0c 	call	0x196e	; 0x196e <_ZN20OrangutanPushbuttons12waitForPressEh>
    19de:	c8 2f       	mov	r28, r24
    19e0:	0e 94 da 0c 	call	0x19b4	; 0x19b4 <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    19e4:	8c 2f       	mov	r24, r28
    19e6:	cf 91       	pop	r28
    19e8:	08 95       	ret

000019ea <wait_for_button>:
    19ea:	0e 94 ec 0c 	call	0x19d8	; 0x19d8 <_ZN20OrangutanPushbuttons13waitForButtonEh>
    19ee:	08 95       	ret

000019f0 <_ZN20OrangutanPushbuttons9isPressedEh>:
    19f0:	a1 e0       	ldi	r26, 0x01	; 1
    19f2:	b0 e0       	ldi	r27, 0x00	; 0
    19f4:	ee ef       	ldi	r30, 0xFE	; 254
    19f6:	fc e0       	ldi	r31, 0x0C	; 12
    19f8:	0c 94 6c 14 	jmp	0x28d8	; 0x28d8 <__prologue_saves__+0x20>
    19fc:	89 83       	std	Y+1, r24	; 0x01
    19fe:	0e 94 ad 0c 	call	0x195a	; 0x195a <_ZN20OrangutanPushbuttons4initEv>
    1a02:	93 b1       	in	r25, 0x03	; 3
    1a04:	90 95       	com	r25
    1a06:	89 81       	ldd	r24, Y+1	; 0x01
    1a08:	89 23       	and	r24, r25
    1a0a:	21 96       	adiw	r28, 0x01	; 1
    1a0c:	e2 e0       	ldi	r30, 0x02	; 2
    1a0e:	0c 94 88 14 	jmp	0x2910	; 0x2910 <__epilogue_restores__+0x20>

00001a12 <button_is_pressed>:
    1a12:	0e 94 f8 0c 	call	0x19f0	; 0x19f0 <_ZN20OrangutanPushbuttons9isPressedEh>
    1a16:	08 95       	ret

00001a18 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>:
    1a18:	28 2f       	mov	r18, r24
    1a1a:	30 e0       	ldi	r19, 0x00	; 0
    1a1c:	9a e0       	ldi	r25, 0x0A	; 10
    1a1e:	89 9f       	mul	r24, r25
    1a20:	f0 01       	movw	r30, r0
    1a22:	11 24       	eor	r1, r1
    1a24:	e1 5c       	subi	r30, 0xC1	; 193
    1a26:	fd 4f       	sbci	r31, 0xFD	; 253
    1a28:	80 85       	ldd	r24, Z+8	; 0x08
    1a2a:	91 85       	ldd	r25, Z+9	; 0x09
    1a2c:	00 97       	sbiw	r24, 0x00	; 0
    1a2e:	21 f0       	breq	.+8      	; 0x1a38 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    1a30:	52 81       	ldd	r21, Z+2	; 0x02
    1a32:	44 81       	ldd	r20, Z+4	; 0x04
    1a34:	54 17       	cp	r21, r20
    1a36:	80 f0       	brcs	.+32     	; 0x1a58 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x40>
    1a38:	8a e0       	ldi	r24, 0x0A	; 10
    1a3a:	82 9f       	mul	r24, r18
    1a3c:	f0 01       	movw	r30, r0
    1a3e:	83 9f       	mul	r24, r19
    1a40:	f0 0d       	add	r31, r0
    1a42:	11 24       	eor	r1, r1
    1a44:	e1 5c       	subi	r30, 0xC1	; 193
    1a46:	fd 4f       	sbci	r31, 0xFD	; 253
    1a48:	92 81       	ldd	r25, Z+2	; 0x02
    1a4a:	84 81       	ldd	r24, Z+4	; 0x04
    1a4c:	98 13       	cpse	r25, r24
    1a4e:	0e c0       	rjmp	.+28     	; 0x1a6c <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x54>
    1a50:	85 81       	ldd	r24, Z+5	; 0x05
    1a52:	81 11       	cpse	r24, r1
    1a54:	0a c0       	rjmp	.+20     	; 0x1a6a <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x52>
    1a56:	08 95       	ret
    1a58:	42 81       	ldd	r20, Z+2	; 0x02
    1a5a:	dc 01       	movw	r26, r24
    1a5c:	a4 0f       	add	r26, r20
    1a5e:	b1 1d       	adc	r27, r1
    1a60:	6c 93       	st	X, r22
    1a62:	82 81       	ldd	r24, Z+2	; 0x02
    1a64:	8f 5f       	subi	r24, 0xFF	; 255
    1a66:	82 83       	std	Z+2, r24	; 0x02
    1a68:	e7 cf       	rjmp	.-50     	; 0x1a38 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh+0x20>
    1a6a:	12 82       	std	Z+2, r1	; 0x02
    1a6c:	08 95       	ret

00001a6e <__vector_18>:
    1a6e:	1f 92       	push	r1
    1a70:	0f 92       	push	r0
    1a72:	0f b6       	in	r0, 0x3f	; 63
    1a74:	0f 92       	push	r0
    1a76:	11 24       	eor	r1, r1
    1a78:	2f 93       	push	r18
    1a7a:	3f 93       	push	r19
    1a7c:	4f 93       	push	r20
    1a7e:	5f 93       	push	r21
    1a80:	6f 93       	push	r22
    1a82:	7f 93       	push	r23
    1a84:	8f 93       	push	r24
    1a86:	9f 93       	push	r25
    1a88:	af 93       	push	r26
    1a8a:	bf 93       	push	r27
    1a8c:	ef 93       	push	r30
    1a8e:	ff 93       	push	r31
    1a90:	60 91 c6 00 	lds	r22, 0x00C6
    1a94:	80 e0       	ldi	r24, 0x00	; 0
    1a96:	0e 94 0c 0d 	call	0x1a18	; 0x1a18 <_ZN15OrangutanSerial21serial_rx_handle_byteEhh>
    1a9a:	ff 91       	pop	r31
    1a9c:	ef 91       	pop	r30
    1a9e:	bf 91       	pop	r27
    1aa0:	af 91       	pop	r26
    1aa2:	9f 91       	pop	r25
    1aa4:	8f 91       	pop	r24
    1aa6:	7f 91       	pop	r23
    1aa8:	6f 91       	pop	r22
    1aaa:	5f 91       	pop	r21
    1aac:	4f 91       	pop	r20
    1aae:	3f 91       	pop	r19
    1ab0:	2f 91       	pop	r18
    1ab2:	0f 90       	pop	r0
    1ab4:	0f be       	out	0x3f, r0	; 63
    1ab6:	0f 90       	pop	r0
    1ab8:	1f 90       	pop	r1
    1aba:	18 95       	reti

00001abc <_ZN15OrangutanSerial24uart_update_tx_interruptEh>:
    1abc:	9a e0       	ldi	r25, 0x0A	; 10
    1abe:	89 9f       	mul	r24, r25
    1ac0:	f0 01       	movw	r30, r0
    1ac2:	11 24       	eor	r1, r1
    1ac4:	e1 5c       	subi	r30, 0xC1	; 193
    1ac6:	fd 4f       	sbci	r31, 0xFD	; 253
    1ac8:	86 81       	ldd	r24, Z+6	; 0x06
    1aca:	97 81       	ldd	r25, Z+7	; 0x07
    1acc:	89 2b       	or	r24, r25
    1ace:	59 f0       	breq	.+22     	; 0x1ae6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    1ad0:	91 81       	ldd	r25, Z+1	; 0x01
    1ad2:	83 81       	ldd	r24, Z+3	; 0x03
    1ad4:	98 17       	cp	r25, r24
    1ad6:	38 f4       	brcc	.+14     	; 0x1ae6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    1ad8:	80 81       	ld	r24, Z
    1ada:	81 11       	cpse	r24, r1
    1adc:	04 c0       	rjmp	.+8      	; 0x1ae6 <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x2a>
    1ade:	80 91 c1 00 	lds	r24, 0x00C1
    1ae2:	80 62       	ori	r24, 0x20	; 32
    1ae4:	03 c0       	rjmp	.+6      	; 0x1aec <_ZN15OrangutanSerial24uart_update_tx_interruptEh+0x30>
    1ae6:	80 91 c1 00 	lds	r24, 0x00C1
    1aea:	8f 7d       	andi	r24, 0xDF	; 223
    1aec:	80 93 c1 00 	sts	0x00C1, r24
    1af0:	08 95       	ret

00001af2 <_ZN15OrangutanSerial15initUART_inlineEh>:
    1af2:	9a e0       	ldi	r25, 0x0A	; 10
    1af4:	89 9f       	mul	r24, r25
    1af6:	f0 01       	movw	r30, r0
    1af8:	11 24       	eor	r1, r1
    1afa:	e1 5c       	subi	r30, 0xC1	; 193
    1afc:	fd 4f       	sbci	r31, 0xFD	; 253
    1afe:	90 81       	ld	r25, Z
    1b00:	91 11       	cpse	r25, r1
    1b02:	02 c0       	rjmp	.+4      	; 0x1b08 <_ZN15OrangutanSerial15initUART_inlineEh+0x16>
    1b04:	98 e9       	ldi	r25, 0x98	; 152
    1b06:	01 c0       	rjmp	.+2      	; 0x1b0a <_ZN15OrangutanSerial15initUART_inlineEh+0x18>
    1b08:	98 e1       	ldi	r25, 0x18	; 24
    1b0a:	90 93 c1 00 	sts	0x00C1, r25
    1b0e:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    1b12:	78 94       	sei
    1b14:	08 95       	ret

00001b16 <serial_set_baud_rate>:
    1b16:	cf 92       	push	r12
    1b18:	df 92       	push	r13
    1b1a:	ef 92       	push	r14
    1b1c:	ff 92       	push	r15
    1b1e:	6b 01       	movw	r12, r22
    1b20:	7c 01       	movw	r14, r24
    1b22:	80 e0       	ldi	r24, 0x00	; 0
    1b24:	0e 94 79 0d 	call	0x1af2	; 0x1af2 <_ZN15OrangutanSerial15initUART_inlineEh>
    1b28:	a8 ef       	ldi	r26, 0xF8	; 248
    1b2a:	bf ef       	ldi	r27, 0xFF	; 255
    1b2c:	a7 01       	movw	r20, r14
    1b2e:	96 01       	movw	r18, r12
    1b30:	0e 94 57 14 	call	0x28ae	; 0x28ae <__mulohisi3>
    1b34:	73 5d       	subi	r23, 0xD3	; 211
    1b36:	8e 4c       	sbci	r24, 0xCE	; 206
    1b38:	9e 4f       	sbci	r25, 0xFE	; 254
    1b3a:	e4 e0       	ldi	r30, 0x04	; 4
    1b3c:	22 0f       	add	r18, r18
    1b3e:	33 1f       	adc	r19, r19
    1b40:	44 1f       	adc	r20, r20
    1b42:	55 1f       	adc	r21, r21
    1b44:	ea 95       	dec	r30
    1b46:	d1 f7       	brne	.-12     	; 0x1b3c <serial_set_baud_rate+0x26>
    1b48:	0e 94 f9 13 	call	0x27f2	; 0x27f2 <__udivmodsi4>
    1b4c:	30 93 c5 00 	sts	0x00C5, r19
    1b50:	20 93 c4 00 	sts	0x00C4, r18
    1b54:	ff 90       	pop	r15
    1b56:	ef 90       	pop	r14
    1b58:	df 90       	pop	r13
    1b5a:	cf 90       	pop	r12
    1b5c:	08 95       	ret

00001b5e <_ZN15OrangutanSerial11uart_tx_isrEh>:
    1b5e:	9a e0       	ldi	r25, 0x0A	; 10
    1b60:	89 9f       	mul	r24, r25
    1b62:	f0 01       	movw	r30, r0
    1b64:	11 24       	eor	r1, r1
    1b66:	e1 5c       	subi	r30, 0xC1	; 193
    1b68:	fd 4f       	sbci	r31, 0xFD	; 253
    1b6a:	26 81       	ldd	r18, Z+6	; 0x06
    1b6c:	37 81       	ldd	r19, Z+7	; 0x07
    1b6e:	21 15       	cp	r18, r1
    1b70:	31 05       	cpc	r19, r1
    1b72:	41 f0       	breq	.+16     	; 0x1b84 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    1b74:	41 81       	ldd	r20, Z+1	; 0x01
    1b76:	93 81       	ldd	r25, Z+3	; 0x03
    1b78:	49 17       	cp	r20, r25
    1b7a:	20 f4       	brcc	.+8      	; 0x1b84 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>
    1b7c:	90 91 c0 00 	lds	r25, 0x00C0
    1b80:	95 fd       	sbrc	r25, 5
    1b82:	03 c0       	rjmp	.+6      	; 0x1b8a <_ZN15OrangutanSerial11uart_tx_isrEh+0x2c>
    1b84:	0e 94 5e 0d 	call	0x1abc	; 0x1abc <_ZN15OrangutanSerial24uart_update_tx_interruptEh>
    1b88:	08 95       	ret
    1b8a:	91 81       	ldd	r25, Z+1	; 0x01
    1b8c:	d9 01       	movw	r26, r18
    1b8e:	a9 0f       	add	r26, r25
    1b90:	b1 1d       	adc	r27, r1
    1b92:	9c 91       	ld	r25, X
    1b94:	90 93 c6 00 	sts	0x00C6, r25
    1b98:	91 81       	ldd	r25, Z+1	; 0x01
    1b9a:	9f 5f       	subi	r25, 0xFF	; 255
    1b9c:	91 83       	std	Z+1, r25	; 0x01
    1b9e:	f2 cf       	rjmp	.-28     	; 0x1b84 <_ZN15OrangutanSerial11uart_tx_isrEh+0x26>

00001ba0 <__vector_19>:
    1ba0:	1f 92       	push	r1
    1ba2:	0f 92       	push	r0
    1ba4:	0f b6       	in	r0, 0x3f	; 63
    1ba6:	0f 92       	push	r0
    1ba8:	11 24       	eor	r1, r1
    1baa:	2f 93       	push	r18
    1bac:	3f 93       	push	r19
    1bae:	4f 93       	push	r20
    1bb0:	5f 93       	push	r21
    1bb2:	6f 93       	push	r22
    1bb4:	7f 93       	push	r23
    1bb6:	8f 93       	push	r24
    1bb8:	9f 93       	push	r25
    1bba:	af 93       	push	r26
    1bbc:	bf 93       	push	r27
    1bbe:	ef 93       	push	r30
    1bc0:	ff 93       	push	r31
    1bc2:	80 e0       	ldi	r24, 0x00	; 0
    1bc4:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <_ZN15OrangutanSerial11uart_tx_isrEh>
    1bc8:	ff 91       	pop	r31
    1bca:	ef 91       	pop	r30
    1bcc:	bf 91       	pop	r27
    1bce:	af 91       	pop	r26
    1bd0:	9f 91       	pop	r25
    1bd2:	8f 91       	pop	r24
    1bd4:	7f 91       	pop	r23
    1bd6:	6f 91       	pop	r22
    1bd8:	5f 91       	pop	r21
    1bda:	4f 91       	pop	r20
    1bdc:	3f 91       	pop	r19
    1bde:	2f 91       	pop	r18
    1be0:	0f 90       	pop	r0
    1be2:	0f be       	out	0x3f, r0	; 63
    1be4:	0f 90       	pop	r0
    1be6:	1f 90       	pop	r1
    1be8:	18 95       	reti

00001bea <__vector_9>:
    1bea:	2f 92       	push	r2
    1bec:	8f 93       	push	r24
    1bee:	9f 93       	push	r25
    1bf0:	2f b6       	in	r2, 0x3f	; 63
    1bf2:	80 91 50 02 	lds	r24, 0x0250
    1bf6:	90 91 51 02 	lds	r25, 0x0251
    1bfa:	01 96       	adiw	r24, 0x01	; 1
    1bfc:	80 93 50 02 	sts	0x0250, r24
    1c00:	90 93 51 02 	sts	0x0251, r25
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	80 91 52 02 	lds	r24, 0x0252
    1c0a:	89 1f       	adc	r24, r25
    1c0c:	80 93 52 02 	sts	0x0252, r24
    1c10:	90 91 4a 02 	lds	r25, 0x024A
    1c14:	9c 5f       	subi	r25, 0xFC	; 252
    1c16:	90 93 4a 02 	sts	0x024A, r25
    1c1a:	80 91 49 02 	lds	r24, 0x0249
    1c1e:	80 51       	subi	r24, 0x10	; 16
    1c20:	97 42       	sbci	r25, 0x27	; 39
    1c22:	c0 f0       	brcs	.+48     	; 0x1c54 <end>
    1c24:	90 93 4a 02 	sts	0x024A, r25
    1c28:	80 93 49 02 	sts	0x0249, r24
    1c2c:	80 91 4b 02 	lds	r24, 0x024B
    1c30:	90 91 4c 02 	lds	r25, 0x024C
    1c34:	01 96       	adiw	r24, 0x01	; 1
    1c36:	80 93 4b 02 	sts	0x024B, r24
    1c3a:	90 93 4c 02 	sts	0x024C, r25
    1c3e:	90 e0       	ldi	r25, 0x00	; 0
    1c40:	80 91 4d 02 	lds	r24, 0x024D
    1c44:	89 1f       	adc	r24, r25
    1c46:	80 93 4d 02 	sts	0x024D, r24
    1c4a:	80 91 4e 02 	lds	r24, 0x024E
    1c4e:	89 1f       	adc	r24, r25
    1c50:	80 93 4e 02 	sts	0x024E, r24

00001c54 <end>:
    1c54:	2f be       	out	0x3f, r2	; 63
    1c56:	9f 91       	pop	r25
    1c58:	8f 91       	pop	r24
    1c5a:	2f 90       	pop	r2
    1c5c:	18 95       	reti

00001c5e <_ZN13OrangutanTime17delayMillisecondsEj>:
    1c5e:	28 ee       	ldi	r18, 0xE8	; 232
    1c60:	33 e0       	ldi	r19, 0x03	; 3
    1c62:	01 97       	sbiw	r24, 0x01	; 1
    1c64:	48 f0       	brcs	.+18     	; 0x1c78 <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    1c66:	f9 01       	movw	r30, r18
    1c68:	6f 93       	push	r22
    1c6a:	64 e0       	ldi	r22, 0x04	; 4
    1c6c:	6a 95       	dec	r22
    1c6e:	f1 f7       	brne	.-4      	; 0x1c6c <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    1c70:	6f 91       	pop	r22
    1c72:	31 97       	sbiw	r30, 0x01	; 1
    1c74:	c9 f7       	brne	.-14     	; 0x1c68 <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    1c76:	f5 cf       	rjmp	.-22     	; 0x1c62 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    1c78:	08 95       	ret

00001c7a <delay_ms>:
    1c7a:	0e 94 2f 0e 	call	0x1c5e	; 0x1c5e <_ZN13OrangutanTime17delayMillisecondsEj>
    1c7e:	08 95       	ret

00001c80 <_ZN13OrangutanTime5init2Ev>:
    1c80:	e0 e7       	ldi	r30, 0x70	; 112
    1c82:	f0 e0       	ldi	r31, 0x00	; 0
    1c84:	80 81       	ld	r24, Z
    1c86:	8e 7f       	andi	r24, 0xFE	; 254
    1c88:	80 83       	st	Z, r24
    1c8a:	a0 eb       	ldi	r26, 0xB0	; 176
    1c8c:	b0 e0       	ldi	r27, 0x00	; 0
    1c8e:	8c 91       	ld	r24, X
    1c90:	83 60       	ori	r24, 0x03	; 3
    1c92:	8c 93       	st	X, r24
    1c94:	a1 eb       	ldi	r26, 0xB1	; 177
    1c96:	b0 e0       	ldi	r27, 0x00	; 0
    1c98:	8c 91       	ld	r24, X
    1c9a:	80 7f       	andi	r24, 0xF0	; 240
    1c9c:	8c 93       	st	X, r24
    1c9e:	8c 91       	ld	r24, X
    1ca0:	82 60       	ori	r24, 0x02	; 2
    1ca2:	8c 93       	st	X, r24
    1ca4:	b8 9a       	sbi	0x17, 0	; 23
    1ca6:	80 81       	ld	r24, Z
    1ca8:	81 60       	ori	r24, 0x01	; 1
    1caa:	80 83       	st	Z, r24
    1cac:	78 94       	sei
    1cae:	08 95       	ret

00001cb0 <_ZN13OrangutanTime4initEv>:
    1cb0:	80 91 c7 02 	lds	r24, 0x02C7
    1cb4:	81 11       	cpse	r24, r1
    1cb6:	05 c0       	rjmp	.+10     	; 0x1cc2 <_ZN13OrangutanTime4initEv+0x12>
    1cb8:	81 e0       	ldi	r24, 0x01	; 1
    1cba:	80 93 c7 02 	sts	0x02C7, r24
    1cbe:	0e 94 40 0e 	call	0x1c80	; 0x1c80 <_ZN13OrangutanTime5init2Ev>
    1cc2:	08 95       	ret

00001cc4 <_ZN13OrangutanTime5resetEv>:
    1cc4:	0e 94 58 0e 	call	0x1cb0	; 0x1cb0 <_ZN13OrangutanTime4initEv>
    1cc8:	e0 e7       	ldi	r30, 0x70	; 112
    1cca:	f0 e0       	ldi	r31, 0x00	; 0
    1ccc:	80 81       	ld	r24, Z
    1cce:	8e 7f       	andi	r24, 0xFE	; 254
    1cd0:	80 83       	st	Z, r24
    1cd2:	10 92 4b 02 	sts	0x024B, r1
    1cd6:	10 92 4c 02 	sts	0x024C, r1
    1cda:	10 92 4d 02 	sts	0x024D, r1
    1cde:	10 92 4e 02 	sts	0x024E, r1
    1ce2:	10 92 4a 02 	sts	0x024A, r1
    1ce6:	10 92 49 02 	sts	0x0249, r1
    1cea:	80 81       	ld	r24, Z
    1cec:	81 60       	ori	r24, 0x01	; 1
    1cee:	80 83       	st	Z, r24
    1cf0:	08 95       	ret

00001cf2 <calibrate_line_sensors>:
    1cf2:	68 2f       	mov	r22, r24
    1cf4:	83 e5       	ldi	r24, 0x53	; 83
    1cf6:	92 e0       	ldi	r25, 0x02	; 2
    1cf8:	0e 94 61 12 	call	0x24c2	; 0x24c2 <_ZN16PololuQTRSensors9calibrateEh>
    1cfc:	08 95       	ret

00001cfe <read_line>:
    1cfe:	46 2f       	mov	r20, r22
    1d00:	20 e0       	ldi	r18, 0x00	; 0
    1d02:	bc 01       	movw	r22, r24
    1d04:	83 e5       	ldi	r24, 0x53	; 83
    1d06:	92 e0       	ldi	r25, 0x02	; 2
    1d08:	0e 94 32 13 	call	0x2664	; 0x2664 <_ZN16PololuQTRSensors8readLineEPjhh>
    1d0c:	08 95       	ret

00001d0e <_ZN9Pololu3pi4initEjh>:
    1d0e:	0f 93       	push	r16
    1d10:	cf 93       	push	r28
    1d12:	df 93       	push	r29
    1d14:	00 d0       	rcall	.+0      	; 0x1d16 <_ZN9Pololu3pi4initEjh+0x8>
    1d16:	00 d0       	rcall	.+0      	; 0x1d18 <_ZN9Pololu3pi4initEjh+0xa>
    1d18:	1f 92       	push	r1
    1d1a:	cd b7       	in	r28, 0x3d	; 61
    1d1c:	de b7       	in	r29, 0x3e	; 62
    1d1e:	9c 01       	movw	r18, r24
    1d20:	85 e0       	ldi	r24, 0x05	; 5
    1d22:	e5 e4       	ldi	r30, 0x45	; 69
    1d24:	f1 e0       	ldi	r31, 0x01	; 1
    1d26:	de 01       	movw	r26, r28
    1d28:	11 96       	adiw	r26, 0x01	; 1
    1d2a:	01 90       	ld	r0, Z+
    1d2c:	0d 92       	st	X+, r0
    1d2e:	8a 95       	dec	r24
    1d30:	e1 f7       	brne	.-8      	; 0x1d2a <_ZN9Pololu3pi4initEjh+0x1c>
    1d32:	66 23       	and	r22, r22
    1d34:	11 f0       	breq	.+4      	; 0x1d3a <_ZN9Pololu3pi4initEjh+0x2c>
    1d36:	0f ef       	ldi	r16, 0xFF	; 255
    1d38:	01 c0       	rjmp	.+2      	; 0x1d3c <_ZN9Pololu3pi4initEjh+0x2e>
    1d3a:	03 e1       	ldi	r16, 0x13	; 19
    1d3c:	45 e0       	ldi	r20, 0x05	; 5
    1d3e:	be 01       	movw	r22, r28
    1d40:	6f 5f       	subi	r22, 0xFF	; 255
    1d42:	7f 4f       	sbci	r23, 0xFF	; 255
    1d44:	83 e5       	ldi	r24, 0x53	; 83
    1d46:	92 e0       	ldi	r25, 0x02	; 2
    1d48:	0e 94 59 0f 	call	0x1eb2	; 0x1eb2 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    1d4c:	83 e5       	ldi	r24, 0x53	; 83
    1d4e:	92 e0       	ldi	r25, 0x02	; 2
    1d50:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <_ZN16PololuQTRSensors11emittersOffEv>
    1d54:	0e 94 62 0e 	call	0x1cc4	; 0x1cc4 <_ZN13OrangutanTime5resetEv>
    1d58:	0f 90       	pop	r0
    1d5a:	0f 90       	pop	r0
    1d5c:	0f 90       	pop	r0
    1d5e:	0f 90       	pop	r0
    1d60:	0f 90       	pop	r0
    1d62:	df 91       	pop	r29
    1d64:	cf 91       	pop	r28
    1d66:	0f 91       	pop	r16
    1d68:	08 95       	ret

00001d6a <pololu_3pi_init>:
    1d6a:	60 e0       	ldi	r22, 0x00	; 0
    1d6c:	0e 94 87 0e 	call	0x1d0e	; 0x1d0e <_ZN9Pololu3pi4initEjh>
    1d70:	08 95       	ret

00001d72 <_GLOBAL__sub_D_pololu_3pi_init>:
    1d72:	83 e5       	ldi	r24, 0x53	; 83
    1d74:	92 e0       	ldi	r25, 0x02	; 2
    1d76:	0e 94 a7 13 	call	0x274e	; 0x274e <_ZN16PololuQTRSensorsD1Ev>
    1d7a:	08 95       	ret

00001d7c <delay_us>:
    1d7c:	6f 93       	push	r22
    1d7e:	64 e0       	ldi	r22, 0x04	; 4
    1d80:	6a 95       	dec	r22
    1d82:	f1 f7       	brne	.-4      	; 0x1d80 <delay_us+0x4>
    1d84:	6f 91       	pop	r22
    1d86:	01 97       	sbiw	r24, 0x01	; 1
    1d88:	c9 f7       	brne	.-14     	; 0x1d7c <delay_us>
    1d8a:	08 95       	ret

00001d8c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    1d8c:	fc 01       	movw	r30, r24
    1d8e:	11 82       	std	Z+1, r1	; 0x01
    1d90:	10 82       	st	Z, r1
    1d92:	13 82       	std	Z+3, r1	; 0x03
    1d94:	12 82       	std	Z+2, r1	; 0x02
    1d96:	15 82       	std	Z+5, r1	; 0x05
    1d98:	14 82       	std	Z+4, r1	; 0x04
    1d9a:	16 82       	std	Z+6, r1	; 0x06
    1d9c:	68 30       	cpi	r22, 0x08	; 8
    1d9e:	68 f4       	brcc	.+26     	; 0x1dba <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    1da0:	89 e2       	ldi	r24, 0x29	; 41
    1da2:	90 e0       	ldi	r25, 0x00	; 0
    1da4:	91 83       	std	Z+1, r25	; 0x01
    1da6:	80 83       	st	Z, r24
    1da8:	8b e2       	ldi	r24, 0x2B	; 43
    1daa:	90 e0       	ldi	r25, 0x00	; 0
    1dac:	93 83       	std	Z+3, r25	; 0x03
    1dae:	82 83       	std	Z+2, r24	; 0x02
    1db0:	8a e2       	ldi	r24, 0x2A	; 42
    1db2:	90 e0       	ldi	r25, 0x00	; 0
    1db4:	95 83       	std	Z+5, r25	; 0x05
    1db6:	84 83       	std	Z+4, r24	; 0x04
    1db8:	1f c0       	rjmp	.+62     	; 0x1df8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1dba:	6e 30       	cpi	r22, 0x0E	; 14
    1dbc:	70 f4       	brcc	.+28     	; 0x1dda <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    1dbe:	83 e2       	ldi	r24, 0x23	; 35
    1dc0:	90 e0       	ldi	r25, 0x00	; 0
    1dc2:	91 83       	std	Z+1, r25	; 0x01
    1dc4:	80 83       	st	Z, r24
    1dc6:	85 e2       	ldi	r24, 0x25	; 37
    1dc8:	90 e0       	ldi	r25, 0x00	; 0
    1dca:	93 83       	std	Z+3, r25	; 0x03
    1dcc:	82 83       	std	Z+2, r24	; 0x02
    1dce:	84 e2       	ldi	r24, 0x24	; 36
    1dd0:	90 e0       	ldi	r25, 0x00	; 0
    1dd2:	95 83       	std	Z+5, r25	; 0x05
    1dd4:	84 83       	std	Z+4, r24	; 0x04
    1dd6:	68 50       	subi	r22, 0x08	; 8
    1dd8:	0f c0       	rjmp	.+30     	; 0x1df8 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1dda:	65 31       	cpi	r22, 0x15	; 21
    1ddc:	98 f4       	brcc	.+38     	; 0x1e04 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    1dde:	86 e2       	ldi	r24, 0x26	; 38
    1de0:	90 e0       	ldi	r25, 0x00	; 0
    1de2:	91 83       	std	Z+1, r25	; 0x01
    1de4:	80 83       	st	Z, r24
    1de6:	88 e2       	ldi	r24, 0x28	; 40
    1de8:	90 e0       	ldi	r25, 0x00	; 0
    1dea:	93 83       	std	Z+3, r25	; 0x03
    1dec:	82 83       	std	Z+2, r24	; 0x02
    1dee:	87 e2       	ldi	r24, 0x27	; 39
    1df0:	90 e0       	ldi	r25, 0x00	; 0
    1df2:	95 83       	std	Z+5, r25	; 0x05
    1df4:	84 83       	std	Z+4, r24	; 0x04
    1df6:	6e 50       	subi	r22, 0x0E	; 14
    1df8:	81 e0       	ldi	r24, 0x01	; 1
    1dfa:	01 c0       	rjmp	.+2      	; 0x1dfe <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    1dfc:	88 0f       	add	r24, r24
    1dfe:	6a 95       	dec	r22
    1e00:	ea f7       	brpl	.-6      	; 0x1dfc <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    1e02:	86 83       	std	Z+6, r24	; 0x06
    1e04:	08 95       	ret

00001e06 <_ZN16PololuQTRSensors4initEhhh>:
    1e06:	a7 e0       	ldi	r26, 0x07	; 7
    1e08:	b0 e0       	ldi	r27, 0x00	; 0
    1e0a:	e9 e0       	ldi	r30, 0x09	; 9
    1e0c:	ff e0       	ldi	r31, 0x0F	; 15
    1e0e:	0c 94 6a 14 	jmp	0x28d4	; 0x28d4 <__prologue_saves__+0x1c>
    1e12:	8c 01       	movw	r16, r24
    1e14:	fc 01       	movw	r30, r24
    1e16:	11 82       	std	Z+1, r1	; 0x01
    1e18:	10 82       	st	Z, r1
    1e1a:	13 82       	std	Z+3, r1	; 0x03
    1e1c:	12 82       	std	Z+2, r1	; 0x02
    1e1e:	15 82       	std	Z+5, r1	; 0x05
    1e20:	14 82       	std	Z+4, r1	; 0x04
    1e22:	17 82       	std	Z+7, r1	; 0x07
    1e24:	16 82       	std	Z+6, r1	; 0x06
    1e26:	61 31       	cpi	r22, 0x11	; 17
    1e28:	18 f0       	brcs	.+6      	; 0x1e30 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    1e2a:	80 e1       	ldi	r24, 0x10	; 16
    1e2c:	80 87       	std	Z+8, r24	; 0x08
    1e2e:	02 c0       	rjmp	.+4      	; 0x1e34 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    1e30:	fc 01       	movw	r30, r24
    1e32:	60 87       	std	Z+8, r22	; 0x08
    1e34:	f8 01       	movw	r30, r16
    1e36:	20 8b       	std	Z+16, r18	; 0x10
    1e38:	64 2f       	mov	r22, r20
    1e3a:	ce 01       	movw	r24, r28
    1e3c:	01 96       	adiw	r24, 0x01	; 1
    1e3e:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1e42:	8f 81       	ldd	r24, Y+7	; 0x07
    1e44:	f8 01       	movw	r30, r16
    1e46:	81 87       	std	Z+9, r24	; 0x09
    1e48:	8b 81       	ldd	r24, Y+3	; 0x03
    1e4a:	9c 81       	ldd	r25, Y+4	; 0x04
    1e4c:	93 87       	std	Z+11, r25	; 0x0b
    1e4e:	82 87       	std	Z+10, r24	; 0x0a
    1e50:	8d 81       	ldd	r24, Y+5	; 0x05
    1e52:	9e 81       	ldd	r25, Y+6	; 0x06
    1e54:	95 87       	std	Z+13, r25	; 0x0d
    1e56:	84 87       	std	Z+12, r24	; 0x0c
    1e58:	27 96       	adiw	r28, 0x07	; 7
    1e5a:	e4 e0       	ldi	r30, 0x04	; 4
    1e5c:	0c 94 86 14 	jmp	0x290c	; 0x290c <__epilogue_restores__+0x1c>

00001e60 <_ZN16PololuQTRSensors11emittersOffEv>:
    1e60:	fc 01       	movw	r30, r24
    1e62:	a4 85       	ldd	r26, Z+12	; 0x0c
    1e64:	b5 85       	ldd	r27, Z+13	; 0x0d
    1e66:	10 97       	sbiw	r26, 0x00	; 0
    1e68:	79 f0       	breq	.+30     	; 0x1e88 <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1e6a:	8c 91       	ld	r24, X
    1e6c:	91 85       	ldd	r25, Z+9	; 0x09
    1e6e:	89 2b       	or	r24, r25
    1e70:	8c 93       	st	X, r24
    1e72:	a2 85       	ldd	r26, Z+10	; 0x0a
    1e74:	b3 85       	ldd	r27, Z+11	; 0x0b
    1e76:	9c 91       	ld	r25, X
    1e78:	81 85       	ldd	r24, Z+9	; 0x09
    1e7a:	80 95       	com	r24
    1e7c:	89 23       	and	r24, r25
    1e7e:	8c 93       	st	X, r24
    1e80:	88 ec       	ldi	r24, 0xC8	; 200
    1e82:	90 e0       	ldi	r25, 0x00	; 0
    1e84:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <delay_us>
    1e88:	08 95       	ret

00001e8a <_ZN16PololuQTRSensors10emittersOnEv>:
    1e8a:	fc 01       	movw	r30, r24
    1e8c:	a4 85       	ldd	r26, Z+12	; 0x0c
    1e8e:	b5 85       	ldd	r27, Z+13	; 0x0d
    1e90:	10 97       	sbiw	r26, 0x00	; 0
    1e92:	71 f0       	breq	.+28     	; 0x1eb0 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1e94:	8c 91       	ld	r24, X
    1e96:	91 85       	ldd	r25, Z+9	; 0x09
    1e98:	89 2b       	or	r24, r25
    1e9a:	8c 93       	st	X, r24
    1e9c:	a2 85       	ldd	r26, Z+10	; 0x0a
    1e9e:	b3 85       	ldd	r27, Z+11	; 0x0b
    1ea0:	8c 91       	ld	r24, X
    1ea2:	91 85       	ldd	r25, Z+9	; 0x09
    1ea4:	89 2b       	or	r24, r25
    1ea6:	8c 93       	st	X, r24
    1ea8:	88 ec       	ldi	r24, 0xC8	; 200
    1eaa:	90 e0       	ldi	r25, 0x00	; 0
    1eac:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <delay_us>
    1eb0:	08 95       	ret

00001eb2 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1eb2:	a7 e0       	ldi	r26, 0x07	; 7
    1eb4:	b0 e0       	ldi	r27, 0x00	; 0
    1eb6:	ef e5       	ldi	r30, 0x5F	; 95
    1eb8:	ff e0       	ldi	r31, 0x0F	; 15
    1eba:	0c 94 5f 14 	jmp	0x28be	; 0x28be <__prologue_saves__+0x6>
    1ebe:	7c 01       	movw	r14, r24
    1ec0:	4b 01       	movw	r8, r22
    1ec2:	64 2f       	mov	r22, r20
    1ec4:	39 01       	movw	r6, r18
    1ec6:	40 2f       	mov	r20, r16
    1ec8:	20 e0       	ldi	r18, 0x00	; 0
    1eca:	0e 94 03 0f 	call	0x1e06	; 0x1e06 <_ZN16PololuQTRSensors4initEhhh>
    1ece:	87 01       	movw	r16, r14
    1ed0:	0f 5b       	subi	r16, 0xBF	; 191
    1ed2:	1f 4f       	sbci	r17, 0xFF	; 255
    1ed4:	f8 01       	movw	r30, r16
    1ed6:	10 82       	st	Z, r1
    1ed8:	67 01       	movw	r12, r14
    1eda:	f2 e4       	ldi	r31, 0x42	; 66
    1edc:	cf 0e       	add	r12, r31
    1ede:	d1 1c       	adc	r13, r1
    1ee0:	f6 01       	movw	r30, r12
    1ee2:	10 82       	st	Z, r1
    1ee4:	57 01       	movw	r10, r14
    1ee6:	f3 e4       	ldi	r31, 0x43	; 67
    1ee8:	af 0e       	add	r10, r31
    1eea:	b1 1c       	adc	r11, r1
    1eec:	f5 01       	movw	r30, r10
    1eee:	10 82       	st	Z, r1
    1ef0:	f7 01       	movw	r30, r14
    1ef2:	77 86       	std	Z+15, r7	; 0x0f
    1ef4:	66 86       	std	Z+14, r6	; 0x0e
    1ef6:	51 2c       	mov	r5, r1
    1ef8:	f7 01       	movw	r30, r14
    1efa:	80 85       	ldd	r24, Z+8	; 0x08
    1efc:	58 16       	cp	r5, r24
    1efe:	50 f5       	brcc	.+84     	; 0x1f54 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    1f00:	65 2c       	mov	r6, r5
    1f02:	71 2c       	mov	r7, r1
    1f04:	f4 01       	movw	r30, r8
    1f06:	e6 0d       	add	r30, r6
    1f08:	f7 1d       	adc	r31, r7
    1f0a:	60 81       	ld	r22, Z
    1f0c:	ce 01       	movw	r24, r28
    1f0e:	01 96       	adiw	r24, 0x01	; 1
    1f10:	0e 94 c6 0e 	call	0x1d8c	; 0x1d8c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1f14:	2f 81       	ldd	r18, Y+7	; 0x07
    1f16:	f7 01       	movw	r30, r14
    1f18:	e6 0d       	add	r30, r6
    1f1a:	f7 1d       	adc	r31, r7
    1f1c:	21 8b       	std	Z+17, r18	; 0x11
    1f1e:	89 81       	ldd	r24, Y+1	; 0x01
    1f20:	9a 81       	ldd	r25, Y+2	; 0x02
    1f22:	f3 01       	movw	r30, r6
    1f24:	ee 0f       	add	r30, r30
    1f26:	ff 1f       	adc	r31, r31
    1f28:	ee 0d       	add	r30, r14
    1f2a:	ff 1d       	adc	r31, r15
    1f2c:	92 a3       	std	Z+34, r25	; 0x22
    1f2e:	81 a3       	std	Z+33, r24	; 0x21
    1f30:	83 32       	cpi	r24, 0x23	; 35
    1f32:	91 05       	cpc	r25, r1
    1f34:	11 f4       	brne	.+4      	; 0x1f3a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1f36:	f8 01       	movw	r30, r16
    1f38:	08 c0       	rjmp	.+16     	; 0x1f4a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1f3a:	86 32       	cpi	r24, 0x26	; 38
    1f3c:	91 05       	cpc	r25, r1
    1f3e:	11 f4       	brne	.+4      	; 0x1f44 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    1f40:	f6 01       	movw	r30, r12
    1f42:	03 c0       	rjmp	.+6      	; 0x1f4a <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1f44:	89 97       	sbiw	r24, 0x29	; 41
    1f46:	21 f4       	brne	.+8      	; 0x1f50 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    1f48:	f5 01       	movw	r30, r10
    1f4a:	80 81       	ld	r24, Z
    1f4c:	82 2b       	or	r24, r18
    1f4e:	80 83       	st	Z, r24
    1f50:	53 94       	inc	r5
    1f52:	d2 cf       	rjmp	.-92     	; 0x1ef8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    1f54:	27 96       	adiw	r28, 0x07	; 7
    1f56:	ef e0       	ldi	r30, 0x0F	; 15
    1f58:	0c 94 7b 14 	jmp	0x28f6	; 0x28f6 <__epilogue_restores__+0x6>

00001f5c <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1f5c:	a0 e0       	ldi	r26, 0x00	; 0
    1f5e:	b0 e0       	ldi	r27, 0x00	; 0
    1f60:	e4 eb       	ldi	r30, 0xB4	; 180
    1f62:	ff e0       	ldi	r31, 0x0F	; 15
    1f64:	0c 94 61 14 	jmp	0x28c2	; 0x28c2 <__prologue_saves__+0xa>
    1f68:	ec 01       	movw	r28, r24
    1f6a:	5b 01       	movw	r10, r22
    1f6c:	6c 01       	movw	r12, r24
    1f6e:	81 e4       	ldi	r24, 0x41	; 65
    1f70:	c8 0e       	add	r12, r24
    1f72:	d1 1c       	adc	r13, r1
    1f74:	f6 01       	movw	r30, r12
    1f76:	80 80       	ld	r8, Z
    1f78:	7e 01       	movw	r14, r28
    1f7a:	f2 e4       	ldi	r31, 0x42	; 66
    1f7c:	ef 0e       	add	r14, r31
    1f7e:	f1 1c       	adc	r15, r1
    1f80:	f7 01       	movw	r30, r14
    1f82:	70 80       	ld	r7, Z
    1f84:	8e 01       	movw	r16, r28
    1f86:	0d 5b       	subi	r16, 0xBD	; 189
    1f88:	1f 4f       	sbci	r17, 0xFF	; 255
    1f8a:	f8 01       	movw	r30, r16
    1f8c:	90 80       	ld	r9, Z
    1f8e:	80 e0       	ldi	r24, 0x00	; 0
    1f90:	98 85       	ldd	r25, Y+8	; 0x08
    1f92:	89 17       	cp	r24, r25
    1f94:	48 f4       	brcc	.+18     	; 0x1fa8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    1f96:	f5 01       	movw	r30, r10
    1f98:	e8 0f       	add	r30, r24
    1f9a:	f1 1d       	adc	r31, r1
    1f9c:	e8 0f       	add	r30, r24
    1f9e:	f1 1d       	adc	r31, r1
    1fa0:	11 82       	std	Z+1, r1	; 0x01
    1fa2:	10 82       	st	Z, r1
    1fa4:	8f 5f       	subi	r24, 0xFF	; 255
    1fa6:	f4 cf       	rjmp	.-24     	; 0x1f90 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    1fa8:	84 b1       	in	r24, 0x04	; 4
    1faa:	f6 01       	movw	r30, r12
    1fac:	90 81       	ld	r25, Z
    1fae:	89 2b       	or	r24, r25
    1fb0:	84 b9       	out	0x04, r24	; 4
    1fb2:	87 b1       	in	r24, 0x07	; 7
    1fb4:	f7 01       	movw	r30, r14
    1fb6:	90 81       	ld	r25, Z
    1fb8:	89 2b       	or	r24, r25
    1fba:	87 b9       	out	0x07, r24	; 7
    1fbc:	8a b1       	in	r24, 0x0a	; 10
    1fbe:	f8 01       	movw	r30, r16
    1fc0:	90 81       	ld	r25, Z
    1fc2:	89 2b       	or	r24, r25
    1fc4:	8a b9       	out	0x0a, r24	; 10
    1fc6:	85 b1       	in	r24, 0x05	; 5
    1fc8:	f6 01       	movw	r30, r12
    1fca:	90 81       	ld	r25, Z
    1fcc:	89 2b       	or	r24, r25
    1fce:	85 b9       	out	0x05, r24	; 5
    1fd0:	88 b1       	in	r24, 0x08	; 8
    1fd2:	f7 01       	movw	r30, r14
    1fd4:	90 81       	ld	r25, Z
    1fd6:	89 2b       	or	r24, r25
    1fd8:	88 b9       	out	0x08, r24	; 8
    1fda:	8b b1       	in	r24, 0x0b	; 11
    1fdc:	f8 01       	movw	r30, r16
    1fde:	90 81       	ld	r25, Z
    1fe0:	89 2b       	or	r24, r25
    1fe2:	8b b9       	out	0x0b, r24	; 11
    1fe4:	8a e0       	ldi	r24, 0x0A	; 10
    1fe6:	90 e0       	ldi	r25, 0x00	; 0
    1fe8:	0e 94 be 0e 	call	0x1d7c	; 0x1d7c <delay_us>
    1fec:	94 b1       	in	r25, 0x04	; 4
    1fee:	f6 01       	movw	r30, r12
    1ff0:	80 81       	ld	r24, Z
    1ff2:	80 95       	com	r24
    1ff4:	89 23       	and	r24, r25
    1ff6:	84 b9       	out	0x04, r24	; 4
    1ff8:	97 b1       	in	r25, 0x07	; 7
    1ffa:	f7 01       	movw	r30, r14
    1ffc:	80 81       	ld	r24, Z
    1ffe:	80 95       	com	r24
    2000:	89 23       	and	r24, r25
    2002:	87 b9       	out	0x07, r24	; 7
    2004:	9a b1       	in	r25, 0x0a	; 10
    2006:	f8 01       	movw	r30, r16
    2008:	80 81       	ld	r24, Z
    200a:	80 95       	com	r24
    200c:	89 23       	and	r24, r25
    200e:	8a b9       	out	0x0a, r24	; 10
    2010:	95 b1       	in	r25, 0x05	; 5
    2012:	f6 01       	movw	r30, r12
    2014:	80 81       	ld	r24, Z
    2016:	80 95       	com	r24
    2018:	89 23       	and	r24, r25
    201a:	85 b9       	out	0x05, r24	; 5
    201c:	98 b1       	in	r25, 0x08	; 8
    201e:	f7 01       	movw	r30, r14
    2020:	80 81       	ld	r24, Z
    2022:	80 95       	com	r24
    2024:	89 23       	and	r24, r25
    2026:	88 b9       	out	0x08, r24	; 8
    2028:	9b b1       	in	r25, 0x0b	; 11
    202a:	f8 01       	movw	r30, r16
    202c:	80 81       	ld	r24, Z
    202e:	80 95       	com	r24
    2030:	89 23       	and	r24, r25
    2032:	8b b9       	out	0x0b, r24	; 11
    2034:	e0 90 b0 00 	lds	r14, 0x00B0
    2038:	d0 90 b1 00 	lds	r13, 0x00B1
    203c:	80 91 b0 00 	lds	r24, 0x00B0
    2040:	83 60       	ori	r24, 0x03	; 3
    2042:	80 93 b0 00 	sts	0x00B0, r24
    2046:	82 e0       	ldi	r24, 0x02	; 2
    2048:	80 93 b1 00 	sts	0x00B1, r24
    204c:	40 91 b2 00 	lds	r20, 0x00B2
    2050:	80 e0       	ldi	r24, 0x00	; 0
    2052:	90 e0       	ldi	r25, 0x00	; 0
    2054:	2e 85       	ldd	r18, Y+14	; 0x0e
    2056:	3f 85       	ldd	r19, Y+15	; 0x0f
    2058:	82 17       	cp	r24, r18
    205a:	93 07       	cpc	r25, r19
    205c:	20 f5       	brcc	.+72     	; 0x20a6 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    205e:	c0 90 b2 00 	lds	r12, 0x00B2
    2062:	2c 2d       	mov	r18, r12
    2064:	24 1b       	sub	r18, r20
    2066:	82 0f       	add	r24, r18
    2068:	91 1d       	adc	r25, r1
    206a:	03 b1       	in	r16, 0x03	; 3
    206c:	08 11       	cpse	r16, r8
    206e:	32 c0       	rjmp	.+100    	; 0x20d4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2070:	f6 b0       	in	r15, 0x06	; 6
    2072:	f7 10       	cpse	r15, r7
    2074:	2f c0       	rjmp	.+94     	; 0x20d4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2076:	29 b1       	in	r18, 0x09	; 9
    2078:	29 11       	cpse	r18, r9
    207a:	2c c0       	rjmp	.+88     	; 0x20d4 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    207c:	10 c0       	rjmp	.+32     	; 0x209e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    207e:	21 2f       	mov	r18, r17
    2080:	30 e0       	ldi	r19, 0x00	; 0
    2082:	a9 01       	movw	r20, r18
    2084:	44 0f       	add	r20, r20
    2086:	55 1f       	adc	r21, r21
    2088:	f5 01       	movw	r30, r10
    208a:	e4 0f       	add	r30, r20
    208c:	f5 1f       	adc	r31, r21
    208e:	60 81       	ld	r22, Z
    2090:	71 81       	ldd	r23, Z+1	; 0x01
    2092:	67 2b       	or	r22, r23
    2094:	21 f1       	breq	.+72     	; 0x20de <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    2096:	1f 5f       	subi	r17, 0xFF	; 255
    2098:	28 85       	ldd	r18, Y+8	; 0x08
    209a:	12 17       	cp	r17, r18
    209c:	80 f3       	brcs	.-32     	; 0x207e <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    209e:	7f 2c       	mov	r7, r15
    20a0:	80 2e       	mov	r8, r16
    20a2:	4c 2d       	mov	r20, r12
    20a4:	d7 cf       	rjmp	.-82     	; 0x2054 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    20a6:	e0 92 b0 00 	sts	0x00B0, r14
    20aa:	d0 92 b1 00 	sts	0x00B1, r13
    20ae:	20 e0       	ldi	r18, 0x00	; 0
    20b0:	88 85       	ldd	r24, Y+8	; 0x08
    20b2:	28 17       	cp	r18, r24
    20b4:	30 f5       	brcc	.+76     	; 0x2102 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    20b6:	f5 01       	movw	r30, r10
    20b8:	e2 0f       	add	r30, r18
    20ba:	f1 1d       	adc	r31, r1
    20bc:	e2 0f       	add	r30, r18
    20be:	f1 1d       	adc	r31, r1
    20c0:	80 81       	ld	r24, Z
    20c2:	91 81       	ldd	r25, Z+1	; 0x01
    20c4:	89 2b       	or	r24, r25
    20c6:	21 f4       	brne	.+8      	; 0x20d0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    20c8:	8e 85       	ldd	r24, Y+14	; 0x0e
    20ca:	9f 85       	ldd	r25, Y+15	; 0x0f
    20cc:	91 83       	std	Z+1, r25	; 0x01
    20ce:	80 83       	st	Z, r24
    20d0:	2f 5f       	subi	r18, 0xFF	; 255
    20d2:	ee cf       	rjmp	.-36     	; 0x20b0 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    20d4:	03 b1       	in	r16, 0x03	; 3
    20d6:	f6 b0       	in	r15, 0x06	; 6
    20d8:	99 b0       	in	r9, 0x09	; 9
    20da:	10 e0       	ldi	r17, 0x00	; 0
    20dc:	dd cf       	rjmp	.-70     	; 0x2098 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    20de:	de 01       	movw	r26, r28
    20e0:	a4 0f       	add	r26, r20
    20e2:	b5 1f       	adc	r27, r21
    20e4:	91 96       	adiw	r26, 0x21	; 33
    20e6:	0d 90       	ld	r0, X+
    20e8:	bc 91       	ld	r27, X
    20ea:	a0 2d       	mov	r26, r0
    20ec:	4c 91       	ld	r20, X
    20ee:	de 01       	movw	r26, r28
    20f0:	a2 0f       	add	r26, r18
    20f2:	b3 1f       	adc	r27, r19
    20f4:	51 96       	adiw	r26, 0x11	; 17
    20f6:	2c 91       	ld	r18, X
    20f8:	42 23       	and	r20, r18
    20fa:	69 f6       	brne	.-102    	; 0x2096 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    20fc:	91 83       	std	Z+1, r25	; 0x01
    20fe:	80 83       	st	Z, r24
    2100:	ca cf       	rjmp	.-108    	; 0x2096 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    2102:	cd b7       	in	r28, 0x3d	; 61
    2104:	de b7       	in	r29, 0x3e	; 62
    2106:	ed e0       	ldi	r30, 0x0D	; 13
    2108:	0c 94 7d 14 	jmp	0x28fa	; 0x28fa <__epilogue_restores__+0xa>

0000210c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    210c:	ef 92       	push	r14
    210e:	ff 92       	push	r15
    2110:	0f 93       	push	r16
    2112:	1f 93       	push	r17
    2114:	cf 93       	push	r28
    2116:	df 93       	push	r29
    2118:	fc 01       	movw	r30, r24
    211a:	9b 01       	movw	r18, r22
    211c:	f0 90 7c 00 	lds	r15, 0x007C
    2120:	00 91 7a 00 	lds	r16, 0x007A
    2124:	47 b1       	in	r20, 0x07	; 7
    2126:	18 b1       	in	r17, 0x08	; 8
    2128:	80 91 7a 00 	lds	r24, 0x007A
    212c:	86 fd       	sbrc	r24, 6
    212e:	fc cf       	rjmp	.-8      	; 0x2128 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    2130:	80 e0       	ldi	r24, 0x00	; 0
    2132:	90 85       	ldd	r25, Z+8	; 0x08
    2134:	89 17       	cp	r24, r25
    2136:	48 f4       	brcc	.+18     	; 0x214a <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    2138:	d9 01       	movw	r26, r18
    213a:	a8 0f       	add	r26, r24
    213c:	b1 1d       	adc	r27, r1
    213e:	a8 0f       	add	r26, r24
    2140:	b1 1d       	adc	r27, r1
    2142:	1d 92       	st	X+, r1
    2144:	1c 92       	st	X, r1
    2146:	8f 5f       	subi	r24, 0xFF	; 255
    2148:	f4 cf       	rjmp	.-24     	; 0x2132 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    214a:	97 b1       	in	r25, 0x07	; 7
    214c:	82 a1       	ldd	r24, Z+34	; 0x22
    214e:	80 95       	com	r24
    2150:	89 23       	and	r24, r25
    2152:	87 b9       	out	0x07, r24	; 7
    2154:	98 b1       	in	r25, 0x08	; 8
    2156:	82 a1       	ldd	r24, Z+34	; 0x22
    2158:	80 95       	com	r24
    215a:	89 23       	and	r24, r25
    215c:	88 b9       	out	0x08, r24	; 8
    215e:	87 e8       	ldi	r24, 0x87	; 135
    2160:	80 93 7a 00 	sts	0x007A, r24
    2164:	e1 2c       	mov	r14, r1
    2166:	81 a1       	ldd	r24, Z+33	; 0x21
    2168:	e8 16       	cp	r14, r24
    216a:	10 f0       	brcs	.+4      	; 0x2170 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    216c:	e1 2c       	mov	r14, r1
    216e:	29 c0       	rjmp	.+82     	; 0x21c2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    2170:	50 e0       	ldi	r21, 0x00	; 0
    2172:	80 85       	ldd	r24, Z+8	; 0x08
    2174:	58 17       	cp	r21, r24
    2176:	18 f5       	brcc	.+70     	; 0x21be <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    2178:	a5 2f       	mov	r26, r21
    217a:	b0 e0       	ldi	r27, 0x00	; 0
    217c:	ef 01       	movw	r28, r30
    217e:	ca 0f       	add	r28, r26
    2180:	db 1f       	adc	r29, r27
    2182:	89 89       	ldd	r24, Y+17	; 0x11
    2184:	80 64       	ori	r24, 0x40	; 64
    2186:	80 93 7c 00 	sts	0x007C, r24
    218a:	80 91 7a 00 	lds	r24, 0x007A
    218e:	80 64       	ori	r24, 0x40	; 64
    2190:	80 93 7a 00 	sts	0x007A, r24
    2194:	80 91 7a 00 	lds	r24, 0x007A
    2198:	86 fd       	sbrc	r24, 6
    219a:	fc cf       	rjmp	.-8      	; 0x2194 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    219c:	60 91 78 00 	lds	r22, 0x0078
    21a0:	70 91 79 00 	lds	r23, 0x0079
    21a4:	aa 0f       	add	r26, r26
    21a6:	bb 1f       	adc	r27, r27
    21a8:	a2 0f       	add	r26, r18
    21aa:	b3 1f       	adc	r27, r19
    21ac:	8d 91       	ld	r24, X+
    21ae:	9c 91       	ld	r25, X
    21b0:	11 97       	sbiw	r26, 0x01	; 1
    21b2:	86 0f       	add	r24, r22
    21b4:	97 1f       	adc	r25, r23
    21b6:	8d 93       	st	X+, r24
    21b8:	9c 93       	st	X, r25
    21ba:	5f 5f       	subi	r21, 0xFF	; 255
    21bc:	da cf       	rjmp	.-76     	; 0x2172 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    21be:	e3 94       	inc	r14
    21c0:	d2 cf       	rjmp	.-92     	; 0x2166 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    21c2:	80 85       	ldd	r24, Z+8	; 0x08
    21c4:	e8 16       	cp	r14, r24
    21c6:	a0 f4       	brcc	.+40     	; 0x21f0 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    21c8:	e9 01       	movw	r28, r18
    21ca:	ce 0d       	add	r28, r14
    21cc:	d1 1d       	adc	r29, r1
    21ce:	ce 0d       	add	r28, r14
    21d0:	d1 1d       	adc	r29, r1
    21d2:	61 a1       	ldd	r22, Z+33	; 0x21
    21d4:	70 e0       	ldi	r23, 0x00	; 0
    21d6:	cb 01       	movw	r24, r22
    21d8:	95 95       	asr	r25
    21da:	87 95       	ror	r24
    21dc:	a8 81       	ld	r26, Y
    21de:	b9 81       	ldd	r27, Y+1	; 0x01
    21e0:	8a 0f       	add	r24, r26
    21e2:	9b 1f       	adc	r25, r27
    21e4:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__udivmodhi4>
    21e8:	79 83       	std	Y+1, r23	; 0x01
    21ea:	68 83       	st	Y, r22
    21ec:	e3 94       	inc	r14
    21ee:	e9 cf       	rjmp	.-46     	; 0x21c2 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    21f0:	f0 92 7c 00 	sts	0x007C, r15
    21f4:	00 93 7a 00 	sts	0x007A, r16
    21f8:	18 b9       	out	0x08, r17	; 8
    21fa:	47 b9       	out	0x07, r20	; 7
    21fc:	cd b7       	in	r28, 0x3d	; 61
    21fe:	de b7       	in	r29, 0x3e	; 62
    2200:	e6 e0       	ldi	r30, 0x06	; 6
    2202:	0c 94 84 14 	jmp	0x2908	; 0x2908 <__epilogue_restores__+0x18>

00002206 <_ZN16PololuQTRSensors4readEPjh>:
    2206:	a0 e2       	ldi	r26, 0x20	; 32
    2208:	b0 e0       	ldi	r27, 0x00	; 0
    220a:	e9 e0       	ldi	r30, 0x09	; 9
    220c:	f1 e1       	ldi	r31, 0x11	; 17
    220e:	0c 94 67 14 	jmp	0x28ce	; 0x28ce <__prologue_saves__+0x16>
    2212:	8c 01       	movw	r16, r24
    2214:	7b 01       	movw	r14, r22
    2216:	d4 2e       	mov	r13, r20
    2218:	8f ef       	ldi	r24, 0xFF	; 255
    221a:	84 0f       	add	r24, r20
    221c:	82 30       	cpi	r24, 0x02	; 2
    221e:	18 f4       	brcc	.+6      	; 0x2226 <_ZN16PololuQTRSensors4readEPjh+0x20>
    2220:	c8 01       	movw	r24, r16
    2222:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <_ZN16PololuQTRSensors10emittersOnEv>
    2226:	d8 01       	movw	r26, r16
    2228:	50 96       	adiw	r26, 0x10	; 16
    222a:	8c 91       	ld	r24, X
    222c:	b7 01       	movw	r22, r14
    222e:	81 11       	cpse	r24, r1
    2230:	10 c0       	rjmp	.+32     	; 0x2252 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    2232:	c8 01       	movw	r24, r16
    2234:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    2238:	c8 01       	movw	r24, r16
    223a:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <_ZN16PololuQTRSensors11emittersOffEv>
    223e:	b2 e0       	ldi	r27, 0x02	; 2
    2240:	db 12       	cpse	r13, r27
    2242:	3a c0       	rjmp	.+116    	; 0x22b8 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    2244:	be 01       	movw	r22, r28
    2246:	6f 5f       	subi	r22, 0xFF	; 255
    2248:	7f 4f       	sbci	r23, 0xFF	; 255
    224a:	c8 01       	movw	r24, r16
    224c:	0e 94 ae 0f 	call	0x1f5c	; 0x1f5c <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    2250:	0f c0       	rjmp	.+30     	; 0x2270 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    2252:	c8 01       	movw	r24, r16
    2254:	0e 94 86 10 	call	0x210c	; 0x210c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    2258:	c8 01       	movw	r24, r16
    225a:	0e 94 30 0f 	call	0x1e60	; 0x1e60 <_ZN16PololuQTRSensors11emittersOffEv>
    225e:	e2 e0       	ldi	r30, 0x02	; 2
    2260:	de 12       	cpse	r13, r30
    2262:	2a c0       	rjmp	.+84     	; 0x22b8 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    2264:	be 01       	movw	r22, r28
    2266:	6f 5f       	subi	r22, 0xFF	; 255
    2268:	7f 4f       	sbci	r23, 0xFF	; 255
    226a:	c8 01       	movw	r24, r16
    226c:	0e 94 86 10 	call	0x210c	; 0x210c <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    2270:	40 e0       	ldi	r20, 0x00	; 0
    2272:	f8 01       	movw	r30, r16
    2274:	80 85       	ldd	r24, Z+8	; 0x08
    2276:	48 17       	cp	r20, r24
    2278:	f8 f4       	brcc	.+62     	; 0x22b8 <_ZN16PololuQTRSensors4readEPjh+0xb2>
    227a:	84 2f       	mov	r24, r20
    227c:	90 e0       	ldi	r25, 0x00	; 0
    227e:	88 0f       	add	r24, r24
    2280:	99 1f       	adc	r25, r25
    2282:	f7 01       	movw	r30, r14
    2284:	e8 0f       	add	r30, r24
    2286:	f9 1f       	adc	r31, r25
    2288:	21 e0       	ldi	r18, 0x01	; 1
    228a:	30 e0       	ldi	r19, 0x00	; 0
    228c:	2c 0f       	add	r18, r28
    228e:	3d 1f       	adc	r19, r29
    2290:	82 0f       	add	r24, r18
    2292:	93 1f       	adc	r25, r19
    2294:	d8 01       	movw	r26, r16
    2296:	1e 96       	adiw	r26, 0x0e	; 14
    2298:	2d 91       	ld	r18, X+
    229a:	3c 91       	ld	r19, X
    229c:	1f 97       	sbiw	r26, 0x0f	; 15
    229e:	dc 01       	movw	r26, r24
    22a0:	8d 91       	ld	r24, X+
    22a2:	9c 91       	ld	r25, X
    22a4:	28 1b       	sub	r18, r24
    22a6:	39 0b       	sbc	r19, r25
    22a8:	80 81       	ld	r24, Z
    22aa:	91 81       	ldd	r25, Z+1	; 0x01
    22ac:	82 0f       	add	r24, r18
    22ae:	93 1f       	adc	r25, r19
    22b0:	91 83       	std	Z+1, r25	; 0x01
    22b2:	80 83       	st	Z, r24
    22b4:	4f 5f       	subi	r20, 0xFF	; 255
    22b6:	dd cf       	rjmp	.-70     	; 0x2272 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    22b8:	a0 96       	adiw	r28, 0x20	; 32
    22ba:	e7 e0       	ldi	r30, 0x07	; 7
    22bc:	0c 94 83 14 	jmp	0x2906	; 0x2906 <__epilogue_restores__+0x16>

000022c0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>:
    22c0:	2f 92       	push	r2
    22c2:	3f 92       	push	r3
    22c4:	5f 92       	push	r5
    22c6:	6f 92       	push	r6
    22c8:	7f 92       	push	r7
    22ca:	8f 92       	push	r8
    22cc:	9f 92       	push	r9
    22ce:	af 92       	push	r10
    22d0:	bf 92       	push	r11
    22d2:	cf 92       	push	r12
    22d4:	df 92       	push	r13
    22d6:	ef 92       	push	r14
    22d8:	ff 92       	push	r15
    22da:	0f 93       	push	r16
    22dc:	1f 93       	push	r17
    22de:	cf 93       	push	r28
    22e0:	df 93       	push	r29
    22e2:	cd b7       	in	r28, 0x3d	; 61
    22e4:	de b7       	in	r29, 0x3e	; 62
    22e6:	c0 56       	subi	r28, 0x60	; 96
    22e8:	d1 09       	sbc	r29, r1
    22ea:	0f b6       	in	r0, 0x3f	; 63
    22ec:	f8 94       	cli
    22ee:	de bf       	out	0x3e, r29	; 62
    22f0:	0f be       	out	0x3f, r0	; 63
    22f2:	cd bf       	out	0x3d, r28	; 61
    22f4:	8c 01       	movw	r16, r24
    22f6:	4b 01       	movw	r8, r22
    22f8:	5a 01       	movw	r10, r20
    22fa:	52 2e       	mov	r5, r18
    22fc:	da 01       	movw	r26, r20
    22fe:	8d 91       	ld	r24, X+
    2300:	9c 91       	ld	r25, X
    2302:	89 2b       	or	r24, r25
    2304:	31 f0       	breq	.+12     	; 0x2312 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x52>
    2306:	f4 01       	movw	r30, r8
    2308:	80 81       	ld	r24, Z
    230a:	91 81       	ldd	r25, Z+1	; 0x01
    230c:	89 2b       	or	r24, r25
    230e:	f1 f4       	brne	.+60     	; 0x234c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    2310:	24 c0       	rjmp	.+72     	; 0x235a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x9a>
    2312:	d8 01       	movw	r26, r16
    2314:	18 96       	adiw	r26, 0x08	; 8
    2316:	8c 91       	ld	r24, X
    2318:	90 e0       	ldi	r25, 0x00	; 0
    231a:	88 0f       	add	r24, r24
    231c:	99 1f       	adc	r25, r25
    231e:	0e 94 99 14 	call	0x2932	; 0x2932 <malloc>
    2322:	f5 01       	movw	r30, r10
    2324:	91 83       	std	Z+1, r25	; 0x01
    2326:	80 83       	st	Z, r24
    2328:	00 97       	sbiw	r24, 0x00	; 0
    232a:	09 f4       	brne	.+2      	; 0x232e <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x6e>
    232c:	b1 c0       	rjmp	.+354    	; 0x2490 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    232e:	fc 01       	movw	r30, r24
    2330:	20 e0       	ldi	r18, 0x00	; 0
    2332:	30 e0       	ldi	r19, 0x00	; 0
    2334:	d8 01       	movw	r26, r16
    2336:	18 96       	adiw	r26, 0x08	; 8
    2338:	8c 91       	ld	r24, X
    233a:	90 e0       	ldi	r25, 0x00	; 0
    233c:	28 17       	cp	r18, r24
    233e:	39 07       	cpc	r19, r25
    2340:	14 f7       	brge	.-60     	; 0x2306 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x46>
    2342:	11 92       	st	Z+, r1
    2344:	11 92       	st	Z+, r1
    2346:	2f 5f       	subi	r18, 0xFF	; 255
    2348:	3f 4f       	sbci	r19, 0xFF	; 255
    234a:	f4 cf       	rjmp	.-24     	; 0x2334 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x74>
    234c:	e1 2c       	mov	r14, r1
    234e:	f1 2c       	mov	r15, r1
    2350:	6e 01       	movw	r12, r28
    2352:	b1 e2       	ldi	r27, 0x21	; 33
    2354:	cb 0e       	add	r12, r27
    2356:	d1 1c       	adc	r13, r1
    2358:	21 c0       	rjmp	.+66     	; 0x239c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    235a:	f8 01       	movw	r30, r16
    235c:	80 85       	ldd	r24, Z+8	; 0x08
    235e:	90 e0       	ldi	r25, 0x00	; 0
    2360:	88 0f       	add	r24, r24
    2362:	99 1f       	adc	r25, r25
    2364:	0e 94 99 14 	call	0x2932	; 0x2932 <malloc>
    2368:	d4 01       	movw	r26, r8
    236a:	8d 93       	st	X+, r24
    236c:	9c 93       	st	X, r25
    236e:	00 97       	sbiw	r24, 0x00	; 0
    2370:	09 f4       	brne	.+2      	; 0x2374 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xb4>
    2372:	8e c0       	rjmp	.+284    	; 0x2490 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    2374:	fc 01       	movw	r30, r24
    2376:	20 e0       	ldi	r18, 0x00	; 0
    2378:	30 e0       	ldi	r19, 0x00	; 0
    237a:	d8 01       	movw	r26, r16
    237c:	18 96       	adiw	r26, 0x08	; 8
    237e:	8c 91       	ld	r24, X
    2380:	90 e0       	ldi	r25, 0x00	; 0
    2382:	28 17       	cp	r18, r24
    2384:	39 07       	cpc	r19, r25
    2386:	14 f7       	brge	.-60     	; 0x234c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x8c>
    2388:	d8 01       	movw	r26, r16
    238a:	1e 96       	adiw	r26, 0x0e	; 14
    238c:	8d 91       	ld	r24, X+
    238e:	9c 91       	ld	r25, X
    2390:	1f 97       	sbiw	r26, 0x0f	; 15
    2392:	81 93       	st	Z+, r24
    2394:	91 93       	st	Z+, r25
    2396:	2f 5f       	subi	r18, 0xFF	; 255
    2398:	3f 4f       	sbci	r19, 0xFF	; 255
    239a:	ef cf       	rjmp	.-34     	; 0x237a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xba>
    239c:	45 2d       	mov	r20, r5
    239e:	be 01       	movw	r22, r28
    23a0:	6f 5b       	subi	r22, 0xBF	; 191
    23a2:	7f 4f       	sbci	r23, 0xFF	; 255
    23a4:	c8 01       	movw	r24, r16
    23a6:	0e 94 03 11 	call	0x2206	; 0x2206 <_ZN16PololuQTRSensors4readEPjh>
    23aa:	f8 01       	movw	r30, r16
    23ac:	60 84       	ldd	r6, Z+8	; 0x08
    23ae:	71 2c       	mov	r7, r1
    23b0:	fe 01       	movw	r30, r28
    23b2:	ef 5b       	subi	r30, 0xBF	; 191
    23b4:	ff 4f       	sbci	r31, 0xFF	; 255
    23b6:	c6 01       	movw	r24, r12
    23b8:	9e 01       	movw	r18, r28
    23ba:	2f 5f       	subi	r18, 0xFF	; 255
    23bc:	3f 4f       	sbci	r19, 0xFF	; 255
    23be:	19 01       	movw	r2, r18
    23c0:	20 e0       	ldi	r18, 0x00	; 0
    23c2:	30 e0       	ldi	r19, 0x00	; 0
    23c4:	26 15       	cp	r18, r6
    23c6:	37 05       	cpc	r19, r7
    23c8:	4c f5       	brge	.+82     	; 0x241c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x15c>
    23ca:	e1 14       	cp	r14, r1
    23cc:	f1 04       	cpc	r15, r1
    23ce:	89 f0       	breq	.+34     	; 0x23f2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    23d0:	dc 01       	movw	r26, r24
    23d2:	6d 91       	ld	r22, X+
    23d4:	7c 91       	ld	r23, X
    23d6:	40 81       	ld	r20, Z
    23d8:	51 81       	ldd	r21, Z+1	; 0x01
    23da:	64 17       	cp	r22, r20
    23dc:	75 07       	cpc	r23, r21
    23de:	48 f0       	brcs	.+18     	; 0x23f2 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x132>
    23e0:	d1 01       	movw	r26, r2
    23e2:	6d 91       	ld	r22, X+
    23e4:	7c 91       	ld	r23, X
    23e6:	40 81       	ld	r20, Z
    23e8:	51 81       	ldd	r21, Z+1	; 0x01
    23ea:	46 17       	cp	r20, r22
    23ec:	57 07       	cpc	r21, r23
    23ee:	48 f0       	brcs	.+18     	; 0x2402 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x142>
    23f0:	0d c0       	rjmp	.+26     	; 0x240c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x14c>
    23f2:	40 81       	ld	r20, Z
    23f4:	51 81       	ldd	r21, Z+1	; 0x01
    23f6:	dc 01       	movw	r26, r24
    23f8:	4d 93       	st	X+, r20
    23fa:	5c 93       	st	X, r21
    23fc:	e1 14       	cp	r14, r1
    23fe:	f1 04       	cpc	r15, r1
    2400:	79 f7       	brne	.-34     	; 0x23e0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x120>
    2402:	40 81       	ld	r20, Z
    2404:	51 81       	ldd	r21, Z+1	; 0x01
    2406:	d1 01       	movw	r26, r2
    2408:	4d 93       	st	X+, r20
    240a:	5c 93       	st	X, r21
    240c:	2f 5f       	subi	r18, 0xFF	; 255
    240e:	3f 4f       	sbci	r19, 0xFF	; 255
    2410:	b2 e0       	ldi	r27, 0x02	; 2
    2412:	2b 0e       	add	r2, r27
    2414:	31 1c       	adc	r3, r1
    2416:	32 96       	adiw	r30, 0x02	; 2
    2418:	02 96       	adiw	r24, 0x02	; 2
    241a:	d4 cf       	rjmp	.-88     	; 0x23c4 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x104>
    241c:	ef ef       	ldi	r30, 0xFF	; 255
    241e:	ee 1a       	sub	r14, r30
    2420:	fe 0a       	sbc	r15, r30
    2422:	fa e0       	ldi	r31, 0x0A	; 10
    2424:	ef 16       	cp	r14, r31
    2426:	f1 04       	cpc	r15, r1
    2428:	09 f0       	breq	.+2      	; 0x242c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x16c>
    242a:	b8 cf       	rjmp	.-144    	; 0x239c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0xdc>
    242c:	9e 01       	movw	r18, r28
    242e:	2f 5f       	subi	r18, 0xFF	; 255
    2430:	3f 4f       	sbci	r19, 0xFF	; 255
    2432:	79 01       	movw	r14, r18
    2434:	36 01       	movw	r6, r12
    2436:	80 e0       	ldi	r24, 0x00	; 0
    2438:	90 e0       	ldi	r25, 0x00	; 0
    243a:	f8 01       	movw	r30, r16
    243c:	20 85       	ldd	r18, Z+8	; 0x08
    243e:	30 e0       	ldi	r19, 0x00	; 0
    2440:	82 17       	cp	r24, r18
    2442:	93 07       	cpc	r25, r19
    2444:	2c f5       	brge	.+74     	; 0x2490 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1d0>
    2446:	d7 01       	movw	r26, r14
    2448:	2d 91       	ld	r18, X+
    244a:	3d 91       	ld	r19, X+
    244c:	7d 01       	movw	r14, r26
    244e:	b3 01       	movw	r22, r6
    2450:	6c 19       	sub	r22, r12
    2452:	7d 09       	sbc	r23, r13
    2454:	d5 01       	movw	r26, r10
    2456:	ed 91       	ld	r30, X+
    2458:	fc 91       	ld	r31, X
    245a:	e6 0f       	add	r30, r22
    245c:	f7 1f       	adc	r31, r23
    245e:	40 81       	ld	r20, Z
    2460:	51 81       	ldd	r21, Z+1	; 0x01
    2462:	42 17       	cp	r20, r18
    2464:	53 07       	cpc	r21, r19
    2466:	10 f4       	brcc	.+4      	; 0x246c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1ac>
    2468:	31 83       	std	Z+1, r19	; 0x01
    246a:	20 83       	st	Z, r18
    246c:	f3 01       	movw	r30, r6
    246e:	21 91       	ld	r18, Z+
    2470:	31 91       	ld	r19, Z+
    2472:	3f 01       	movw	r6, r30
    2474:	d4 01       	movw	r26, r8
    2476:	ed 91       	ld	r30, X+
    2478:	fc 91       	ld	r31, X
    247a:	e6 0f       	add	r30, r22
    247c:	f7 1f       	adc	r31, r23
    247e:	40 81       	ld	r20, Z
    2480:	51 81       	ldd	r21, Z+1	; 0x01
    2482:	24 17       	cp	r18, r20
    2484:	35 07       	cpc	r19, r21
    2486:	10 f4       	brcc	.+4      	; 0x248c <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x1cc>
    2488:	31 83       	std	Z+1, r19	; 0x01
    248a:	20 83       	st	Z, r18
    248c:	01 96       	adiw	r24, 0x01	; 1
    248e:	d5 cf       	rjmp	.-86     	; 0x243a <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h+0x17a>
    2490:	c0 5a       	subi	r28, 0xA0	; 160
    2492:	df 4f       	sbci	r29, 0xFF	; 255
    2494:	0f b6       	in	r0, 0x3f	; 63
    2496:	f8 94       	cli
    2498:	de bf       	out	0x3e, r29	; 62
    249a:	0f be       	out	0x3f, r0	; 63
    249c:	cd bf       	out	0x3d, r28	; 61
    249e:	df 91       	pop	r29
    24a0:	cf 91       	pop	r28
    24a2:	1f 91       	pop	r17
    24a4:	0f 91       	pop	r16
    24a6:	ff 90       	pop	r15
    24a8:	ef 90       	pop	r14
    24aa:	df 90       	pop	r13
    24ac:	cf 90       	pop	r12
    24ae:	bf 90       	pop	r11
    24b0:	af 90       	pop	r10
    24b2:	9f 90       	pop	r9
    24b4:	8f 90       	pop	r8
    24b6:	7f 90       	pop	r7
    24b8:	6f 90       	pop	r6
    24ba:	5f 90       	pop	r5
    24bc:	3f 90       	pop	r3
    24be:	2f 90       	pop	r2
    24c0:	08 95       	ret

000024c2 <_ZN16PololuQTRSensors9calibrateEh>:
    24c2:	1f 93       	push	r17
    24c4:	cf 93       	push	r28
    24c6:	df 93       	push	r29
    24c8:	ec 01       	movw	r28, r24
    24ca:	16 2f       	mov	r17, r22
    24cc:	8f ef       	ldi	r24, 0xFF	; 255
    24ce:	86 0f       	add	r24, r22
    24d0:	82 30       	cpi	r24, 0x02	; 2
    24d2:	18 f0       	brcs	.+6      	; 0x24da <_ZN16PololuQTRSensors9calibrateEh+0x18>
    24d4:	66 23       	and	r22, r22
    24d6:	59 f0       	breq	.+22     	; 0x24ee <_ZN16PololuQTRSensors9calibrateEh+0x2c>
    24d8:	14 c0       	rjmp	.+40     	; 0x2502 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    24da:	21 e0       	ldi	r18, 0x01	; 1
    24dc:	ae 01       	movw	r20, r28
    24de:	4e 5f       	subi	r20, 0xFE	; 254
    24e0:	5f 4f       	sbci	r21, 0xFF	; 255
    24e2:	be 01       	movw	r22, r28
    24e4:	ce 01       	movw	r24, r28
    24e6:	0e 94 60 11 	call	0x22c0	; 0x22c0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    24ea:	12 30       	cpi	r17, 0x02	; 2
    24ec:	51 f4       	brne	.+20     	; 0x2502 <_ZN16PololuQTRSensors9calibrateEh+0x40>
    24ee:	ae 01       	movw	r20, r28
    24f0:	4a 5f       	subi	r20, 0xFA	; 250
    24f2:	5f 4f       	sbci	r21, 0xFF	; 255
    24f4:	be 01       	movw	r22, r28
    24f6:	6c 5f       	subi	r22, 0xFC	; 252
    24f8:	7f 4f       	sbci	r23, 0xFF	; 255
    24fa:	20 e0       	ldi	r18, 0x00	; 0
    24fc:	ce 01       	movw	r24, r28
    24fe:	0e 94 60 11 	call	0x22c0	; 0x22c0 <_ZN16PololuQTRSensors16calibrateOnOrOffEPPjS1_h>
    2502:	df 91       	pop	r29
    2504:	cf 91       	pop	r28
    2506:	1f 91       	pop	r17
    2508:	08 95       	ret

0000250a <_ZN16PololuQTRSensors14readCalibratedEPjh>:
    250a:	a0 e0       	ldi	r26, 0x00	; 0
    250c:	b0 e0       	ldi	r27, 0x00	; 0
    250e:	eb e8       	ldi	r30, 0x8B	; 139
    2510:	f2 e1       	ldi	r31, 0x12	; 18
    2512:	0c 94 65 14 	jmp	0x28ca	; 0x28ca <__prologue_saves__+0x12>
    2516:	ec 01       	movw	r28, r24
    2518:	8b 01       	movw	r16, r22
    251a:	b4 2e       	mov	r11, r20
    251c:	84 2f       	mov	r24, r20
    251e:	8d 7f       	andi	r24, 0xFD	; 253
    2520:	51 f4       	brne	.+20     	; 0x2536 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    2522:	8c 81       	ldd	r24, Y+4	; 0x04
    2524:	9d 81       	ldd	r25, Y+5	; 0x05
    2526:	89 2b       	or	r24, r25
    2528:	09 f4       	brne	.+2      	; 0x252c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x22>
    252a:	97 c0       	rjmp	.+302    	; 0x265a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    252c:	8e 81       	ldd	r24, Y+6	; 0x06
    252e:	9f 81       	ldd	r25, Y+7	; 0x07
    2530:	89 2b       	or	r24, r25
    2532:	09 f4       	brne	.+2      	; 0x2536 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x2c>
    2534:	92 c0       	rjmp	.+292    	; 0x265a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2536:	8f ef       	ldi	r24, 0xFF	; 255
    2538:	8b 0d       	add	r24, r11
    253a:	82 30       	cpi	r24, 0x02	; 2
    253c:	50 f4       	brcc	.+20     	; 0x2552 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    253e:	88 81       	ld	r24, Y
    2540:	99 81       	ldd	r25, Y+1	; 0x01
    2542:	89 2b       	or	r24, r25
    2544:	09 f4       	brne	.+2      	; 0x2548 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x3e>
    2546:	89 c0       	rjmp	.+274    	; 0x265a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2548:	8a 81       	ldd	r24, Y+2	; 0x02
    254a:	9b 81       	ldd	r25, Y+3	; 0x03
    254c:	89 2b       	or	r24, r25
    254e:	09 f4       	brne	.+2      	; 0x2552 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x48>
    2550:	84 c0       	rjmp	.+264    	; 0x265a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2552:	4b 2d       	mov	r20, r11
    2554:	b8 01       	movw	r22, r16
    2556:	ce 01       	movw	r24, r28
    2558:	0e 94 03 11 	call	0x2206	; 0x2206 <_ZN16PololuQTRSensors4readEPjh>
    255c:	78 01       	movw	r14, r16
    255e:	00 e0       	ldi	r16, 0x00	; 0
    2560:	10 e0       	ldi	r17, 0x00	; 0
    2562:	c1 2c       	mov	r12, r1
    2564:	d1 2c       	mov	r13, r1
    2566:	88 85       	ldd	r24, Y+8	; 0x08
    2568:	90 e0       	ldi	r25, 0x00	; 0
    256a:	c8 16       	cp	r12, r24
    256c:	d9 06       	cpc	r13, r25
    256e:	0c f0       	brlt	.+2      	; 0x2572 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x68>
    2570:	74 c0       	rjmp	.+232    	; 0x265a <_ZN16PololuQTRSensors14readCalibratedEPjh+0x150>
    2572:	81 e0       	ldi	r24, 0x01	; 1
    2574:	b8 12       	cpse	r11, r24
    2576:	0a c0       	rjmp	.+20     	; 0x258c <_ZN16PololuQTRSensors14readCalibratedEPjh+0x82>
    2578:	ea 81       	ldd	r30, Y+2	; 0x02
    257a:	fb 81       	ldd	r31, Y+3	; 0x03
    257c:	e0 0f       	add	r30, r16
    257e:	f1 1f       	adc	r31, r17
    2580:	01 90       	ld	r0, Z+
    2582:	f0 81       	ld	r31, Z
    2584:	e0 2d       	mov	r30, r0
    2586:	a8 81       	ld	r26, Y
    2588:	b9 81       	ldd	r27, Y+1	; 0x01
    258a:	0d c0       	rjmp	.+26     	; 0x25a6 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x9c>
    258c:	8c 81       	ldd	r24, Y+4	; 0x04
    258e:	9d 81       	ldd	r25, Y+5	; 0x05
    2590:	2e 81       	ldd	r18, Y+6	; 0x06
    2592:	3f 81       	ldd	r19, Y+7	; 0x07
    2594:	b1 10       	cpse	r11, r1
    2596:	0c c0       	rjmp	.+24     	; 0x25b0 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xa6>
    2598:	f9 01       	movw	r30, r18
    259a:	e0 0f       	add	r30, r16
    259c:	f1 1f       	adc	r31, r17
    259e:	01 90       	ld	r0, Z+
    25a0:	f0 81       	ld	r31, Z
    25a2:	e0 2d       	mov	r30, r0
    25a4:	dc 01       	movw	r26, r24
    25a6:	a0 0f       	add	r26, r16
    25a8:	b1 1f       	adc	r27, r17
    25aa:	8d 91       	ld	r24, X+
    25ac:	9c 91       	ld	r25, X
    25ae:	28 c0       	rjmp	.+80     	; 0x2600 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    25b0:	fc 01       	movw	r30, r24
    25b2:	e0 0f       	add	r30, r16
    25b4:	f1 1f       	adc	r31, r17
    25b6:	40 81       	ld	r20, Z
    25b8:	51 81       	ldd	r21, Z+1	; 0x01
    25ba:	e8 81       	ld	r30, Y
    25bc:	f9 81       	ldd	r31, Y+1	; 0x01
    25be:	e0 0f       	add	r30, r16
    25c0:	f1 1f       	adc	r31, r17
    25c2:	80 81       	ld	r24, Z
    25c4:	91 81       	ldd	r25, Z+1	; 0x01
    25c6:	ee 85       	ldd	r30, Y+14	; 0x0e
    25c8:	ff 85       	ldd	r31, Y+15	; 0x0f
    25ca:	48 17       	cp	r20, r24
    25cc:	59 07       	cpc	r21, r25
    25ce:	10 f4       	brcc	.+4      	; 0x25d4 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xca>
    25d0:	cf 01       	movw	r24, r30
    25d2:	04 c0       	rjmp	.+8      	; 0x25dc <_ZN16PololuQTRSensors14readCalibratedEPjh+0xd2>
    25d4:	8e 0f       	add	r24, r30
    25d6:	9f 1f       	adc	r25, r31
    25d8:	84 1b       	sub	r24, r20
    25da:	95 0b       	sbc	r25, r21
    25dc:	d9 01       	movw	r26, r18
    25de:	a0 0f       	add	r26, r16
    25e0:	b1 1f       	adc	r27, r17
    25e2:	2d 91       	ld	r18, X+
    25e4:	3c 91       	ld	r19, X
    25e6:	aa 81       	ldd	r26, Y+2	; 0x02
    25e8:	bb 81       	ldd	r27, Y+3	; 0x03
    25ea:	a0 0f       	add	r26, r16
    25ec:	b1 1f       	adc	r27, r17
    25ee:	4d 91       	ld	r20, X+
    25f0:	5c 91       	ld	r21, X
    25f2:	24 17       	cp	r18, r20
    25f4:	35 07       	cpc	r19, r21
    25f6:	20 f0       	brcs	.+8      	; 0x2600 <_ZN16PololuQTRSensors14readCalibratedEPjh+0xf6>
    25f8:	e4 0f       	add	r30, r20
    25fa:	f5 1f       	adc	r31, r21
    25fc:	e2 1b       	sub	r30, r18
    25fe:	f3 0b       	sbc	r31, r19
    2600:	e8 1b       	sub	r30, r24
    2602:	f9 0b       	sbc	r31, r25
    2604:	a9 f0       	breq	.+42     	; 0x2630 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x126>
    2606:	d7 01       	movw	r26, r14
    2608:	2d 91       	ld	r18, X+
    260a:	3c 91       	ld	r19, X
    260c:	40 e0       	ldi	r20, 0x00	; 0
    260e:	50 e0       	ldi	r21, 0x00	; 0
    2610:	28 1b       	sub	r18, r24
    2612:	39 0b       	sbc	r19, r25
    2614:	41 09       	sbc	r20, r1
    2616:	51 09       	sbc	r21, r1
    2618:	a8 ee       	ldi	r26, 0xE8	; 232
    261a:	b3 e0       	ldi	r27, 0x03	; 3
    261c:	0e 94 49 14 	call	0x2892	; 0x2892 <__muluhisi3>
    2620:	9f 01       	movw	r18, r30
    2622:	40 e0       	ldi	r20, 0x00	; 0
    2624:	50 e0       	ldi	r21, 0x00	; 0
    2626:	0e 94 1b 14 	call	0x2836	; 0x2836 <__divmodsi4>
    262a:	37 fd       	sbrc	r19, 7
    262c:	0a c0       	rjmp	.+20     	; 0x2642 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x138>
    262e:	02 c0       	rjmp	.+4      	; 0x2634 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x12a>
    2630:	20 e0       	ldi	r18, 0x00	; 0
    2632:	30 e0       	ldi	r19, 0x00	; 0
    2634:	29 3e       	cpi	r18, 0xE9	; 233
    2636:	b3 e0       	ldi	r27, 0x03	; 3
    2638:	3b 07       	cpc	r19, r27
    263a:	2c f0       	brlt	.+10     	; 0x2646 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    263c:	28 ee       	ldi	r18, 0xE8	; 232
    263e:	33 e0       	ldi	r19, 0x03	; 3
    2640:	02 c0       	rjmp	.+4      	; 0x2646 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x13c>
    2642:	20 e0       	ldi	r18, 0x00	; 0
    2644:	30 e0       	ldi	r19, 0x00	; 0
    2646:	f7 01       	movw	r30, r14
    2648:	21 93       	st	Z+, r18
    264a:	31 93       	st	Z+, r19
    264c:	7f 01       	movw	r14, r30
    264e:	ff ef       	ldi	r31, 0xFF	; 255
    2650:	cf 1a       	sub	r12, r31
    2652:	df 0a       	sbc	r13, r31
    2654:	0e 5f       	subi	r16, 0xFE	; 254
    2656:	1f 4f       	sbci	r17, 0xFF	; 255
    2658:	86 cf       	rjmp	.-244    	; 0x2566 <_ZN16PololuQTRSensors14readCalibratedEPjh+0x5c>
    265a:	cd b7       	in	r28, 0x3d	; 61
    265c:	de b7       	in	r29, 0x3e	; 62
    265e:	e9 e0       	ldi	r30, 0x09	; 9
    2660:	0c 94 81 14 	jmp	0x2902	; 0x2902 <__epilogue_restores__+0x12>

00002664 <_ZN16PololuQTRSensors8readLineEPjhh>:
    2664:	a0 e0       	ldi	r26, 0x00	; 0
    2666:	b0 e0       	ldi	r27, 0x00	; 0
    2668:	e8 e3       	ldi	r30, 0x38	; 56
    266a:	f3 e1       	ldi	r31, 0x13	; 19
    266c:	0c 94 5c 14 	jmp	0x28b8	; 0x28b8 <__prologue_saves__>
    2670:	ec 01       	movw	r28, r24
    2672:	8b 01       	movw	r16, r22
    2674:	82 2e       	mov	r8, r18
    2676:	0e 94 85 12 	call	0x250a	; 0x250a <_ZN16PololuQTRSensors14readCalibratedEPjh>
    267a:	28 84       	ldd	r2, Y+8	; 0x08
    267c:	e8 01       	movw	r28, r16
    267e:	41 2c       	mov	r4, r1
    2680:	51 2c       	mov	r5, r1
    2682:	32 01       	movw	r6, r4
    2684:	00 e0       	ldi	r16, 0x00	; 0
    2686:	10 e0       	ldi	r17, 0x00	; 0
    2688:	c1 2c       	mov	r12, r1
    268a:	d1 2c       	mov	r13, r1
    268c:	76 01       	movw	r14, r12
    268e:	31 2c       	mov	r3, r1
    2690:	91 2c       	mov	r9, r1
    2692:	58 ee       	ldi	r21, 0xE8	; 232
    2694:	a5 2e       	mov	r10, r21
    2696:	53 e0       	ldi	r21, 0x03	; 3
    2698:	b5 2e       	mov	r11, r21
    269a:	92 14       	cp	r9, r2
    269c:	21 f1       	breq	.+72     	; 0x26e6 <_ZN16PololuQTRSensors8readLineEPjhh+0x82>
    269e:	e9 91       	ld	r30, Y+
    26a0:	f9 91       	ld	r31, Y+
    26a2:	88 20       	and	r8, r8
    26a4:	21 f0       	breq	.+8      	; 0x26ae <_ZN16PololuQTRSensors8readLineEPjhh+0x4a>
    26a6:	c5 01       	movw	r24, r10
    26a8:	8e 1b       	sub	r24, r30
    26aa:	9f 0b       	sbc	r25, r31
    26ac:	fc 01       	movw	r30, r24
    26ae:	e9 3c       	cpi	r30, 0xC9	; 201
    26b0:	f1 05       	cpc	r31, r1
    26b2:	24 f4       	brge	.+8      	; 0x26bc <_ZN16PololuQTRSensors8readLineEPjhh+0x58>
    26b4:	e3 33       	cpi	r30, 0x33	; 51
    26b6:	f1 05       	cpc	r31, r1
    26b8:	74 f0       	brlt	.+28     	; 0x26d6 <_ZN16PololuQTRSensors8readLineEPjhh+0x72>
    26ba:	02 c0       	rjmp	.+4      	; 0x26c0 <_ZN16PololuQTRSensors8readLineEPjhh+0x5c>
    26bc:	33 24       	eor	r3, r3
    26be:	33 94       	inc	r3
    26c0:	df 01       	movw	r26, r30
    26c2:	a3 01       	movw	r20, r6
    26c4:	92 01       	movw	r18, r4
    26c6:	0e 94 54 14 	call	0x28a8	; 0x28a8 <__mulshisi3>
    26ca:	c6 0e       	add	r12, r22
    26cc:	d7 1e       	adc	r13, r23
    26ce:	e8 1e       	adc	r14, r24
    26d0:	f9 1e       	adc	r15, r25
    26d2:	0e 0f       	add	r16, r30
    26d4:	1f 1f       	adc	r17, r31
    26d6:	93 94       	inc	r9
    26d8:	98 ee       	ldi	r25, 0xE8	; 232
    26da:	49 0e       	add	r4, r25
    26dc:	93 e0       	ldi	r25, 0x03	; 3
    26de:	59 1e       	adc	r5, r25
    26e0:	61 1c       	adc	r6, r1
    26e2:	71 1c       	adc	r7, r1
    26e4:	da cf       	rjmp	.-76     	; 0x269a <_ZN16PololuQTRSensors8readLineEPjhh+0x36>
    26e6:	31 10       	cpse	r3, r1
    26e8:	1e c0       	rjmp	.+60     	; 0x2726 <_ZN16PololuQTRSensors8readLineEPjhh+0xc2>
    26ea:	49 2d       	mov	r20, r9
    26ec:	50 e0       	ldi	r21, 0x00	; 0
    26ee:	41 50       	subi	r20, 0x01	; 1
    26f0:	51 09       	sbc	r21, r1
    26f2:	24 ef       	ldi	r18, 0xF4	; 244
    26f4:	31 e0       	ldi	r19, 0x01	; 1
    26f6:	42 9f       	mul	r20, r18
    26f8:	c0 01       	movw	r24, r0
    26fa:	43 9f       	mul	r20, r19
    26fc:	90 0d       	add	r25, r0
    26fe:	52 9f       	mul	r21, r18
    2700:	90 0d       	add	r25, r0
    2702:	11 24       	eor	r1, r1
    2704:	20 91 97 02 	lds	r18, 0x0297
    2708:	30 91 98 02 	lds	r19, 0x0298
    270c:	28 17       	cp	r18, r24
    270e:	39 07       	cpc	r19, r25
    2710:	b4 f0       	brlt	.+44     	; 0x273e <_ZN16PololuQTRSensors8readLineEPjhh+0xda>
    2712:	88 ee       	ldi	r24, 0xE8	; 232
    2714:	93 e0       	ldi	r25, 0x03	; 3
    2716:	48 9f       	mul	r20, r24
    2718:	90 01       	movw	r18, r0
    271a:	49 9f       	mul	r20, r25
    271c:	30 0d       	add	r19, r0
    271e:	58 9f       	mul	r21, r24
    2720:	30 0d       	add	r19, r0
    2722:	11 24       	eor	r1, r1
    2724:	0e c0       	rjmp	.+28     	; 0x2742 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    2726:	98 01       	movw	r18, r16
    2728:	40 e0       	ldi	r20, 0x00	; 0
    272a:	50 e0       	ldi	r21, 0x00	; 0
    272c:	c7 01       	movw	r24, r14
    272e:	b6 01       	movw	r22, r12
    2730:	0e 94 f9 13 	call	0x27f2	; 0x27f2 <__udivmodsi4>
    2734:	30 93 98 02 	sts	0x0298, r19
    2738:	20 93 97 02 	sts	0x0297, r18
    273c:	02 c0       	rjmp	.+4      	; 0x2742 <_ZN16PololuQTRSensors8readLineEPjhh+0xde>
    273e:	20 e0       	ldi	r18, 0x00	; 0
    2740:	30 e0       	ldi	r19, 0x00	; 0
    2742:	c9 01       	movw	r24, r18
    2744:	cd b7       	in	r28, 0x3d	; 61
    2746:	de b7       	in	r29, 0x3e	; 62
    2748:	e2 e1       	ldi	r30, 0x12	; 18
    274a:	0c 94 78 14 	jmp	0x28f0	; 0x28f0 <__epilogue_restores__>

0000274e <_ZN16PololuQTRSensorsD1Ev>:
    274e:	cf 93       	push	r28
    2750:	df 93       	push	r29
    2752:	ec 01       	movw	r28, r24
    2754:	8a 81       	ldd	r24, Y+2	; 0x02
    2756:	9b 81       	ldd	r25, Y+3	; 0x03
    2758:	00 97       	sbiw	r24, 0x00	; 0
    275a:	11 f0       	breq	.+4      	; 0x2760 <_ZN16PololuQTRSensorsD1Ev+0x12>
    275c:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <free>
    2760:	8e 81       	ldd	r24, Y+6	; 0x06
    2762:	9f 81       	ldd	r25, Y+7	; 0x07
    2764:	00 97       	sbiw	r24, 0x00	; 0
    2766:	11 f0       	breq	.+4      	; 0x276c <_ZN16PololuQTRSensorsD1Ev+0x1e>
    2768:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <free>
    276c:	88 81       	ld	r24, Y
    276e:	99 81       	ldd	r25, Y+1	; 0x01
    2770:	00 97       	sbiw	r24, 0x00	; 0
    2772:	11 f0       	breq	.+4      	; 0x2778 <_ZN16PololuQTRSensorsD1Ev+0x2a>
    2774:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <free>
    2778:	8c 81       	ldd	r24, Y+4	; 0x04
    277a:	9d 81       	ldd	r25, Y+5	; 0x05
    277c:	00 97       	sbiw	r24, 0x00	; 0
    277e:	11 f0       	breq	.+4      	; 0x2784 <_ZN16PololuQTRSensorsD1Ev+0x36>
    2780:	0e 94 2e 15 	call	0x2a5c	; 0x2a5c <free>
    2784:	df 91       	pop	r29
    2786:	cf 91       	pop	r28
    2788:	08 95       	ret

0000278a <__udivmodqi4>:
    278a:	99 1b       	sub	r25, r25
    278c:	79 e0       	ldi	r23, 0x09	; 9
    278e:	04 c0       	rjmp	.+8      	; 0x2798 <__udivmodqi4_ep>

00002790 <__udivmodqi4_loop>:
    2790:	99 1f       	adc	r25, r25
    2792:	96 17       	cp	r25, r22
    2794:	08 f0       	brcs	.+2      	; 0x2798 <__udivmodqi4_ep>
    2796:	96 1b       	sub	r25, r22

00002798 <__udivmodqi4_ep>:
    2798:	88 1f       	adc	r24, r24
    279a:	7a 95       	dec	r23
    279c:	c9 f7       	brne	.-14     	; 0x2790 <__udivmodqi4_loop>
    279e:	80 95       	com	r24
    27a0:	08 95       	ret

000027a2 <__udivmodhi4>:
    27a2:	aa 1b       	sub	r26, r26
    27a4:	bb 1b       	sub	r27, r27
    27a6:	51 e1       	ldi	r21, 0x11	; 17
    27a8:	07 c0       	rjmp	.+14     	; 0x27b8 <__udivmodhi4_ep>

000027aa <__udivmodhi4_loop>:
    27aa:	aa 1f       	adc	r26, r26
    27ac:	bb 1f       	adc	r27, r27
    27ae:	a6 17       	cp	r26, r22
    27b0:	b7 07       	cpc	r27, r23
    27b2:	10 f0       	brcs	.+4      	; 0x27b8 <__udivmodhi4_ep>
    27b4:	a6 1b       	sub	r26, r22
    27b6:	b7 0b       	sbc	r27, r23

000027b8 <__udivmodhi4_ep>:
    27b8:	88 1f       	adc	r24, r24
    27ba:	99 1f       	adc	r25, r25
    27bc:	5a 95       	dec	r21
    27be:	a9 f7       	brne	.-22     	; 0x27aa <__udivmodhi4_loop>
    27c0:	80 95       	com	r24
    27c2:	90 95       	com	r25
    27c4:	bc 01       	movw	r22, r24
    27c6:	cd 01       	movw	r24, r26
    27c8:	08 95       	ret

000027ca <__divmodhi4>:
    27ca:	97 fb       	bst	r25, 7
    27cc:	07 2e       	mov	r0, r23
    27ce:	16 f4       	brtc	.+4      	; 0x27d4 <__divmodhi4+0xa>
    27d0:	00 94       	com	r0
    27d2:	07 d0       	rcall	.+14     	; 0x27e2 <__divmodhi4_neg1>
    27d4:	77 fd       	sbrc	r23, 7
    27d6:	09 d0       	rcall	.+18     	; 0x27ea <__divmodhi4_neg2>
    27d8:	0e 94 d1 13 	call	0x27a2	; 0x27a2 <__udivmodhi4>
    27dc:	07 fc       	sbrc	r0, 7
    27de:	05 d0       	rcall	.+10     	; 0x27ea <__divmodhi4_neg2>
    27e0:	3e f4       	brtc	.+14     	; 0x27f0 <__divmodhi4_exit>

000027e2 <__divmodhi4_neg1>:
    27e2:	90 95       	com	r25
    27e4:	81 95       	neg	r24
    27e6:	9f 4f       	sbci	r25, 0xFF	; 255
    27e8:	08 95       	ret

000027ea <__divmodhi4_neg2>:
    27ea:	70 95       	com	r23
    27ec:	61 95       	neg	r22
    27ee:	7f 4f       	sbci	r23, 0xFF	; 255

000027f0 <__divmodhi4_exit>:
    27f0:	08 95       	ret

000027f2 <__udivmodsi4>:
    27f2:	a1 e2       	ldi	r26, 0x21	; 33
    27f4:	1a 2e       	mov	r1, r26
    27f6:	aa 1b       	sub	r26, r26
    27f8:	bb 1b       	sub	r27, r27
    27fa:	fd 01       	movw	r30, r26
    27fc:	0d c0       	rjmp	.+26     	; 0x2818 <__udivmodsi4_ep>

000027fe <__udivmodsi4_loop>:
    27fe:	aa 1f       	adc	r26, r26
    2800:	bb 1f       	adc	r27, r27
    2802:	ee 1f       	adc	r30, r30
    2804:	ff 1f       	adc	r31, r31
    2806:	a2 17       	cp	r26, r18
    2808:	b3 07       	cpc	r27, r19
    280a:	e4 07       	cpc	r30, r20
    280c:	f5 07       	cpc	r31, r21
    280e:	20 f0       	brcs	.+8      	; 0x2818 <__udivmodsi4_ep>
    2810:	a2 1b       	sub	r26, r18
    2812:	b3 0b       	sbc	r27, r19
    2814:	e4 0b       	sbc	r30, r20
    2816:	f5 0b       	sbc	r31, r21

00002818 <__udivmodsi4_ep>:
    2818:	66 1f       	adc	r22, r22
    281a:	77 1f       	adc	r23, r23
    281c:	88 1f       	adc	r24, r24
    281e:	99 1f       	adc	r25, r25
    2820:	1a 94       	dec	r1
    2822:	69 f7       	brne	.-38     	; 0x27fe <__udivmodsi4_loop>
    2824:	60 95       	com	r22
    2826:	70 95       	com	r23
    2828:	80 95       	com	r24
    282a:	90 95       	com	r25
    282c:	9b 01       	movw	r18, r22
    282e:	ac 01       	movw	r20, r24
    2830:	bd 01       	movw	r22, r26
    2832:	cf 01       	movw	r24, r30
    2834:	08 95       	ret

00002836 <__divmodsi4>:
    2836:	05 2e       	mov	r0, r21
    2838:	97 fb       	bst	r25, 7
    283a:	1e f4       	brtc	.+6      	; 0x2842 <__divmodsi4+0xc>
    283c:	00 94       	com	r0
    283e:	0e 94 32 14 	call	0x2864	; 0x2864 <__negsi2>
    2842:	57 fd       	sbrc	r21, 7
    2844:	07 d0       	rcall	.+14     	; 0x2854 <__divmodsi4_neg2>
    2846:	0e 94 f9 13 	call	0x27f2	; 0x27f2 <__udivmodsi4>
    284a:	07 fc       	sbrc	r0, 7
    284c:	03 d0       	rcall	.+6      	; 0x2854 <__divmodsi4_neg2>
    284e:	4e f4       	brtc	.+18     	; 0x2862 <__divmodsi4_exit>
    2850:	0c 94 32 14 	jmp	0x2864	; 0x2864 <__negsi2>

00002854 <__divmodsi4_neg2>:
    2854:	50 95       	com	r21
    2856:	40 95       	com	r20
    2858:	30 95       	com	r19
    285a:	21 95       	neg	r18
    285c:	3f 4f       	sbci	r19, 0xFF	; 255
    285e:	4f 4f       	sbci	r20, 0xFF	; 255
    2860:	5f 4f       	sbci	r21, 0xFF	; 255

00002862 <__divmodsi4_exit>:
    2862:	08 95       	ret

00002864 <__negsi2>:
    2864:	90 95       	com	r25
    2866:	80 95       	com	r24
    2868:	70 95       	com	r23
    286a:	61 95       	neg	r22
    286c:	7f 4f       	sbci	r23, 0xFF	; 255
    286e:	8f 4f       	sbci	r24, 0xFF	; 255
    2870:	9f 4f       	sbci	r25, 0xFF	; 255
    2872:	08 95       	ret

00002874 <__umulhisi3>:
    2874:	a2 9f       	mul	r26, r18
    2876:	b0 01       	movw	r22, r0
    2878:	b3 9f       	mul	r27, r19
    287a:	c0 01       	movw	r24, r0
    287c:	a3 9f       	mul	r26, r19
    287e:	70 0d       	add	r23, r0
    2880:	81 1d       	adc	r24, r1
    2882:	11 24       	eor	r1, r1
    2884:	91 1d       	adc	r25, r1
    2886:	b2 9f       	mul	r27, r18
    2888:	70 0d       	add	r23, r0
    288a:	81 1d       	adc	r24, r1
    288c:	11 24       	eor	r1, r1
    288e:	91 1d       	adc	r25, r1
    2890:	08 95       	ret

00002892 <__muluhisi3>:
    2892:	0e 94 3a 14 	call	0x2874	; 0x2874 <__umulhisi3>
    2896:	a5 9f       	mul	r26, r21
    2898:	90 0d       	add	r25, r0
    289a:	b4 9f       	mul	r27, r20
    289c:	90 0d       	add	r25, r0
    289e:	a4 9f       	mul	r26, r20
    28a0:	80 0d       	add	r24, r0
    28a2:	91 1d       	adc	r25, r1
    28a4:	11 24       	eor	r1, r1
    28a6:	08 95       	ret

000028a8 <__mulshisi3>:
    28a8:	b7 ff       	sbrs	r27, 7
    28aa:	0c 94 49 14 	jmp	0x2892	; 0x2892 <__muluhisi3>

000028ae <__mulohisi3>:
    28ae:	0e 94 49 14 	call	0x2892	; 0x2892 <__muluhisi3>
    28b2:	82 1b       	sub	r24, r18
    28b4:	93 0b       	sbc	r25, r19
    28b6:	08 95       	ret

000028b8 <__prologue_saves__>:
    28b8:	2f 92       	push	r2
    28ba:	3f 92       	push	r3
    28bc:	4f 92       	push	r4
    28be:	5f 92       	push	r5
    28c0:	6f 92       	push	r6
    28c2:	7f 92       	push	r7
    28c4:	8f 92       	push	r8
    28c6:	9f 92       	push	r9
    28c8:	af 92       	push	r10
    28ca:	bf 92       	push	r11
    28cc:	cf 92       	push	r12
    28ce:	df 92       	push	r13
    28d0:	ef 92       	push	r14
    28d2:	ff 92       	push	r15
    28d4:	0f 93       	push	r16
    28d6:	1f 93       	push	r17
    28d8:	cf 93       	push	r28
    28da:	df 93       	push	r29
    28dc:	cd b7       	in	r28, 0x3d	; 61
    28de:	de b7       	in	r29, 0x3e	; 62
    28e0:	ca 1b       	sub	r28, r26
    28e2:	db 0b       	sbc	r29, r27
    28e4:	0f b6       	in	r0, 0x3f	; 63
    28e6:	f8 94       	cli
    28e8:	de bf       	out	0x3e, r29	; 62
    28ea:	0f be       	out	0x3f, r0	; 63
    28ec:	cd bf       	out	0x3d, r28	; 61
    28ee:	09 94       	ijmp

000028f0 <__epilogue_restores__>:
    28f0:	2a 88       	ldd	r2, Y+18	; 0x12
    28f2:	39 88       	ldd	r3, Y+17	; 0x11
    28f4:	48 88       	ldd	r4, Y+16	; 0x10
    28f6:	5f 84       	ldd	r5, Y+15	; 0x0f
    28f8:	6e 84       	ldd	r6, Y+14	; 0x0e
    28fa:	7d 84       	ldd	r7, Y+13	; 0x0d
    28fc:	8c 84       	ldd	r8, Y+12	; 0x0c
    28fe:	9b 84       	ldd	r9, Y+11	; 0x0b
    2900:	aa 84       	ldd	r10, Y+10	; 0x0a
    2902:	b9 84       	ldd	r11, Y+9	; 0x09
    2904:	c8 84       	ldd	r12, Y+8	; 0x08
    2906:	df 80       	ldd	r13, Y+7	; 0x07
    2908:	ee 80       	ldd	r14, Y+6	; 0x06
    290a:	fd 80       	ldd	r15, Y+5	; 0x05
    290c:	0c 81       	ldd	r16, Y+4	; 0x04
    290e:	1b 81       	ldd	r17, Y+3	; 0x03
    2910:	aa 81       	ldd	r26, Y+2	; 0x02
    2912:	b9 81       	ldd	r27, Y+1	; 0x01
    2914:	ce 0f       	add	r28, r30
    2916:	d1 1d       	adc	r29, r1
    2918:	0f b6       	in	r0, 0x3f	; 63
    291a:	f8 94       	cli
    291c:	de bf       	out	0x3e, r29	; 62
    291e:	0f be       	out	0x3f, r0	; 63
    2920:	cd bf       	out	0x3d, r28	; 61
    2922:	ed 01       	movw	r28, r26
    2924:	08 95       	ret

00002926 <__tablejump2__>:
    2926:	ee 0f       	add	r30, r30
    2928:	ff 1f       	adc	r31, r31
    292a:	05 90       	lpm	r0, Z+
    292c:	f4 91       	lpm	r31, Z
    292e:	e0 2d       	mov	r30, r0
    2930:	09 94       	ijmp

00002932 <malloc>:
    2932:	cf 93       	push	r28
    2934:	df 93       	push	r29
    2936:	82 30       	cpi	r24, 0x02	; 2
    2938:	91 05       	cpc	r25, r1
    293a:	10 f4       	brcc	.+4      	; 0x2940 <malloc+0xe>
    293c:	82 e0       	ldi	r24, 0x02	; 2
    293e:	90 e0       	ldi	r25, 0x00	; 0
    2940:	e0 91 b3 06 	lds	r30, 0x06B3
    2944:	f0 91 b4 06 	lds	r31, 0x06B4
    2948:	20 e0       	ldi	r18, 0x00	; 0
    294a:	30 e0       	ldi	r19, 0x00	; 0
    294c:	c0 e0       	ldi	r28, 0x00	; 0
    294e:	d0 e0       	ldi	r29, 0x00	; 0
    2950:	30 97       	sbiw	r30, 0x00	; 0
    2952:	11 f1       	breq	.+68     	; 0x2998 <malloc+0x66>
    2954:	40 81       	ld	r20, Z
    2956:	51 81       	ldd	r21, Z+1	; 0x01
    2958:	48 17       	cp	r20, r24
    295a:	59 07       	cpc	r21, r25
    295c:	c0 f0       	brcs	.+48     	; 0x298e <malloc+0x5c>
    295e:	48 17       	cp	r20, r24
    2960:	59 07       	cpc	r21, r25
    2962:	61 f4       	brne	.+24     	; 0x297c <malloc+0x4a>
    2964:	82 81       	ldd	r24, Z+2	; 0x02
    2966:	93 81       	ldd	r25, Z+3	; 0x03
    2968:	20 97       	sbiw	r28, 0x00	; 0
    296a:	19 f0       	breq	.+6      	; 0x2972 <malloc+0x40>
    296c:	9b 83       	std	Y+3, r25	; 0x03
    296e:	8a 83       	std	Y+2, r24	; 0x02
    2970:	2b c0       	rjmp	.+86     	; 0x29c8 <malloc+0x96>
    2972:	90 93 b4 06 	sts	0x06B4, r25
    2976:	80 93 b3 06 	sts	0x06B3, r24
    297a:	26 c0       	rjmp	.+76     	; 0x29c8 <malloc+0x96>
    297c:	21 15       	cp	r18, r1
    297e:	31 05       	cpc	r19, r1
    2980:	19 f0       	breq	.+6      	; 0x2988 <malloc+0x56>
    2982:	42 17       	cp	r20, r18
    2984:	53 07       	cpc	r21, r19
    2986:	18 f4       	brcc	.+6      	; 0x298e <malloc+0x5c>
    2988:	9a 01       	movw	r18, r20
    298a:	be 01       	movw	r22, r28
    298c:	df 01       	movw	r26, r30
    298e:	ef 01       	movw	r28, r30
    2990:	02 80       	ldd	r0, Z+2	; 0x02
    2992:	f3 81       	ldd	r31, Z+3	; 0x03
    2994:	e0 2d       	mov	r30, r0
    2996:	dc cf       	rjmp	.-72     	; 0x2950 <malloc+0x1e>
    2998:	21 15       	cp	r18, r1
    299a:	31 05       	cpc	r19, r1
    299c:	09 f1       	breq	.+66     	; 0x29e0 <malloc+0xae>
    299e:	28 1b       	sub	r18, r24
    29a0:	39 0b       	sbc	r19, r25
    29a2:	24 30       	cpi	r18, 0x04	; 4
    29a4:	31 05       	cpc	r19, r1
    29a6:	90 f4       	brcc	.+36     	; 0x29cc <malloc+0x9a>
    29a8:	12 96       	adiw	r26, 0x02	; 2
    29aa:	8d 91       	ld	r24, X+
    29ac:	9c 91       	ld	r25, X
    29ae:	13 97       	sbiw	r26, 0x03	; 3
    29b0:	61 15       	cp	r22, r1
    29b2:	71 05       	cpc	r23, r1
    29b4:	21 f0       	breq	.+8      	; 0x29be <malloc+0x8c>
    29b6:	fb 01       	movw	r30, r22
    29b8:	93 83       	std	Z+3, r25	; 0x03
    29ba:	82 83       	std	Z+2, r24	; 0x02
    29bc:	04 c0       	rjmp	.+8      	; 0x29c6 <malloc+0x94>
    29be:	90 93 b4 06 	sts	0x06B4, r25
    29c2:	80 93 b3 06 	sts	0x06B3, r24
    29c6:	fd 01       	movw	r30, r26
    29c8:	32 96       	adiw	r30, 0x02	; 2
    29ca:	44 c0       	rjmp	.+136    	; 0x2a54 <malloc+0x122>
    29cc:	fd 01       	movw	r30, r26
    29ce:	e2 0f       	add	r30, r18
    29d0:	f3 1f       	adc	r31, r19
    29d2:	81 93       	st	Z+, r24
    29d4:	91 93       	st	Z+, r25
    29d6:	22 50       	subi	r18, 0x02	; 2
    29d8:	31 09       	sbc	r19, r1
    29da:	2d 93       	st	X+, r18
    29dc:	3c 93       	st	X, r19
    29de:	3a c0       	rjmp	.+116    	; 0x2a54 <malloc+0x122>
    29e0:	20 91 b1 06 	lds	r18, 0x06B1
    29e4:	30 91 b2 06 	lds	r19, 0x06B2
    29e8:	23 2b       	or	r18, r19
    29ea:	41 f4       	brne	.+16     	; 0x29fc <malloc+0xca>
    29ec:	20 91 0e 01 	lds	r18, 0x010E
    29f0:	30 91 0f 01 	lds	r19, 0x010F
    29f4:	30 93 b2 06 	sts	0x06B2, r19
    29f8:	20 93 b1 06 	sts	0x06B1, r18
    29fc:	20 91 0c 01 	lds	r18, 0x010C
    2a00:	30 91 0d 01 	lds	r19, 0x010D
    2a04:	21 15       	cp	r18, r1
    2a06:	31 05       	cpc	r19, r1
    2a08:	41 f4       	brne	.+16     	; 0x2a1a <malloc+0xe8>
    2a0a:	2d b7       	in	r18, 0x3d	; 61
    2a0c:	3e b7       	in	r19, 0x3e	; 62
    2a0e:	40 91 10 01 	lds	r20, 0x0110
    2a12:	50 91 11 01 	lds	r21, 0x0111
    2a16:	24 1b       	sub	r18, r20
    2a18:	35 0b       	sbc	r19, r21
    2a1a:	e0 91 b1 06 	lds	r30, 0x06B1
    2a1e:	f0 91 b2 06 	lds	r31, 0x06B2
    2a22:	e2 17       	cp	r30, r18
    2a24:	f3 07       	cpc	r31, r19
    2a26:	a0 f4       	brcc	.+40     	; 0x2a50 <malloc+0x11e>
    2a28:	2e 1b       	sub	r18, r30
    2a2a:	3f 0b       	sbc	r19, r31
    2a2c:	28 17       	cp	r18, r24
    2a2e:	39 07       	cpc	r19, r25
    2a30:	78 f0       	brcs	.+30     	; 0x2a50 <malloc+0x11e>
    2a32:	ac 01       	movw	r20, r24
    2a34:	4e 5f       	subi	r20, 0xFE	; 254
    2a36:	5f 4f       	sbci	r21, 0xFF	; 255
    2a38:	24 17       	cp	r18, r20
    2a3a:	35 07       	cpc	r19, r21
    2a3c:	48 f0       	brcs	.+18     	; 0x2a50 <malloc+0x11e>
    2a3e:	4e 0f       	add	r20, r30
    2a40:	5f 1f       	adc	r21, r31
    2a42:	50 93 b2 06 	sts	0x06B2, r21
    2a46:	40 93 b1 06 	sts	0x06B1, r20
    2a4a:	81 93       	st	Z+, r24
    2a4c:	91 93       	st	Z+, r25
    2a4e:	02 c0       	rjmp	.+4      	; 0x2a54 <malloc+0x122>
    2a50:	e0 e0       	ldi	r30, 0x00	; 0
    2a52:	f0 e0       	ldi	r31, 0x00	; 0
    2a54:	cf 01       	movw	r24, r30
    2a56:	df 91       	pop	r29
    2a58:	cf 91       	pop	r28
    2a5a:	08 95       	ret

00002a5c <free>:
    2a5c:	0f 93       	push	r16
    2a5e:	1f 93       	push	r17
    2a60:	cf 93       	push	r28
    2a62:	df 93       	push	r29
    2a64:	00 97       	sbiw	r24, 0x00	; 0
    2a66:	09 f4       	brne	.+2      	; 0x2a6a <free+0xe>
    2a68:	8c c0       	rjmp	.+280    	; 0x2b82 <free+0x126>
    2a6a:	fc 01       	movw	r30, r24
    2a6c:	32 97       	sbiw	r30, 0x02	; 2
    2a6e:	13 82       	std	Z+3, r1	; 0x03
    2a70:	12 82       	std	Z+2, r1	; 0x02
    2a72:	00 91 b3 06 	lds	r16, 0x06B3
    2a76:	10 91 b4 06 	lds	r17, 0x06B4
    2a7a:	01 15       	cp	r16, r1
    2a7c:	11 05       	cpc	r17, r1
    2a7e:	81 f4       	brne	.+32     	; 0x2aa0 <free+0x44>
    2a80:	20 81       	ld	r18, Z
    2a82:	31 81       	ldd	r19, Z+1	; 0x01
    2a84:	82 0f       	add	r24, r18
    2a86:	93 1f       	adc	r25, r19
    2a88:	20 91 b1 06 	lds	r18, 0x06B1
    2a8c:	30 91 b2 06 	lds	r19, 0x06B2
    2a90:	28 17       	cp	r18, r24
    2a92:	39 07       	cpc	r19, r25
    2a94:	79 f5       	brne	.+94     	; 0x2af4 <free+0x98>
    2a96:	f0 93 b2 06 	sts	0x06B2, r31
    2a9a:	e0 93 b1 06 	sts	0x06B1, r30
    2a9e:	71 c0       	rjmp	.+226    	; 0x2b82 <free+0x126>
    2aa0:	d8 01       	movw	r26, r16
    2aa2:	40 e0       	ldi	r20, 0x00	; 0
    2aa4:	50 e0       	ldi	r21, 0x00	; 0
    2aa6:	ae 17       	cp	r26, r30
    2aa8:	bf 07       	cpc	r27, r31
    2aaa:	50 f4       	brcc	.+20     	; 0x2ac0 <free+0x64>
    2aac:	12 96       	adiw	r26, 0x02	; 2
    2aae:	2d 91       	ld	r18, X+
    2ab0:	3c 91       	ld	r19, X
    2ab2:	13 97       	sbiw	r26, 0x03	; 3
    2ab4:	ad 01       	movw	r20, r26
    2ab6:	21 15       	cp	r18, r1
    2ab8:	31 05       	cpc	r19, r1
    2aba:	09 f1       	breq	.+66     	; 0x2afe <free+0xa2>
    2abc:	d9 01       	movw	r26, r18
    2abe:	f3 cf       	rjmp	.-26     	; 0x2aa6 <free+0x4a>
    2ac0:	9d 01       	movw	r18, r26
    2ac2:	da 01       	movw	r26, r20
    2ac4:	33 83       	std	Z+3, r19	; 0x03
    2ac6:	22 83       	std	Z+2, r18	; 0x02
    2ac8:	60 81       	ld	r22, Z
    2aca:	71 81       	ldd	r23, Z+1	; 0x01
    2acc:	86 0f       	add	r24, r22
    2ace:	97 1f       	adc	r25, r23
    2ad0:	82 17       	cp	r24, r18
    2ad2:	93 07       	cpc	r25, r19
    2ad4:	69 f4       	brne	.+26     	; 0x2af0 <free+0x94>
    2ad6:	ec 01       	movw	r28, r24
    2ad8:	28 81       	ld	r18, Y
    2ada:	39 81       	ldd	r19, Y+1	; 0x01
    2adc:	26 0f       	add	r18, r22
    2ade:	37 1f       	adc	r19, r23
    2ae0:	2e 5f       	subi	r18, 0xFE	; 254
    2ae2:	3f 4f       	sbci	r19, 0xFF	; 255
    2ae4:	31 83       	std	Z+1, r19	; 0x01
    2ae6:	20 83       	st	Z, r18
    2ae8:	8a 81       	ldd	r24, Y+2	; 0x02
    2aea:	9b 81       	ldd	r25, Y+3	; 0x03
    2aec:	93 83       	std	Z+3, r25	; 0x03
    2aee:	82 83       	std	Z+2, r24	; 0x02
    2af0:	45 2b       	or	r20, r21
    2af2:	29 f4       	brne	.+10     	; 0x2afe <free+0xa2>
    2af4:	f0 93 b4 06 	sts	0x06B4, r31
    2af8:	e0 93 b3 06 	sts	0x06B3, r30
    2afc:	42 c0       	rjmp	.+132    	; 0x2b82 <free+0x126>
    2afe:	13 96       	adiw	r26, 0x03	; 3
    2b00:	fc 93       	st	X, r31
    2b02:	ee 93       	st	-X, r30
    2b04:	12 97       	sbiw	r26, 0x02	; 2
    2b06:	ed 01       	movw	r28, r26
    2b08:	49 91       	ld	r20, Y+
    2b0a:	59 91       	ld	r21, Y+
    2b0c:	9e 01       	movw	r18, r28
    2b0e:	24 0f       	add	r18, r20
    2b10:	35 1f       	adc	r19, r21
    2b12:	e2 17       	cp	r30, r18
    2b14:	f3 07       	cpc	r31, r19
    2b16:	71 f4       	brne	.+28     	; 0x2b34 <free+0xd8>
    2b18:	80 81       	ld	r24, Z
    2b1a:	91 81       	ldd	r25, Z+1	; 0x01
    2b1c:	84 0f       	add	r24, r20
    2b1e:	95 1f       	adc	r25, r21
    2b20:	02 96       	adiw	r24, 0x02	; 2
    2b22:	11 96       	adiw	r26, 0x01	; 1
    2b24:	9c 93       	st	X, r25
    2b26:	8e 93       	st	-X, r24
    2b28:	82 81       	ldd	r24, Z+2	; 0x02
    2b2a:	93 81       	ldd	r25, Z+3	; 0x03
    2b2c:	13 96       	adiw	r26, 0x03	; 3
    2b2e:	9c 93       	st	X, r25
    2b30:	8e 93       	st	-X, r24
    2b32:	12 97       	sbiw	r26, 0x02	; 2
    2b34:	e0 e0       	ldi	r30, 0x00	; 0
    2b36:	f0 e0       	ldi	r31, 0x00	; 0
    2b38:	d8 01       	movw	r26, r16
    2b3a:	12 96       	adiw	r26, 0x02	; 2
    2b3c:	8d 91       	ld	r24, X+
    2b3e:	9c 91       	ld	r25, X
    2b40:	13 97       	sbiw	r26, 0x03	; 3
    2b42:	00 97       	sbiw	r24, 0x00	; 0
    2b44:	19 f0       	breq	.+6      	; 0x2b4c <free+0xf0>
    2b46:	f8 01       	movw	r30, r16
    2b48:	8c 01       	movw	r16, r24
    2b4a:	f6 cf       	rjmp	.-20     	; 0x2b38 <free+0xdc>
    2b4c:	8d 91       	ld	r24, X+
    2b4e:	9c 91       	ld	r25, X
    2b50:	98 01       	movw	r18, r16
    2b52:	2e 5f       	subi	r18, 0xFE	; 254
    2b54:	3f 4f       	sbci	r19, 0xFF	; 255
    2b56:	82 0f       	add	r24, r18
    2b58:	93 1f       	adc	r25, r19
    2b5a:	20 91 b1 06 	lds	r18, 0x06B1
    2b5e:	30 91 b2 06 	lds	r19, 0x06B2
    2b62:	28 17       	cp	r18, r24
    2b64:	39 07       	cpc	r19, r25
    2b66:	69 f4       	brne	.+26     	; 0x2b82 <free+0x126>
    2b68:	30 97       	sbiw	r30, 0x00	; 0
    2b6a:	29 f4       	brne	.+10     	; 0x2b76 <free+0x11a>
    2b6c:	10 92 b4 06 	sts	0x06B4, r1
    2b70:	10 92 b3 06 	sts	0x06B3, r1
    2b74:	02 c0       	rjmp	.+4      	; 0x2b7a <free+0x11e>
    2b76:	13 82       	std	Z+3, r1	; 0x03
    2b78:	12 82       	std	Z+2, r1	; 0x02
    2b7a:	10 93 b2 06 	sts	0x06B2, r17
    2b7e:	00 93 b1 06 	sts	0x06B1, r16
    2b82:	df 91       	pop	r29
    2b84:	cf 91       	pop	r28
    2b86:	1f 91       	pop	r17
    2b88:	0f 91       	pop	r16
    2b8a:	08 95       	ret

00002b8c <fdevopen>:
    2b8c:	0f 93       	push	r16
    2b8e:	1f 93       	push	r17
    2b90:	cf 93       	push	r28
    2b92:	df 93       	push	r29
    2b94:	00 97       	sbiw	r24, 0x00	; 0
    2b96:	31 f4       	brne	.+12     	; 0x2ba4 <fdevopen+0x18>
    2b98:	61 15       	cp	r22, r1
    2b9a:	71 05       	cpc	r23, r1
    2b9c:	19 f4       	brne	.+6      	; 0x2ba4 <fdevopen+0x18>
    2b9e:	80 e0       	ldi	r24, 0x00	; 0
    2ba0:	90 e0       	ldi	r25, 0x00	; 0
    2ba2:	3a c0       	rjmp	.+116    	; 0x2c18 <fdevopen+0x8c>
    2ba4:	8b 01       	movw	r16, r22
    2ba6:	ec 01       	movw	r28, r24
    2ba8:	6e e0       	ldi	r22, 0x0E	; 14
    2baa:	70 e0       	ldi	r23, 0x00	; 0
    2bac:	81 e0       	ldi	r24, 0x01	; 1
    2bae:	90 e0       	ldi	r25, 0x00	; 0
    2bb0:	0e 94 29 18 	call	0x3052	; 0x3052 <calloc>
    2bb4:	fc 01       	movw	r30, r24
    2bb6:	89 2b       	or	r24, r25
    2bb8:	91 f3       	breq	.-28     	; 0x2b9e <fdevopen+0x12>
    2bba:	80 e8       	ldi	r24, 0x80	; 128
    2bbc:	83 83       	std	Z+3, r24	; 0x03
    2bbe:	01 15       	cp	r16, r1
    2bc0:	11 05       	cpc	r17, r1
    2bc2:	71 f0       	breq	.+28     	; 0x2be0 <fdevopen+0x54>
    2bc4:	13 87       	std	Z+11, r17	; 0x0b
    2bc6:	02 87       	std	Z+10, r16	; 0x0a
    2bc8:	81 e8       	ldi	r24, 0x81	; 129
    2bca:	83 83       	std	Z+3, r24	; 0x03
    2bcc:	80 91 b5 06 	lds	r24, 0x06B5
    2bd0:	90 91 b6 06 	lds	r25, 0x06B6
    2bd4:	89 2b       	or	r24, r25
    2bd6:	21 f4       	brne	.+8      	; 0x2be0 <fdevopen+0x54>
    2bd8:	f0 93 b6 06 	sts	0x06B6, r31
    2bdc:	e0 93 b5 06 	sts	0x06B5, r30
    2be0:	20 97       	sbiw	r28, 0x00	; 0
    2be2:	c9 f0       	breq	.+50     	; 0x2c16 <fdevopen+0x8a>
    2be4:	d1 87       	std	Z+9, r29	; 0x09
    2be6:	c0 87       	std	Z+8, r28	; 0x08
    2be8:	83 81       	ldd	r24, Z+3	; 0x03
    2bea:	82 60       	ori	r24, 0x02	; 2
    2bec:	83 83       	std	Z+3, r24	; 0x03
    2bee:	80 91 b7 06 	lds	r24, 0x06B7
    2bf2:	90 91 b8 06 	lds	r25, 0x06B8
    2bf6:	89 2b       	or	r24, r25
    2bf8:	71 f4       	brne	.+28     	; 0x2c16 <fdevopen+0x8a>
    2bfa:	f0 93 b8 06 	sts	0x06B8, r31
    2bfe:	e0 93 b7 06 	sts	0x06B7, r30
    2c02:	80 91 b9 06 	lds	r24, 0x06B9
    2c06:	90 91 ba 06 	lds	r25, 0x06BA
    2c0a:	89 2b       	or	r24, r25
    2c0c:	21 f4       	brne	.+8      	; 0x2c16 <fdevopen+0x8a>
    2c0e:	f0 93 ba 06 	sts	0x06BA, r31
    2c12:	e0 93 b9 06 	sts	0x06B9, r30
    2c16:	cf 01       	movw	r24, r30
    2c18:	df 91       	pop	r29
    2c1a:	cf 91       	pop	r28
    2c1c:	1f 91       	pop	r17
    2c1e:	0f 91       	pop	r16
    2c20:	08 95       	ret

00002c22 <printf>:
    2c22:	a0 e0       	ldi	r26, 0x00	; 0
    2c24:	b0 e0       	ldi	r27, 0x00	; 0
    2c26:	e7 e1       	ldi	r30, 0x17	; 23
    2c28:	f6 e1       	ldi	r31, 0x16	; 22
    2c2a:	0c 94 6c 14 	jmp	0x28d8	; 0x28d8 <__prologue_saves__+0x20>
    2c2e:	ae 01       	movw	r20, r28
    2c30:	4b 5f       	subi	r20, 0xFB	; 251
    2c32:	5f 4f       	sbci	r21, 0xFF	; 255
    2c34:	fa 01       	movw	r30, r20
    2c36:	61 91       	ld	r22, Z+
    2c38:	71 91       	ld	r23, Z+
    2c3a:	af 01       	movw	r20, r30
    2c3c:	80 91 b7 06 	lds	r24, 0x06B7
    2c40:	90 91 b8 06 	lds	r25, 0x06B8
    2c44:	0e 94 57 16 	call	0x2cae	; 0x2cae <vfprintf>
    2c48:	e2 e0       	ldi	r30, 0x02	; 2
    2c4a:	0c 94 88 14 	jmp	0x2910	; 0x2910 <__epilogue_restores__+0x20>

00002c4e <puts>:
    2c4e:	0f 93       	push	r16
    2c50:	1f 93       	push	r17
    2c52:	cf 93       	push	r28
    2c54:	df 93       	push	r29
    2c56:	e0 91 b7 06 	lds	r30, 0x06B7
    2c5a:	f0 91 b8 06 	lds	r31, 0x06B8
    2c5e:	23 81       	ldd	r18, Z+3	; 0x03
    2c60:	21 ff       	sbrs	r18, 1
    2c62:	1b c0       	rjmp	.+54     	; 0x2c9a <puts+0x4c>
    2c64:	8c 01       	movw	r16, r24
    2c66:	d0 e0       	ldi	r29, 0x00	; 0
    2c68:	c0 e0       	ldi	r28, 0x00	; 0
    2c6a:	f8 01       	movw	r30, r16
    2c6c:	81 91       	ld	r24, Z+
    2c6e:	8f 01       	movw	r16, r30
    2c70:	60 91 b7 06 	lds	r22, 0x06B7
    2c74:	70 91 b8 06 	lds	r23, 0x06B8
    2c78:	db 01       	movw	r26, r22
    2c7a:	18 96       	adiw	r26, 0x08	; 8
    2c7c:	ed 91       	ld	r30, X+
    2c7e:	fc 91       	ld	r31, X
    2c80:	19 97       	sbiw	r26, 0x09	; 9
    2c82:	88 23       	and	r24, r24
    2c84:	31 f0       	breq	.+12     	; 0x2c92 <puts+0x44>
    2c86:	09 95       	icall
    2c88:	89 2b       	or	r24, r25
    2c8a:	79 f3       	breq	.-34     	; 0x2c6a <puts+0x1c>
    2c8c:	df ef       	ldi	r29, 0xFF	; 255
    2c8e:	cf ef       	ldi	r28, 0xFF	; 255
    2c90:	ec cf       	rjmp	.-40     	; 0x2c6a <puts+0x1c>
    2c92:	8a e0       	ldi	r24, 0x0A	; 10
    2c94:	09 95       	icall
    2c96:	89 2b       	or	r24, r25
    2c98:	19 f0       	breq	.+6      	; 0x2ca0 <puts+0x52>
    2c9a:	8f ef       	ldi	r24, 0xFF	; 255
    2c9c:	9f ef       	ldi	r25, 0xFF	; 255
    2c9e:	02 c0       	rjmp	.+4      	; 0x2ca4 <puts+0x56>
    2ca0:	8d 2f       	mov	r24, r29
    2ca2:	9c 2f       	mov	r25, r28
    2ca4:	df 91       	pop	r29
    2ca6:	cf 91       	pop	r28
    2ca8:	1f 91       	pop	r17
    2caa:	0f 91       	pop	r16
    2cac:	08 95       	ret

00002cae <vfprintf>:
    2cae:	ac e0       	ldi	r26, 0x0C	; 12
    2cb0:	b0 e0       	ldi	r27, 0x00	; 0
    2cb2:	ed e5       	ldi	r30, 0x5D	; 93
    2cb4:	f6 e1       	ldi	r31, 0x16	; 22
    2cb6:	0c 94 5c 14 	jmp	0x28b8	; 0x28b8 <__prologue_saves__>
    2cba:	7c 01       	movw	r14, r24
    2cbc:	6b 01       	movw	r12, r22
    2cbe:	8a 01       	movw	r16, r20
    2cc0:	fc 01       	movw	r30, r24
    2cc2:	17 82       	std	Z+7, r1	; 0x07
    2cc4:	16 82       	std	Z+6, r1	; 0x06
    2cc6:	83 81       	ldd	r24, Z+3	; 0x03
    2cc8:	81 ff       	sbrs	r24, 1
    2cca:	bd c1       	rjmp	.+890    	; 0x3046 <vfprintf+0x398>
    2ccc:	ce 01       	movw	r24, r28
    2cce:	01 96       	adiw	r24, 0x01	; 1
    2cd0:	4c 01       	movw	r8, r24
    2cd2:	f7 01       	movw	r30, r14
    2cd4:	93 81       	ldd	r25, Z+3	; 0x03
    2cd6:	f6 01       	movw	r30, r12
    2cd8:	93 fd       	sbrc	r25, 3
    2cda:	85 91       	lpm	r24, Z+
    2cdc:	93 ff       	sbrs	r25, 3
    2cde:	81 91       	ld	r24, Z+
    2ce0:	6f 01       	movw	r12, r30
    2ce2:	88 23       	and	r24, r24
    2ce4:	09 f4       	brne	.+2      	; 0x2ce8 <vfprintf+0x3a>
    2ce6:	ab c1       	rjmp	.+854    	; 0x303e <vfprintf+0x390>
    2ce8:	85 32       	cpi	r24, 0x25	; 37
    2cea:	39 f4       	brne	.+14     	; 0x2cfa <vfprintf+0x4c>
    2cec:	93 fd       	sbrc	r25, 3
    2cee:	85 91       	lpm	r24, Z+
    2cf0:	93 ff       	sbrs	r25, 3
    2cf2:	81 91       	ld	r24, Z+
    2cf4:	6f 01       	movw	r12, r30
    2cf6:	85 32       	cpi	r24, 0x25	; 37
    2cf8:	29 f4       	brne	.+10     	; 0x2d04 <vfprintf+0x56>
    2cfa:	b7 01       	movw	r22, r14
    2cfc:	90 e0       	ldi	r25, 0x00	; 0
    2cfe:	0e 94 62 18 	call	0x30c4	; 0x30c4 <fputc>
    2d02:	e7 cf       	rjmp	.-50     	; 0x2cd2 <vfprintf+0x24>
    2d04:	51 2c       	mov	r5, r1
    2d06:	31 2c       	mov	r3, r1
    2d08:	20 e0       	ldi	r18, 0x00	; 0
    2d0a:	20 32       	cpi	r18, 0x20	; 32
    2d0c:	a0 f4       	brcc	.+40     	; 0x2d36 <vfprintf+0x88>
    2d0e:	8b 32       	cpi	r24, 0x2B	; 43
    2d10:	69 f0       	breq	.+26     	; 0x2d2c <vfprintf+0x7e>
    2d12:	30 f4       	brcc	.+12     	; 0x2d20 <vfprintf+0x72>
    2d14:	80 32       	cpi	r24, 0x20	; 32
    2d16:	59 f0       	breq	.+22     	; 0x2d2e <vfprintf+0x80>
    2d18:	83 32       	cpi	r24, 0x23	; 35
    2d1a:	69 f4       	brne	.+26     	; 0x2d36 <vfprintf+0x88>
    2d1c:	20 61       	ori	r18, 0x10	; 16
    2d1e:	2c c0       	rjmp	.+88     	; 0x2d78 <vfprintf+0xca>
    2d20:	8d 32       	cpi	r24, 0x2D	; 45
    2d22:	39 f0       	breq	.+14     	; 0x2d32 <vfprintf+0x84>
    2d24:	80 33       	cpi	r24, 0x30	; 48
    2d26:	39 f4       	brne	.+14     	; 0x2d36 <vfprintf+0x88>
    2d28:	21 60       	ori	r18, 0x01	; 1
    2d2a:	26 c0       	rjmp	.+76     	; 0x2d78 <vfprintf+0xca>
    2d2c:	22 60       	ori	r18, 0x02	; 2
    2d2e:	24 60       	ori	r18, 0x04	; 4
    2d30:	23 c0       	rjmp	.+70     	; 0x2d78 <vfprintf+0xca>
    2d32:	28 60       	ori	r18, 0x08	; 8
    2d34:	21 c0       	rjmp	.+66     	; 0x2d78 <vfprintf+0xca>
    2d36:	27 fd       	sbrc	r18, 7
    2d38:	27 c0       	rjmp	.+78     	; 0x2d88 <vfprintf+0xda>
    2d3a:	30 ed       	ldi	r19, 0xD0	; 208
    2d3c:	38 0f       	add	r19, r24
    2d3e:	3a 30       	cpi	r19, 0x0A	; 10
    2d40:	78 f4       	brcc	.+30     	; 0x2d60 <vfprintf+0xb2>
    2d42:	26 ff       	sbrs	r18, 6
    2d44:	06 c0       	rjmp	.+12     	; 0x2d52 <vfprintf+0xa4>
    2d46:	fa e0       	ldi	r31, 0x0A	; 10
    2d48:	5f 9e       	mul	r5, r31
    2d4a:	30 0d       	add	r19, r0
    2d4c:	11 24       	eor	r1, r1
    2d4e:	53 2e       	mov	r5, r19
    2d50:	13 c0       	rjmp	.+38     	; 0x2d78 <vfprintf+0xca>
    2d52:	8a e0       	ldi	r24, 0x0A	; 10
    2d54:	38 9e       	mul	r3, r24
    2d56:	30 0d       	add	r19, r0
    2d58:	11 24       	eor	r1, r1
    2d5a:	33 2e       	mov	r3, r19
    2d5c:	20 62       	ori	r18, 0x20	; 32
    2d5e:	0c c0       	rjmp	.+24     	; 0x2d78 <vfprintf+0xca>
    2d60:	8e 32       	cpi	r24, 0x2E	; 46
    2d62:	21 f4       	brne	.+8      	; 0x2d6c <vfprintf+0xbe>
    2d64:	26 fd       	sbrc	r18, 6
    2d66:	6b c1       	rjmp	.+726    	; 0x303e <vfprintf+0x390>
    2d68:	20 64       	ori	r18, 0x40	; 64
    2d6a:	06 c0       	rjmp	.+12     	; 0x2d78 <vfprintf+0xca>
    2d6c:	8c 36       	cpi	r24, 0x6C	; 108
    2d6e:	11 f4       	brne	.+4      	; 0x2d74 <vfprintf+0xc6>
    2d70:	20 68       	ori	r18, 0x80	; 128
    2d72:	02 c0       	rjmp	.+4      	; 0x2d78 <vfprintf+0xca>
    2d74:	88 36       	cpi	r24, 0x68	; 104
    2d76:	41 f4       	brne	.+16     	; 0x2d88 <vfprintf+0xda>
    2d78:	f6 01       	movw	r30, r12
    2d7a:	93 fd       	sbrc	r25, 3
    2d7c:	85 91       	lpm	r24, Z+
    2d7e:	93 ff       	sbrs	r25, 3
    2d80:	81 91       	ld	r24, Z+
    2d82:	6f 01       	movw	r12, r30
    2d84:	81 11       	cpse	r24, r1
    2d86:	c1 cf       	rjmp	.-126    	; 0x2d0a <vfprintf+0x5c>
    2d88:	98 2f       	mov	r25, r24
    2d8a:	9f 7d       	andi	r25, 0xDF	; 223
    2d8c:	95 54       	subi	r25, 0x45	; 69
    2d8e:	93 30       	cpi	r25, 0x03	; 3
    2d90:	28 f4       	brcc	.+10     	; 0x2d9c <vfprintf+0xee>
    2d92:	0c 5f       	subi	r16, 0xFC	; 252
    2d94:	1f 4f       	sbci	r17, 0xFF	; 255
    2d96:	ff e3       	ldi	r31, 0x3F	; 63
    2d98:	f9 83       	std	Y+1, r31	; 0x01
    2d9a:	0d c0       	rjmp	.+26     	; 0x2db6 <vfprintf+0x108>
    2d9c:	83 36       	cpi	r24, 0x63	; 99
    2d9e:	31 f0       	breq	.+12     	; 0x2dac <vfprintf+0xfe>
    2da0:	83 37       	cpi	r24, 0x73	; 115
    2da2:	71 f0       	breq	.+28     	; 0x2dc0 <vfprintf+0x112>
    2da4:	83 35       	cpi	r24, 0x53	; 83
    2da6:	09 f0       	breq	.+2      	; 0x2daa <vfprintf+0xfc>
    2da8:	5b c0       	rjmp	.+182    	; 0x2e60 <vfprintf+0x1b2>
    2daa:	22 c0       	rjmp	.+68     	; 0x2df0 <vfprintf+0x142>
    2dac:	f8 01       	movw	r30, r16
    2dae:	80 81       	ld	r24, Z
    2db0:	89 83       	std	Y+1, r24	; 0x01
    2db2:	0e 5f       	subi	r16, 0xFE	; 254
    2db4:	1f 4f       	sbci	r17, 0xFF	; 255
    2db6:	44 24       	eor	r4, r4
    2db8:	43 94       	inc	r4
    2dba:	51 2c       	mov	r5, r1
    2dbc:	54 01       	movw	r10, r8
    2dbe:	15 c0       	rjmp	.+42     	; 0x2dea <vfprintf+0x13c>
    2dc0:	38 01       	movw	r6, r16
    2dc2:	f2 e0       	ldi	r31, 0x02	; 2
    2dc4:	6f 0e       	add	r6, r31
    2dc6:	71 1c       	adc	r7, r1
    2dc8:	f8 01       	movw	r30, r16
    2dca:	a0 80       	ld	r10, Z
    2dcc:	b1 80       	ldd	r11, Z+1	; 0x01
    2dce:	26 ff       	sbrs	r18, 6
    2dd0:	03 c0       	rjmp	.+6      	; 0x2dd8 <vfprintf+0x12a>
    2dd2:	65 2d       	mov	r22, r5
    2dd4:	70 e0       	ldi	r23, 0x00	; 0
    2dd6:	02 c0       	rjmp	.+4      	; 0x2ddc <vfprintf+0x12e>
    2dd8:	6f ef       	ldi	r22, 0xFF	; 255
    2dda:	7f ef       	ldi	r23, 0xFF	; 255
    2ddc:	c5 01       	movw	r24, r10
    2dde:	2c 87       	std	Y+12, r18	; 0x0c
    2de0:	0e 94 57 18 	call	0x30ae	; 0x30ae <strnlen>
    2de4:	2c 01       	movw	r4, r24
    2de6:	83 01       	movw	r16, r6
    2de8:	2c 85       	ldd	r18, Y+12	; 0x0c
    2dea:	2f 77       	andi	r18, 0x7F	; 127
    2dec:	22 2e       	mov	r2, r18
    2dee:	17 c0       	rjmp	.+46     	; 0x2e1e <vfprintf+0x170>
    2df0:	38 01       	movw	r6, r16
    2df2:	f2 e0       	ldi	r31, 0x02	; 2
    2df4:	6f 0e       	add	r6, r31
    2df6:	71 1c       	adc	r7, r1
    2df8:	f8 01       	movw	r30, r16
    2dfa:	a0 80       	ld	r10, Z
    2dfc:	b1 80       	ldd	r11, Z+1	; 0x01
    2dfe:	26 ff       	sbrs	r18, 6
    2e00:	03 c0       	rjmp	.+6      	; 0x2e08 <vfprintf+0x15a>
    2e02:	65 2d       	mov	r22, r5
    2e04:	70 e0       	ldi	r23, 0x00	; 0
    2e06:	02 c0       	rjmp	.+4      	; 0x2e0c <vfprintf+0x15e>
    2e08:	6f ef       	ldi	r22, 0xFF	; 255
    2e0a:	7f ef       	ldi	r23, 0xFF	; 255
    2e0c:	c5 01       	movw	r24, r10
    2e0e:	2c 87       	std	Y+12, r18	; 0x0c
    2e10:	0e 94 45 18 	call	0x308a	; 0x308a <strnlen_P>
    2e14:	2c 01       	movw	r4, r24
    2e16:	2c 85       	ldd	r18, Y+12	; 0x0c
    2e18:	20 68       	ori	r18, 0x80	; 128
    2e1a:	22 2e       	mov	r2, r18
    2e1c:	83 01       	movw	r16, r6
    2e1e:	23 fc       	sbrc	r2, 3
    2e20:	1b c0       	rjmp	.+54     	; 0x2e58 <vfprintf+0x1aa>
    2e22:	83 2d       	mov	r24, r3
    2e24:	90 e0       	ldi	r25, 0x00	; 0
    2e26:	48 16       	cp	r4, r24
    2e28:	59 06       	cpc	r5, r25
    2e2a:	b0 f4       	brcc	.+44     	; 0x2e58 <vfprintf+0x1aa>
    2e2c:	b7 01       	movw	r22, r14
    2e2e:	80 e2       	ldi	r24, 0x20	; 32
    2e30:	90 e0       	ldi	r25, 0x00	; 0
    2e32:	0e 94 62 18 	call	0x30c4	; 0x30c4 <fputc>
    2e36:	3a 94       	dec	r3
    2e38:	f4 cf       	rjmp	.-24     	; 0x2e22 <vfprintf+0x174>
    2e3a:	f5 01       	movw	r30, r10
    2e3c:	27 fc       	sbrc	r2, 7
    2e3e:	85 91       	lpm	r24, Z+
    2e40:	27 fe       	sbrs	r2, 7
    2e42:	81 91       	ld	r24, Z+
    2e44:	5f 01       	movw	r10, r30
    2e46:	b7 01       	movw	r22, r14
    2e48:	90 e0       	ldi	r25, 0x00	; 0
    2e4a:	0e 94 62 18 	call	0x30c4	; 0x30c4 <fputc>
    2e4e:	31 10       	cpse	r3, r1
    2e50:	3a 94       	dec	r3
    2e52:	f1 e0       	ldi	r31, 0x01	; 1
    2e54:	4f 1a       	sub	r4, r31
    2e56:	51 08       	sbc	r5, r1
    2e58:	41 14       	cp	r4, r1
    2e5a:	51 04       	cpc	r5, r1
    2e5c:	71 f7       	brne	.-36     	; 0x2e3a <vfprintf+0x18c>
    2e5e:	e5 c0       	rjmp	.+458    	; 0x302a <vfprintf+0x37c>
    2e60:	84 36       	cpi	r24, 0x64	; 100
    2e62:	11 f0       	breq	.+4      	; 0x2e68 <vfprintf+0x1ba>
    2e64:	89 36       	cpi	r24, 0x69	; 105
    2e66:	39 f5       	brne	.+78     	; 0x2eb6 <vfprintf+0x208>
    2e68:	f8 01       	movw	r30, r16
    2e6a:	27 ff       	sbrs	r18, 7
    2e6c:	07 c0       	rjmp	.+14     	; 0x2e7c <vfprintf+0x1ce>
    2e6e:	60 81       	ld	r22, Z
    2e70:	71 81       	ldd	r23, Z+1	; 0x01
    2e72:	82 81       	ldd	r24, Z+2	; 0x02
    2e74:	93 81       	ldd	r25, Z+3	; 0x03
    2e76:	0c 5f       	subi	r16, 0xFC	; 252
    2e78:	1f 4f       	sbci	r17, 0xFF	; 255
    2e7a:	08 c0       	rjmp	.+16     	; 0x2e8c <vfprintf+0x1de>
    2e7c:	60 81       	ld	r22, Z
    2e7e:	71 81       	ldd	r23, Z+1	; 0x01
    2e80:	07 2e       	mov	r0, r23
    2e82:	00 0c       	add	r0, r0
    2e84:	88 0b       	sbc	r24, r24
    2e86:	99 0b       	sbc	r25, r25
    2e88:	0e 5f       	subi	r16, 0xFE	; 254
    2e8a:	1f 4f       	sbci	r17, 0xFF	; 255
    2e8c:	2f 76       	andi	r18, 0x6F	; 111
    2e8e:	72 2e       	mov	r7, r18
    2e90:	97 ff       	sbrs	r25, 7
    2e92:	09 c0       	rjmp	.+18     	; 0x2ea6 <vfprintf+0x1f8>
    2e94:	90 95       	com	r25
    2e96:	80 95       	com	r24
    2e98:	70 95       	com	r23
    2e9a:	61 95       	neg	r22
    2e9c:	7f 4f       	sbci	r23, 0xFF	; 255
    2e9e:	8f 4f       	sbci	r24, 0xFF	; 255
    2ea0:	9f 4f       	sbci	r25, 0xFF	; 255
    2ea2:	20 68       	ori	r18, 0x80	; 128
    2ea4:	72 2e       	mov	r7, r18
    2ea6:	2a e0       	ldi	r18, 0x0A	; 10
    2ea8:	30 e0       	ldi	r19, 0x00	; 0
    2eaa:	a4 01       	movw	r20, r8
    2eac:	0e 94 9a 18 	call	0x3134	; 0x3134 <__ultoa_invert>
    2eb0:	a8 2e       	mov	r10, r24
    2eb2:	a8 18       	sub	r10, r8
    2eb4:	44 c0       	rjmp	.+136    	; 0x2f3e <vfprintf+0x290>
    2eb6:	85 37       	cpi	r24, 0x75	; 117
    2eb8:	29 f4       	brne	.+10     	; 0x2ec4 <vfprintf+0x216>
    2eba:	2f 7e       	andi	r18, 0xEF	; 239
    2ebc:	b2 2e       	mov	r11, r18
    2ebe:	2a e0       	ldi	r18, 0x0A	; 10
    2ec0:	30 e0       	ldi	r19, 0x00	; 0
    2ec2:	25 c0       	rjmp	.+74     	; 0x2f0e <vfprintf+0x260>
    2ec4:	f2 2f       	mov	r31, r18
    2ec6:	f9 7f       	andi	r31, 0xF9	; 249
    2ec8:	bf 2e       	mov	r11, r31
    2eca:	8f 36       	cpi	r24, 0x6F	; 111
    2ecc:	c1 f0       	breq	.+48     	; 0x2efe <vfprintf+0x250>
    2ece:	18 f4       	brcc	.+6      	; 0x2ed6 <vfprintf+0x228>
    2ed0:	88 35       	cpi	r24, 0x58	; 88
    2ed2:	79 f0       	breq	.+30     	; 0x2ef2 <vfprintf+0x244>
    2ed4:	b4 c0       	rjmp	.+360    	; 0x303e <vfprintf+0x390>
    2ed6:	80 37       	cpi	r24, 0x70	; 112
    2ed8:	19 f0       	breq	.+6      	; 0x2ee0 <vfprintf+0x232>
    2eda:	88 37       	cpi	r24, 0x78	; 120
    2edc:	21 f0       	breq	.+8      	; 0x2ee6 <vfprintf+0x238>
    2ede:	af c0       	rjmp	.+350    	; 0x303e <vfprintf+0x390>
    2ee0:	2f 2f       	mov	r18, r31
    2ee2:	20 61       	ori	r18, 0x10	; 16
    2ee4:	b2 2e       	mov	r11, r18
    2ee6:	b4 fe       	sbrs	r11, 4
    2ee8:	0d c0       	rjmp	.+26     	; 0x2f04 <vfprintf+0x256>
    2eea:	8b 2d       	mov	r24, r11
    2eec:	84 60       	ori	r24, 0x04	; 4
    2eee:	b8 2e       	mov	r11, r24
    2ef0:	09 c0       	rjmp	.+18     	; 0x2f04 <vfprintf+0x256>
    2ef2:	24 ff       	sbrs	r18, 4
    2ef4:	0a c0       	rjmp	.+20     	; 0x2f0a <vfprintf+0x25c>
    2ef6:	9f 2f       	mov	r25, r31
    2ef8:	96 60       	ori	r25, 0x06	; 6
    2efa:	b9 2e       	mov	r11, r25
    2efc:	06 c0       	rjmp	.+12     	; 0x2f0a <vfprintf+0x25c>
    2efe:	28 e0       	ldi	r18, 0x08	; 8
    2f00:	30 e0       	ldi	r19, 0x00	; 0
    2f02:	05 c0       	rjmp	.+10     	; 0x2f0e <vfprintf+0x260>
    2f04:	20 e1       	ldi	r18, 0x10	; 16
    2f06:	30 e0       	ldi	r19, 0x00	; 0
    2f08:	02 c0       	rjmp	.+4      	; 0x2f0e <vfprintf+0x260>
    2f0a:	20 e1       	ldi	r18, 0x10	; 16
    2f0c:	32 e0       	ldi	r19, 0x02	; 2
    2f0e:	f8 01       	movw	r30, r16
    2f10:	b7 fe       	sbrs	r11, 7
    2f12:	07 c0       	rjmp	.+14     	; 0x2f22 <vfprintf+0x274>
    2f14:	60 81       	ld	r22, Z
    2f16:	71 81       	ldd	r23, Z+1	; 0x01
    2f18:	82 81       	ldd	r24, Z+2	; 0x02
    2f1a:	93 81       	ldd	r25, Z+3	; 0x03
    2f1c:	0c 5f       	subi	r16, 0xFC	; 252
    2f1e:	1f 4f       	sbci	r17, 0xFF	; 255
    2f20:	06 c0       	rjmp	.+12     	; 0x2f2e <vfprintf+0x280>
    2f22:	60 81       	ld	r22, Z
    2f24:	71 81       	ldd	r23, Z+1	; 0x01
    2f26:	80 e0       	ldi	r24, 0x00	; 0
    2f28:	90 e0       	ldi	r25, 0x00	; 0
    2f2a:	0e 5f       	subi	r16, 0xFE	; 254
    2f2c:	1f 4f       	sbci	r17, 0xFF	; 255
    2f2e:	a4 01       	movw	r20, r8
    2f30:	0e 94 9a 18 	call	0x3134	; 0x3134 <__ultoa_invert>
    2f34:	a8 2e       	mov	r10, r24
    2f36:	a8 18       	sub	r10, r8
    2f38:	fb 2d       	mov	r31, r11
    2f3a:	ff 77       	andi	r31, 0x7F	; 127
    2f3c:	7f 2e       	mov	r7, r31
    2f3e:	76 fe       	sbrs	r7, 6
    2f40:	0b c0       	rjmp	.+22     	; 0x2f58 <vfprintf+0x2aa>
    2f42:	37 2d       	mov	r19, r7
    2f44:	3e 7f       	andi	r19, 0xFE	; 254
    2f46:	a5 14       	cp	r10, r5
    2f48:	50 f4       	brcc	.+20     	; 0x2f5e <vfprintf+0x2b0>
    2f4a:	74 fe       	sbrs	r7, 4
    2f4c:	0a c0       	rjmp	.+20     	; 0x2f62 <vfprintf+0x2b4>
    2f4e:	72 fc       	sbrc	r7, 2
    2f50:	08 c0       	rjmp	.+16     	; 0x2f62 <vfprintf+0x2b4>
    2f52:	37 2d       	mov	r19, r7
    2f54:	3e 7e       	andi	r19, 0xEE	; 238
    2f56:	05 c0       	rjmp	.+10     	; 0x2f62 <vfprintf+0x2b4>
    2f58:	ba 2c       	mov	r11, r10
    2f5a:	37 2d       	mov	r19, r7
    2f5c:	03 c0       	rjmp	.+6      	; 0x2f64 <vfprintf+0x2b6>
    2f5e:	ba 2c       	mov	r11, r10
    2f60:	01 c0       	rjmp	.+2      	; 0x2f64 <vfprintf+0x2b6>
    2f62:	b5 2c       	mov	r11, r5
    2f64:	34 ff       	sbrs	r19, 4
    2f66:	0d c0       	rjmp	.+26     	; 0x2f82 <vfprintf+0x2d4>
    2f68:	fe 01       	movw	r30, r28
    2f6a:	ea 0d       	add	r30, r10
    2f6c:	f1 1d       	adc	r31, r1
    2f6e:	80 81       	ld	r24, Z
    2f70:	80 33       	cpi	r24, 0x30	; 48
    2f72:	11 f4       	brne	.+4      	; 0x2f78 <vfprintf+0x2ca>
    2f74:	39 7e       	andi	r19, 0xE9	; 233
    2f76:	09 c0       	rjmp	.+18     	; 0x2f8a <vfprintf+0x2dc>
    2f78:	32 ff       	sbrs	r19, 2
    2f7a:	06 c0       	rjmp	.+12     	; 0x2f88 <vfprintf+0x2da>
    2f7c:	b3 94       	inc	r11
    2f7e:	b3 94       	inc	r11
    2f80:	04 c0       	rjmp	.+8      	; 0x2f8a <vfprintf+0x2dc>
    2f82:	83 2f       	mov	r24, r19
    2f84:	86 78       	andi	r24, 0x86	; 134
    2f86:	09 f0       	breq	.+2      	; 0x2f8a <vfprintf+0x2dc>
    2f88:	b3 94       	inc	r11
    2f8a:	33 fd       	sbrc	r19, 3
    2f8c:	13 c0       	rjmp	.+38     	; 0x2fb4 <vfprintf+0x306>
    2f8e:	30 ff       	sbrs	r19, 0
    2f90:	06 c0       	rjmp	.+12     	; 0x2f9e <vfprintf+0x2f0>
    2f92:	5a 2c       	mov	r5, r10
    2f94:	b3 14       	cp	r11, r3
    2f96:	18 f4       	brcc	.+6      	; 0x2f9e <vfprintf+0x2f0>
    2f98:	53 0c       	add	r5, r3
    2f9a:	5b 18       	sub	r5, r11
    2f9c:	b3 2c       	mov	r11, r3
    2f9e:	b3 14       	cp	r11, r3
    2fa0:	68 f4       	brcc	.+26     	; 0x2fbc <vfprintf+0x30e>
    2fa2:	b7 01       	movw	r22, r14
    2fa4:	80 e2       	ldi	r24, 0x20	; 32
    2fa6:	90 e0       	ldi	r25, 0x00	; 0
    2fa8:	3c 87       	std	Y+12, r19	; 0x0c
    2faa:	0e 94 62 18 	call	0x30c4	; 0x30c4 <fputc>
    2fae:	b3 94       	inc	r11
    2fb0:	3c 85       	ldd	r19, Y+12	; 0x0c
    2fb2:	f5 cf       	rjmp	.-22     	; 0x2f9e <vfprintf+0x2f0>
    2fb4:	b3 14       	cp	r11, r3
    2fb6:	10 f4       	brcc	.+4      	; 0x2fbc <vfprintf+0x30e>
    2fb8:	3b 18       	sub	r3, r11
    2fba:	01 c0       	rjmp	.+2      	; 0x2fbe <vfprintf+0x310>
    2fbc:	31 2c       	mov	r3, r1
    2fbe:	34 ff       	sbrs	r19, 4
    2fc0:	12 c0       	rjmp	.+36     	; 0x2fe6 <vfprintf+0x338>
    2fc2:	b7 01       	movw	r22, r14
    2fc4:	80 e3       	ldi	r24, 0x30	; 48
    2fc6:	90 e0       	ldi	r25, 0x00	; 0
    2fc8:	3c 87       	std	Y+12, r19	; 0x0c
    2fca:	0e 94 62 18 	call	0x30c4	; 0x30c4 <fputc>
    2fce:	3c 85       	ldd	r19, Y+12	; 0x0c
    2fd0:	32 ff       	sbrs	r19, 2
    2fd2:	17 c0       	rjmp	.+46     	; 0x3002 <vfprintf+0x354>
    2fd4:	31 fd       	sbrc	r19, 1
    2fd6:	03 c0       	rjmp	.+6      	; 0x2fde <vfprintf+0x330>
    2fd8:	88 e7       	ldi	r24, 0x78	; 120
    2fda:	90 e0       	ldi	r25, 0x00	; 0
    2fdc:	02 c0       	rjmp	.+4      	; 0x2fe2 <vfprintf+0x334>
    2fde:	88 e5       	ldi	r24, 0x58	; 88
    2fe0:	90 e0       	ldi	r25, 0x00	; 0
    2fe2:	b7 01       	movw	r22, r14
    2fe4:	0c c0       	rjmp	.+24     	; 0x2ffe <vfprintf+0x350>
    2fe6:	83 2f       	mov	r24, r19
    2fe8:	86 78       	andi	r24, 0x86	; 134
    2fea:	59 f0       	breq	.+22     	; 0x3002 <vfprintf+0x354>
    2fec:	31 ff       	sbrs	r19, 1
    2fee:	02 c0       	rjmp	.+4      	; 0x2ff4 <vfprintf+0x346>
    2ff0:	8b e2       	ldi	r24, 0x2B	; 43
    2ff2:	01 c0       	rjmp	.+2      	; 0x2ff6 <vfprintf+0x348>
    2ff4:	80 e2       	ldi	r24, 0x20	; 32
    2ff6:	37 fd       	sbrc	r19, 7
    2ff8:	8d e2       	ldi	r24, 0x2D	; 45
    2ffa:	b7 01       	movw	r22, r14
    2ffc:	90 e0       	ldi	r25, 0x00	; 0
    2ffe:	0e 94 62 18 	call	0x30c4	; 0x30c4 <fputc>
    3002:	a5 14       	cp	r10, r5
    3004:	38 f4       	brcc	.+14     	; 0x3014 <vfprintf+0x366>
    3006:	b7 01       	movw	r22, r14
    3008:	80 e3       	ldi	r24, 0x30	; 48
    300a:	90 e0       	ldi	r25, 0x00	; 0
    300c:	0e 94 62 18 	call	0x30c4	; 0x30c4 <fputc>
    3010:	5a 94       	dec	r5
    3012:	f7 cf       	rjmp	.-18     	; 0x3002 <vfprintf+0x354>
    3014:	aa 94       	dec	r10
    3016:	f4 01       	movw	r30, r8
    3018:	ea 0d       	add	r30, r10
    301a:	f1 1d       	adc	r31, r1
    301c:	80 81       	ld	r24, Z
    301e:	b7 01       	movw	r22, r14
    3020:	90 e0       	ldi	r25, 0x00	; 0
    3022:	0e 94 62 18 	call	0x30c4	; 0x30c4 <fputc>
    3026:	a1 10       	cpse	r10, r1
    3028:	f5 cf       	rjmp	.-22     	; 0x3014 <vfprintf+0x366>
    302a:	33 20       	and	r3, r3
    302c:	09 f4       	brne	.+2      	; 0x3030 <vfprintf+0x382>
    302e:	51 ce       	rjmp	.-862    	; 0x2cd2 <vfprintf+0x24>
    3030:	b7 01       	movw	r22, r14
    3032:	80 e2       	ldi	r24, 0x20	; 32
    3034:	90 e0       	ldi	r25, 0x00	; 0
    3036:	0e 94 62 18 	call	0x30c4	; 0x30c4 <fputc>
    303a:	3a 94       	dec	r3
    303c:	f6 cf       	rjmp	.-20     	; 0x302a <vfprintf+0x37c>
    303e:	f7 01       	movw	r30, r14
    3040:	86 81       	ldd	r24, Z+6	; 0x06
    3042:	97 81       	ldd	r25, Z+7	; 0x07
    3044:	02 c0       	rjmp	.+4      	; 0x304a <vfprintf+0x39c>
    3046:	8f ef       	ldi	r24, 0xFF	; 255
    3048:	9f ef       	ldi	r25, 0xFF	; 255
    304a:	2c 96       	adiw	r28, 0x0c	; 12
    304c:	e2 e1       	ldi	r30, 0x12	; 18
    304e:	0c 94 78 14 	jmp	0x28f0	; 0x28f0 <__epilogue_restores__>

00003052 <calloc>:
    3052:	0f 93       	push	r16
    3054:	1f 93       	push	r17
    3056:	cf 93       	push	r28
    3058:	df 93       	push	r29
    305a:	86 9f       	mul	r24, r22
    305c:	80 01       	movw	r16, r0
    305e:	87 9f       	mul	r24, r23
    3060:	10 0d       	add	r17, r0
    3062:	96 9f       	mul	r25, r22
    3064:	10 0d       	add	r17, r0
    3066:	11 24       	eor	r1, r1
    3068:	c8 01       	movw	r24, r16
    306a:	0e 94 99 14 	call	0x2932	; 0x2932 <malloc>
    306e:	ec 01       	movw	r28, r24
    3070:	00 97       	sbiw	r24, 0x00	; 0
    3072:	29 f0       	breq	.+10     	; 0x307e <calloc+0x2c>
    3074:	a8 01       	movw	r20, r16
    3076:	60 e0       	ldi	r22, 0x00	; 0
    3078:	70 e0       	ldi	r23, 0x00	; 0
    307a:	0e 94 50 18 	call	0x30a0	; 0x30a0 <memset>
    307e:	ce 01       	movw	r24, r28
    3080:	df 91       	pop	r29
    3082:	cf 91       	pop	r28
    3084:	1f 91       	pop	r17
    3086:	0f 91       	pop	r16
    3088:	08 95       	ret

0000308a <strnlen_P>:
    308a:	fc 01       	movw	r30, r24
    308c:	05 90       	lpm	r0, Z+
    308e:	61 50       	subi	r22, 0x01	; 1
    3090:	70 40       	sbci	r23, 0x00	; 0
    3092:	01 10       	cpse	r0, r1
    3094:	d8 f7       	brcc	.-10     	; 0x308c <strnlen_P+0x2>
    3096:	80 95       	com	r24
    3098:	90 95       	com	r25
    309a:	8e 0f       	add	r24, r30
    309c:	9f 1f       	adc	r25, r31
    309e:	08 95       	ret

000030a0 <memset>:
    30a0:	dc 01       	movw	r26, r24
    30a2:	01 c0       	rjmp	.+2      	; 0x30a6 <memset+0x6>
    30a4:	6d 93       	st	X+, r22
    30a6:	41 50       	subi	r20, 0x01	; 1
    30a8:	50 40       	sbci	r21, 0x00	; 0
    30aa:	e0 f7       	brcc	.-8      	; 0x30a4 <memset+0x4>
    30ac:	08 95       	ret

000030ae <strnlen>:
    30ae:	fc 01       	movw	r30, r24
    30b0:	61 50       	subi	r22, 0x01	; 1
    30b2:	70 40       	sbci	r23, 0x00	; 0
    30b4:	01 90       	ld	r0, Z+
    30b6:	01 10       	cpse	r0, r1
    30b8:	d8 f7       	brcc	.-10     	; 0x30b0 <strnlen+0x2>
    30ba:	80 95       	com	r24
    30bc:	90 95       	com	r25
    30be:	8e 0f       	add	r24, r30
    30c0:	9f 1f       	adc	r25, r31
    30c2:	08 95       	ret

000030c4 <fputc>:
    30c4:	0f 93       	push	r16
    30c6:	1f 93       	push	r17
    30c8:	cf 93       	push	r28
    30ca:	df 93       	push	r29
    30cc:	fb 01       	movw	r30, r22
    30ce:	23 81       	ldd	r18, Z+3	; 0x03
    30d0:	21 fd       	sbrc	r18, 1
    30d2:	03 c0       	rjmp	.+6      	; 0x30da <fputc+0x16>
    30d4:	8f ef       	ldi	r24, 0xFF	; 255
    30d6:	9f ef       	ldi	r25, 0xFF	; 255
    30d8:	28 c0       	rjmp	.+80     	; 0x312a <fputc+0x66>
    30da:	22 ff       	sbrs	r18, 2
    30dc:	16 c0       	rjmp	.+44     	; 0x310a <fputc+0x46>
    30de:	46 81       	ldd	r20, Z+6	; 0x06
    30e0:	57 81       	ldd	r21, Z+7	; 0x07
    30e2:	24 81       	ldd	r18, Z+4	; 0x04
    30e4:	35 81       	ldd	r19, Z+5	; 0x05
    30e6:	42 17       	cp	r20, r18
    30e8:	53 07       	cpc	r21, r19
    30ea:	44 f4       	brge	.+16     	; 0x30fc <fputc+0x38>
    30ec:	a0 81       	ld	r26, Z
    30ee:	b1 81       	ldd	r27, Z+1	; 0x01
    30f0:	9d 01       	movw	r18, r26
    30f2:	2f 5f       	subi	r18, 0xFF	; 255
    30f4:	3f 4f       	sbci	r19, 0xFF	; 255
    30f6:	31 83       	std	Z+1, r19	; 0x01
    30f8:	20 83       	st	Z, r18
    30fa:	8c 93       	st	X, r24
    30fc:	26 81       	ldd	r18, Z+6	; 0x06
    30fe:	37 81       	ldd	r19, Z+7	; 0x07
    3100:	2f 5f       	subi	r18, 0xFF	; 255
    3102:	3f 4f       	sbci	r19, 0xFF	; 255
    3104:	37 83       	std	Z+7, r19	; 0x07
    3106:	26 83       	std	Z+6, r18	; 0x06
    3108:	10 c0       	rjmp	.+32     	; 0x312a <fputc+0x66>
    310a:	eb 01       	movw	r28, r22
    310c:	09 2f       	mov	r16, r25
    310e:	18 2f       	mov	r17, r24
    3110:	00 84       	ldd	r0, Z+8	; 0x08
    3112:	f1 85       	ldd	r31, Z+9	; 0x09
    3114:	e0 2d       	mov	r30, r0
    3116:	09 95       	icall
    3118:	89 2b       	or	r24, r25
    311a:	e1 f6       	brne	.-72     	; 0x30d4 <fputc+0x10>
    311c:	8e 81       	ldd	r24, Y+6	; 0x06
    311e:	9f 81       	ldd	r25, Y+7	; 0x07
    3120:	01 96       	adiw	r24, 0x01	; 1
    3122:	9f 83       	std	Y+7, r25	; 0x07
    3124:	8e 83       	std	Y+6, r24	; 0x06
    3126:	81 2f       	mov	r24, r17
    3128:	90 2f       	mov	r25, r16
    312a:	df 91       	pop	r29
    312c:	cf 91       	pop	r28
    312e:	1f 91       	pop	r17
    3130:	0f 91       	pop	r16
    3132:	08 95       	ret

00003134 <__ultoa_invert>:
    3134:	fa 01       	movw	r30, r20
    3136:	aa 27       	eor	r26, r26
    3138:	28 30       	cpi	r18, 0x08	; 8
    313a:	51 f1       	breq	.+84     	; 0x3190 <__ultoa_invert+0x5c>
    313c:	20 31       	cpi	r18, 0x10	; 16
    313e:	81 f1       	breq	.+96     	; 0x31a0 <__ultoa_invert+0x6c>
    3140:	e8 94       	clt
    3142:	6f 93       	push	r22
    3144:	6e 7f       	andi	r22, 0xFE	; 254
    3146:	6e 5f       	subi	r22, 0xFE	; 254
    3148:	7f 4f       	sbci	r23, 0xFF	; 255
    314a:	8f 4f       	sbci	r24, 0xFF	; 255
    314c:	9f 4f       	sbci	r25, 0xFF	; 255
    314e:	af 4f       	sbci	r26, 0xFF	; 255
    3150:	b1 e0       	ldi	r27, 0x01	; 1
    3152:	3e d0       	rcall	.+124    	; 0x31d0 <__ultoa_invert+0x9c>
    3154:	b4 e0       	ldi	r27, 0x04	; 4
    3156:	3c d0       	rcall	.+120    	; 0x31d0 <__ultoa_invert+0x9c>
    3158:	67 0f       	add	r22, r23
    315a:	78 1f       	adc	r23, r24
    315c:	89 1f       	adc	r24, r25
    315e:	9a 1f       	adc	r25, r26
    3160:	a1 1d       	adc	r26, r1
    3162:	68 0f       	add	r22, r24
    3164:	79 1f       	adc	r23, r25
    3166:	8a 1f       	adc	r24, r26
    3168:	91 1d       	adc	r25, r1
    316a:	a1 1d       	adc	r26, r1
    316c:	6a 0f       	add	r22, r26
    316e:	71 1d       	adc	r23, r1
    3170:	81 1d       	adc	r24, r1
    3172:	91 1d       	adc	r25, r1
    3174:	a1 1d       	adc	r26, r1
    3176:	20 d0       	rcall	.+64     	; 0x31b8 <__ultoa_invert+0x84>
    3178:	09 f4       	brne	.+2      	; 0x317c <__ultoa_invert+0x48>
    317a:	68 94       	set
    317c:	3f 91       	pop	r19
    317e:	2a e0       	ldi	r18, 0x0A	; 10
    3180:	26 9f       	mul	r18, r22
    3182:	11 24       	eor	r1, r1
    3184:	30 19       	sub	r19, r0
    3186:	30 5d       	subi	r19, 0xD0	; 208
    3188:	31 93       	st	Z+, r19
    318a:	de f6       	brtc	.-74     	; 0x3142 <__ultoa_invert+0xe>
    318c:	cf 01       	movw	r24, r30
    318e:	08 95       	ret
    3190:	46 2f       	mov	r20, r22
    3192:	47 70       	andi	r20, 0x07	; 7
    3194:	40 5d       	subi	r20, 0xD0	; 208
    3196:	41 93       	st	Z+, r20
    3198:	b3 e0       	ldi	r27, 0x03	; 3
    319a:	0f d0       	rcall	.+30     	; 0x31ba <__ultoa_invert+0x86>
    319c:	c9 f7       	brne	.-14     	; 0x3190 <__ultoa_invert+0x5c>
    319e:	f6 cf       	rjmp	.-20     	; 0x318c <__ultoa_invert+0x58>
    31a0:	46 2f       	mov	r20, r22
    31a2:	4f 70       	andi	r20, 0x0F	; 15
    31a4:	40 5d       	subi	r20, 0xD0	; 208
    31a6:	4a 33       	cpi	r20, 0x3A	; 58
    31a8:	18 f0       	brcs	.+6      	; 0x31b0 <__ultoa_invert+0x7c>
    31aa:	49 5d       	subi	r20, 0xD9	; 217
    31ac:	31 fd       	sbrc	r19, 1
    31ae:	40 52       	subi	r20, 0x20	; 32
    31b0:	41 93       	st	Z+, r20
    31b2:	02 d0       	rcall	.+4      	; 0x31b8 <__ultoa_invert+0x84>
    31b4:	a9 f7       	brne	.-22     	; 0x31a0 <__ultoa_invert+0x6c>
    31b6:	ea cf       	rjmp	.-44     	; 0x318c <__ultoa_invert+0x58>
    31b8:	b4 e0       	ldi	r27, 0x04	; 4
    31ba:	a6 95       	lsr	r26
    31bc:	97 95       	ror	r25
    31be:	87 95       	ror	r24
    31c0:	77 95       	ror	r23
    31c2:	67 95       	ror	r22
    31c4:	ba 95       	dec	r27
    31c6:	c9 f7       	brne	.-14     	; 0x31ba <__ultoa_invert+0x86>
    31c8:	00 97       	sbiw	r24, 0x00	; 0
    31ca:	61 05       	cpc	r22, r1
    31cc:	71 05       	cpc	r23, r1
    31ce:	08 95       	ret
    31d0:	9b 01       	movw	r18, r22
    31d2:	ac 01       	movw	r20, r24
    31d4:	0a 2e       	mov	r0, r26
    31d6:	06 94       	lsr	r0
    31d8:	57 95       	ror	r21
    31da:	47 95       	ror	r20
    31dc:	37 95       	ror	r19
    31de:	27 95       	ror	r18
    31e0:	ba 95       	dec	r27
    31e2:	c9 f7       	brne	.-14     	; 0x31d6 <__ultoa_invert+0xa2>
    31e4:	62 0f       	add	r22, r18
    31e6:	73 1f       	adc	r23, r19
    31e8:	84 1f       	adc	r24, r20
    31ea:	95 1f       	adc	r25, r21
    31ec:	a0 1d       	adc	r26, r0
    31ee:	08 95       	ret

000031f0 <__do_global_dtors>:
    31f0:	10 e0       	ldi	r17, 0x00	; 0
    31f2:	c4 e3       	ldi	r28, 0x34	; 52
    31f4:	d0 e0       	ldi	r29, 0x00	; 0
    31f6:	04 c0       	rjmp	.+8      	; 0x3200 <__do_global_dtors+0x10>
    31f8:	fe 01       	movw	r30, r28
    31fa:	0e 94 93 14 	call	0x2926	; 0x2926 <__tablejump2__>
    31fe:	21 96       	adiw	r28, 0x01	; 1
    3200:	c5 33       	cpi	r28, 0x35	; 53
    3202:	d1 07       	cpc	r29, r17
    3204:	c9 f7       	brne	.-14     	; 0x31f8 <__do_global_dtors+0x8>
    3206:	f8 94       	cli

00003208 <__stop_program>:
    3208:	ff cf       	rjmp	.-2      	; 0x3208 <__stop_program>
